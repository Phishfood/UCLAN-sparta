; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	C:\Users\Simon\Documents\GitHub\Sparta2.0\UCLAN-sparta\Effects11\d3dx11dbg.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_IID_ID3DX11EffectBlendVariable
PUBLIC	_IID_ID3DX11EffectDepthStencilVariable
PUBLIC	_IID_ID3DX11EffectVectorVariable
PUBLIC	_IID_ID3DX11EffectRasterizerVariable
PUBLIC	_IID_ID3DX11EffectMatrixVariable
PUBLIC	?c_InvalidIndex@SType@D3DX11Effects@@2IB	; D3DX11Effects::SType::c_InvalidIndex
PUBLIC	?c_ScalarSize@SType@D3DX11Effects@@2IB		; D3DX11Effects::SType::c_ScalarSize
PUBLIC	?c_ScalarsPerRegister@SType@D3DX11Effects@@2IB	; D3DX11Effects::SType::c_ScalarsPerRegister
PUBLIC	?c_RegisterSize@SType@D3DX11Effects@@2IB	; D3DX11Effects::SType::c_RegisterSize
PUBLIC	_IID_ID3DX11EffectSamplerVariable
PUBLIC	_IID_ID3DX11EffectStringVariable
PUBLIC	_IID_ID3DX11EffectPass
PUBLIC	?D3D11_DEFAULT@@3UCD3D11_DEFAULT@@B		; D3D11_DEFAULT
PUBLIC	_IID_ID3DX11EffectClassInstanceVariable
PUBLIC	_IID_ID3DX11EffectTechnique
PUBLIC	_IID_ID3DX11EffectInterfaceVariable
PUBLIC	_IID_ID3DX11EffectGroup
PUBLIC	_IID_ID3D11ShaderReflectionType
PUBLIC	_IID_ID3DX11Effect
PUBLIC	_IID_ID3D11ShaderReflectionVariable
PUBLIC	_IID_ID3D11ShaderReflectionConstantBuffer
PUBLIC	_IID_ID3DX11EffectShaderResourceVariable
PUBLIC	_IID_ID3D11ShaderReflection
PUBLIC	_IID_ID3D11LibraryReflection
PUBLIC	_IID_ID3DX11EffectUnorderedAccessViewVariable
PUBLIC	_IID_ID3D11FunctionReflection
PUBLIC	_IID_ID3D11FunctionParameterReflection
PUBLIC	_IID_ID3D11Module
PUBLIC	_IID_ID3D11ModuleInstance
PUBLIC	_IID_ID3DX11EffectRenderTargetViewVariable
PUBLIC	_IID_ID3D11Linker
PUBLIC	_IID_ID3D11LinkingNode
PUBLIC	_IID_ID3DX11EffectDepthStencilViewVariable
PUBLIC	_IID_ID3D11FunctionLinkingGraph
PUBLIC	_IID_ID3DX11EffectConstantBuffer
PUBLIC	_IID_ID3DX11EffectType
PUBLIC	?c_IsTBuffer@SBinaryConstantBuffer@D3DX11Effects@@2IB ; D3DX11Effects::SBinaryConstantBuffer::c_IsTBuffer
PUBLIC	?c_IsSingle@SBinaryConstantBuffer@D3DX11Effects@@2IB ; D3DX11Effects::SBinaryConstantBuffer::c_IsSingle
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	_IID_ID3DX11EffectVariable
PUBLIC	_IID_ID3DX11EffectShaderVariable
PUBLIC	_IID_ID3DX11EffectScalarVariable
;	COMDAT _IID_ID3DX11EffectScalarVariable
CONST	SEGMENT
_IID_ID3DX11EffectScalarVariable DD 0921ef2e5H
	DW	0a65dH
	DW	04e92H
	DB	09fH
	DB	0c6H
	DB	04eH
	DB	09cH
	DB	0c0H
	DB	09aH
	DB	04aH
	DB	0deH
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectShaderVariable
CONST	SEGMENT
_IID_ID3DX11EffectShaderVariable DD 07508b344H
	DW	020aH
	DW	04ec7H
	DB	091H
	DB	018H
	DB	062H
	DB	0cdH
	DB	0d3H
	DB	06cH
	DB	088H
	DB	0d7H
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectVariable
CONST	SEGMENT
_IID_ID3DX11EffectVariable DD 036a777dH
	DW	0b56eH
	DW	04b25H
	DB	0b3H
	DB	013H
	DB	0ccH
	DB	03dH
	DB	0daH
	DB	0b7H
	DB	018H
	DB	073H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?c_IsSingle@SBinaryConstantBuffer@D3DX11Effects@@2IB
CONST	SEGMENT
?c_IsSingle@SBinaryConstantBuffer@D3DX11Effects@@2IB DD 02H ; D3DX11Effects::SBinaryConstantBuffer::c_IsSingle
CONST	ENDS
;	COMDAT ?c_IsTBuffer@SBinaryConstantBuffer@D3DX11Effects@@2IB
CONST	SEGMENT
?c_IsTBuffer@SBinaryConstantBuffer@D3DX11Effects@@2IB DD 01H ; D3DX11Effects::SBinaryConstantBuffer::c_IsTBuffer
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectType
CONST	SEGMENT
_IID_ID3DX11EffectType DD 04250d721H
	DW	0d5e5H
	DW	0491fH
	DB	0b6H
	DB	02bH
	DB	058H
	DB	07cH
	DB	043H
	DB	018H
	DB	062H
	DB	085H
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectConstantBuffer
CONST	SEGMENT
_IID_ID3DX11EffectConstantBuffer DD 02cb6c733H
	DW	082d2H
	DW	04000H
	DB	0b3H
	DB	0daH
	DB	062H
	DB	019H
	DB	0d9H
	DB	0a9H
	DB	09bH
	DB	0f2H
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionLinkingGraph
CONST	SEGMENT
_IID_ID3D11FunctionLinkingGraph DD 054133220H
	DW	01ce8H
	DW	043d3H
	DB	082H
	DB	036H
	DB	098H
	DB	055H
	DB	0c5H
	DB	0ceH
	DB	0ecH
	DB	0ffH
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectDepthStencilViewVariable
CONST	SEGMENT
_IID_ID3DX11EffectDepthStencilViewVariable DD 033c648acH
	DW	02e9eH
	DW	04a2eH
	DB	09cH
	DB	0d6H
	DB	0deH
	DB	031H
	DB	0acH
	DB	0c5H
	DB	0b3H
	DB	047H
CONST	ENDS
;	COMDAT _IID_ID3D11LinkingNode
CONST	SEGMENT
_IID_ID3D11LinkingNode DD 0d80dd70cH
	DW	08d2fH
	DW	04751H
	DB	094H
	DB	0a1H
	DB	03H
	DB	0c7H
	DB	09bH
	DB	035H
	DB	056H
	DB	0dbH
CONST	ENDS
;	COMDAT _IID_ID3D11Linker
CONST	SEGMENT
_IID_ID3D11Linker DD 059a6cd0eH
	DW	0e10dH
	DW	04c1fH
	DB	088H
	DB	0c0H
	DB	063H
	DB	0abH
	DB	0a1H
	DB	0daH
	DB	0f3H
	DB	0eH
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectRenderTargetViewVariable
CONST	SEGMENT
_IID_ID3DX11EffectRenderTargetViewVariable DD 0d5066909H
	DW	0f40cH
	DW	043f8H
	DB	09dH
	DB	0b5H
	DB	05H
	DB	07cH
	DB	02aH
	DB	020H
	DB	085H
	DB	052H
CONST	ENDS
;	COMDAT _IID_ID3D11ModuleInstance
CONST	SEGMENT
_IID_ID3D11ModuleInstance DD 0469e07f7H
	DW	045aH
	DW	048d5H
	DB	0aaH
	DB	012H
	DB	068H
	DB	0a4H
	DB	078H
	DB	0cdH
	DB	0f7H
	DB	05dH
CONST	ENDS
;	COMDAT _IID_ID3D11Module
CONST	SEGMENT
_IID_ID3D11Module DD 0cac701eeH
	DW	080fcH
	DW	04122H
	DB	082H
	DB	042H
	DB	010H
	DB	0b3H
	DB	09cH
	DB	08cH
	DB	0ecH
	DB	034H
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionParameterReflection
CONST	SEGMENT
_IID_ID3D11FunctionParameterReflection DD 042757488H
	DW	0334fH
	DW	047feH
	DB	098H
	DB	02eH
	DB	01aH
	DB	065H
	DB	0d0H
	DB	08cH
	DB	0c4H
	DB	062H
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionReflection
CONST	SEGMENT
_IID_ID3D11FunctionReflection DD 0207bcecbH
	DW	0d683H
	DW	04a06H
	DB	0a8H
	DB	0a3H
	DB	09bH
	DB	014H
	DB	09bH
	DB	09fH
	DB	073H
	DB	0a4H
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectUnorderedAccessViewVariable
CONST	SEGMENT
_IID_ID3DX11EffectUnorderedAccessViewVariable DD 079b4ac8cH
	DW	0870aH
	DW	047d2H
	DB	0b0H
	DB	05aH
	DB	08bH
	DB	0d5H
	DB	0ccH
	DB	03eH
	DB	0e6H
	DB	0c9H
CONST	ENDS
;	COMDAT _IID_ID3D11LibraryReflection
CONST	SEGMENT
_IID_ID3D11LibraryReflection DD 054384f1bH
	DW	05b3eH
	DW	04bb7H
	DB	0aeH
	DB	01H
	DB	060H
	DB	0baH
	DB	030H
	DB	097H
	DB	0cbH
	DB	0b6H
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflection
CONST	SEGMENT
_IID_ID3D11ShaderReflection DD 08d536ca1H
	DW	0ccaH
	DW	04956H
	DB	0a8H
	DB	037H
	DB	078H
	DB	069H
	DB	063H
	DB	075H
	DB	055H
	DB	084H
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectShaderResourceVariable
CONST	SEGMENT
_IID_ID3DX11EffectShaderResourceVariable DD 0350db233H
	DW	0bbe0H
	DW	0485cH
	DB	09bH
	DB	0feH
	DB	0c0H
	DB	02H
	DB	06bH
	DB	084H
	DB	04fH
	DB	089H
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionConstantBuffer
CONST	SEGMENT
_IID_ID3D11ShaderReflectionConstantBuffer DD 0eb62d63dH
	DW	093ddH
	DW	04318H
	DB	08aH
	DB	0e8H
	DB	0c6H
	DB	0f8H
	DB	03aH
	DB	0d3H
	DB	071H
	DB	0b8H
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionVariable
CONST	SEGMENT
_IID_ID3D11ShaderReflectionVariable DD 051f23923H
	DW	0f3e5H
	DW	04bd1H
	DB	091H
	DB	0cbH
	DB	060H
	DB	061H
	DB	077H
	DB	0d8H
	DB	0dbH
	DB	04cH
CONST	ENDS
;	COMDAT _IID_ID3DX11Effect
CONST	SEGMENT
_IID_ID3DX11Effect DD 0fa61ca24H
	DW	0e4baH
	DW	04262H
	DB	09dH
	DB	0b8H
	DB	0b1H
	DB	032H
	DB	0e8H
	DB	0caH
	DB	0e3H
	DB	019H
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionType
CONST	SEGMENT
_IID_ID3D11ShaderReflectionType DD 06e6ffa6aH
	DW	09baeH
	DW	04613H
	DB	0a5H
	DB	01eH
	DB	091H
	DB	065H
	DB	02dH
	DB	050H
	DB	08cH
	DB	021H
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectGroup
CONST	SEGMENT
_IID_ID3DX11EffectGroup DD 03074acfH
	DW	097deH
	DW	0485fH
	DB	0b2H
	DB	01H
	DB	0cbH
	DB	077H
	DB	052H
	DB	064H
	DB	0afH
	DB	0d6H
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectInterfaceVariable
CONST	SEGMENT
_IID_ID3DX11EffectInterfaceVariable DD 0516c8cd8H
	DW	01c80H
	DW	040a4H
	DB	0b1H
	DB	09bH
	DB	06H
	DB	088H
	DB	079H
	DB	02fH
	DB	011H
	DB	0a5H
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectTechnique
CONST	SEGMENT
_IID_ID3DX11EffectTechnique DD 051198831H
	DW	01f1dH
	DW	04f47H
	DB	0bdH
	DB	076H
	DB	041H
	DB	0cbH
	DB	08H
	DB	035H
	DB	0b1H
	DB	0deH
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectClassInstanceVariable
CONST	SEGMENT
_IID_ID3DX11EffectClassInstanceVariable DD 0926a8053H
	DW	02a39H
	DW	04db4H
	DB	09bH
	DB	0deH
	DB	0cfH
	DB	064H
	DB	09aH
	DB	0deH
	DB	0bdH
	DB	0c1H
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectPass
CONST	SEGMENT
_IID_ID3DX11EffectPass DD 03437cec4H
	DW	04ac1H
	DW	04d87H
	DB	089H
	DB	016H
	DB	0f4H
	DB	0bdH
	DB	05aH
	DB	041H
	DB	038H
	DB	0cH
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectStringVariable
CONST	SEGMENT
_IID_ID3DX11EffectStringVariable DD 0f355c818H
	DW	01beH
	DW	04653H
	DB	0a7H
	DB	0ccH
	DB	060H
	DB	0ffH
	DB	0feH
	DB	0ddH
	DB	0c7H
	DB	06dH
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectSamplerVariable
CONST	SEGMENT
_IID_ID3DX11EffectSamplerVariable DD 0c6402e55H
	DW	01095H
	DW	04d95H
	DB	089H
	DB	031H
	DB	0f9H
	DB	026H
	DB	060H
	DB	051H
	DB	03dH
	DB	0d9H
CONST	ENDS
;	COMDAT ?c_RegisterSize@SType@D3DX11Effects@@2IB
CONST	SEGMENT
?c_RegisterSize@SType@D3DX11Effects@@2IB DD 010H	; D3DX11Effects::SType::c_RegisterSize
CONST	ENDS
;	COMDAT ?c_ScalarsPerRegister@SType@D3DX11Effects@@2IB
CONST	SEGMENT
?c_ScalarsPerRegister@SType@D3DX11Effects@@2IB DD 04H	; D3DX11Effects::SType::c_ScalarsPerRegister
CONST	ENDS
;	COMDAT ?c_ScalarSize@SType@D3DX11Effects@@2IB
CONST	SEGMENT
?c_ScalarSize@SType@D3DX11Effects@@2IB DD 04H		; D3DX11Effects::SType::c_ScalarSize
CONST	ENDS
;	COMDAT ?c_InvalidIndex@SType@D3DX11Effects@@2IB
CONST	SEGMENT
?c_InvalidIndex@SType@D3DX11Effects@@2IB DD 0ffffffffH	; D3DX11Effects::SType::c_InvalidIndex
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectMatrixVariable
CONST	SEGMENT
_IID_ID3DX11EffectMatrixVariable DD 0e1096cf4H
	DW	0c027H
	DW	0419aH
	DB	08dH
	DB	086H
	DB	0d2H
	DB	091H
	DB	073H
	DB	0dcH
	DB	080H
	DB	03eH
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectRasterizerVariable
CONST	SEGMENT
_IID_ID3DX11EffectRasterizerVariable DD 053a262f6H
	DW	05f74H
	DW	04151H
	DB	0a1H
	DB	032H
	DB	0e3H
	DB	0ddH
	DB	019H
	DB	0a6H
	DB	02cH
	DB	09dH
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectVectorVariable
CONST	SEGMENT
_IID_ID3DX11EffectVectorVariable DD 05e785d4aH
	DW	0d87bH
	DW	048d8H
	DB	0b6H
	DB	0e6H
	DB	0fH
	DB	08cH
	DB	0a7H
	DB	0e7H
	DB	046H
	DB	07aH
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectDepthStencilVariable
CONST	SEGMENT
_IID_ID3DX11EffectDepthStencilVariable DD 069b5751bH
	DW	061a5H
	DW	048e5H
	DB	0bdH
	DB	041H
	DB	0d9H
	DB	039H
	DB	088H
	DB	011H
	DB	015H
	DB	063H
CONST	ENDS
;	COMDAT _IID_ID3DX11EffectBlendVariable
CONST	SEGMENT
_IID_ID3DX11EffectBlendVariable DD 0d664f4d7H
	DW	03b81H
	DW	04805H
	DB	0b2H
	DB	077H
	DB	0c1H
	DB	0dfH
	DB	058H
	DB	0c3H
	DB	09fH
	DB	053H
CONST	ENDS
PUBLIC	?StringCchPrintfA@@YAJPADIPBDZZ			; StringCchPrintfA
PUBLIC	?D3DXDebugAssert@@YGHPBDH0@Z			; D3DXDebugAssert
PUBLIC	?D3DXDebugPrintf@@YAXIPBDZZ			; D3DXDebugPrintf
PUBLIC	??_C@_0CB@LMKHLGBA@Assertion?5failure?$CB?5?$CI?$CFs?5?$CFd?$CJ?3?5?$CFs?$AN?6@ ; `string'
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__vsnprintf:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0CB@LMKHLGBA@Assertion?5failure?$CB?5?$CI?$CFs?5?$CFd?$CJ?3?5?$CFs?$AN?6@
CONST	SEGMENT
??_C@_0CB@LMKHLGBA@Assertion?5failure?$CB?5?$CI?$CFs?5?$CFd?$CJ?3?5?$CFs?$AN?6@ DB 'A'
	DB	'ssertion failure! (%s %d): %s', 0dH, 0aH, 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\sparta2.0\uclan-sparta\effects11\d3dx11dbg.cpp
;	COMDAT ?D3DXDebugPrintf@@YAXIPBDZZ
_TEXT	SEGMENT
_lvl$ = 8						; size = 4
_szFormat$ = 12						; size = 4
?D3DXDebugPrintf@@YAXIPBDZZ PROC			; D3DXDebugPrintf, COMDAT

; 40   : void cdecl D3DXDebugPrintf(UINT lvl, LPCSTR szFormat, ...) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?D3DXDebugPrintf@@YAXIPBDZZ ENDP			; D3DXDebugPrintf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\sparta2.0\uclan-sparta\effects11\d3dx11dbg.cpp
;	COMDAT ?D3DXDebugAssert@@YGHPBDH0@Z
_TEXT	SEGMENT
$T1 = -724						; size = 4
_str$ = -520						; size = 512
__$ArrayPad$ = -4					; size = 4
_szFile$ = 8						; size = 4
_nLine$ = 12						; size = 4
_szCondition$ = 16					; size = 4
?D3DXDebugAssert@@YGHPBDH0@Z PROC			; D3DXDebugAssert, COMDAT

; 51   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 728				; 000002d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-728]
	mov	ecx, 182				; 000000b6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 52   :     char str[512];
; 53   : 
; 54   :     // Print message to debug console
; 55   :     StringCchPrintfA(str, sizeof(str), "Assertion failure! (%s %d): %s\r\n", szFile, nLine, szCondition);

	mov	eax, DWORD PTR _szCondition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nLine$[ebp]
	push	ecx
	mov	edx, DWORD PTR _szFile$[ebp]
	push	edx
	push	OFFSET ??_C@_0CB@LMKHLGBA@Assertion?5failure?$CB?5?$CI?$CFs?5?$CFd?$CJ?3?5?$CFs?$AN?6@
	push	512					; 00000200H
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	?StringCchPrintfA@@YAJPADIPBDZZ		; StringCchPrintfA
	add	esp, 24					; 00000018H

; 56   :     str[511] = 0;

	mov	eax, 1
	imul	ecx, eax, 511
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 512			; 00000200H
	jae	SHORT $LN3@D3DXDebugA
	jmp	SHORT $LN4@D3DXDebugA
$LN3@D3DXDebugA:
	call	___report_rangecheckfailure
$LN4@D3DXDebugA:
	mov	edx, DWORD PTR $T1[ebp]
	mov	BYTE PTR _str$[ebp+edx], 0

; 57   :     OutputDebugStringA(str);

	mov	esi, esp
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	DWORD PTR __imp__OutputDebugStringA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 58   : 
; 59   :     return 0;

	xor	eax, eax
$LN2@D3DXDebugA:

; 60   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@D3DXDebugA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 728				; 000002d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN7@D3DXDebugA:
	DD	1
	DD	$LN6@D3DXDebugA
$LN6@D3DXDebugA:
	DD	-520					; fffffdf8H
	DD	512					; 00000200H
	DD	$LN5@D3DXDebugA
$LN5@D3DXDebugA:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?D3DXDebugAssert@@YGHPBDH0@Z ENDP			; D3DXDebugAssert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\shared\strsafe.h
;	COMDAT ?StringCchPrintfA@@YAJPADIPBDZZ
_TEXT	SEGMENT
_argList$1 = -20					; size = 4
_hr$ = -8						; size = 4
_pszDest$ = 8						; size = 4
_cchDest$ = 12						; size = 4
_pszFormat$ = 16					; size = 4
?StringCchPrintfA@@YAJPADIPBDZZ PROC			; StringCchPrintfA, COMDAT

; 5429 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5430 :     HRESULT hr;
; 5431 : 
; 5432 :     hr = StringValidateDestA(pszDest, cchDest, STRSAFE_MAX_CCH);

	push	2147483647				; 7fffffffH
	mov	eax, DWORD PTR _cchDest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszDest$[ebp]
	push	ecx
	call	?StringValidateDestA@@YGJPBDII@Z	; StringValidateDestA
	mov	DWORD PTR _hr$[ebp], eax

; 5433 : 
; 5434 :     if (SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN3@StringCchP

; 5435 :     {
; 5436 :         va_list argList;
; 5437 : 
; 5438 :         va_start(argList, pszFormat);

	lea	eax, DWORD PTR _pszFormat$[ebp+4]
	mov	DWORD PTR _argList$1[ebp], eax

; 5439 : 
; 5440 :         hr = StringVPrintfWorkerA(pszDest,
; 5441 :                 cchDest,
; 5442 :                 NULL,
; 5443 :                 pszFormat,
; 5444 :                 argList);

	mov	eax, DWORD PTR _argList$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFormat$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _cchDest$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszDest$[ebp]
	push	eax
	call	?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z	; StringVPrintfWorkerA
	mov	DWORD PTR _hr$[ebp], eax

; 5445 : 
; 5446 :         va_end(argList);

	mov	DWORD PTR _argList$1[ebp], 0
	jmp	SHORT $LN2@StringCchP
$LN3@StringCchP:

; 5447 :     }
; 5448 :     else if (cchDest > 0)

	cmp	DWORD PTR _cchDest$[ebp], 0
	jbe	SHORT $LN2@StringCchP

; 5449 :     {
; 5450 :         *pszDest = '\0';

	mov	eax, DWORD PTR _pszDest$[ebp]
	mov	BYTE PTR [eax], 0
$LN2@StringCchP:

; 5451 :     }
; 5452 : 
; 5453 :     return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 5454 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StringCchPrintfA@@YAJPADIPBDZZ ENDP			; StringCchPrintfA
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\shared\strsafe.h
;	COMDAT ?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z
_TEXT	SEGMENT
_cchNewDestLength$ = -44				; size = 4
_cchMax$ = -32						; size = 4
_iRet$ = -20						; size = 4
_hr$ = -8						; size = 4
_pszDest$ = 8						; size = 4
_cchDest$ = 12						; size = 4
_pcchNewDestLength$ = 16				; size = 4
_pszFormat$ = 20					; size = 4
_argList$ = 24						; size = 4
?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z PROC		; StringVPrintfWorkerA, COMDAT

; 10756: {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 10757:     HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 10758:     int iRet;
; 10759:     size_t cchMax;
; 10760:     size_t cchNewDestLength = 0;

	mov	DWORD PTR _cchNewDestLength$[ebp], 0

; 10761: 
; 10762:     // leave the last space for the null terminator
; 10763:     cchMax = cchDest - 1;

	mov	eax, DWORD PTR _cchDest$[ebp]
	sub	eax, 1
	mov	DWORD PTR _cchMax$[ebp], eax

; 10764: 
; 10765: #if (STRSAFE_USE_SECURE_CRT == 1) && !defined(STRSAFE_LIB_IMPL)
; 10766:     iRet = _vsnprintf_s(pszDest, cchDest, cchMax, pszFormat, argList);
; 10767: #else
; 10768: #pragma warning(push)
; 10769: #pragma warning(disable: __WARNING_BANNED_API_USAGE)// "STRSAFE not included"
; 10770:     iRet = _vsnprintf(pszDest, cchMax, pszFormat, argList);

	mov	eax, DWORD PTR _argList$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cchMax$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszDest$[ebp]
	push	eax
	call	__vsnprintf
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iRet$[ebp], eax

; 10771: #pragma warning(pop)
; 10772: #endif
; 10773:     // ASSERT((iRet < 0) || (((size_t)iRet) <= cchMax));
; 10774: 
; 10775:     if ((iRet < 0) || (((size_t)iRet) > cchMax))

	cmp	DWORD PTR _iRet$[ebp], 0
	jl	SHORT $LN5@StringVPri
	mov	eax, DWORD PTR _iRet$[ebp]
	cmp	eax, DWORD PTR _cchMax$[ebp]
	jbe	SHORT $LN6@StringVPri
$LN5@StringVPri:

; 10776:     {
; 10777:         // need to null terminate the string
; 10778:         pszDest += cchMax;

	mov	eax, DWORD PTR _pszDest$[ebp]
	add	eax, DWORD PTR _cchMax$[ebp]
	mov	DWORD PTR _pszDest$[ebp], eax

; 10779:         *pszDest = '\0';

	mov	eax, DWORD PTR _pszDest$[ebp]
	mov	BYTE PTR [eax], 0

; 10780: 
; 10781:         cchNewDestLength = cchMax;

	mov	eax, DWORD PTR _cchMax$[ebp]
	mov	DWORD PTR _cchNewDestLength$[ebp], eax

; 10782: 
; 10783:         // we have truncated pszDest
; 10784:         hr = STRSAFE_E_INSUFFICIENT_BUFFER;

	mov	DWORD PTR _hr$[ebp], -2147024774	; 8007007aH
	jmp	SHORT $LN4@StringVPri
$LN6@StringVPri:

; 10785:     }
; 10786:     else if (((size_t)iRet) == cchMax)

	mov	eax, DWORD PTR _iRet$[ebp]
	cmp	eax, DWORD PTR _cchMax$[ebp]
	jne	SHORT $LN3@StringVPri

; 10787:     {
; 10788:         // need to null terminate the string
; 10789:         pszDest += cchMax;

	mov	eax, DWORD PTR _pszDest$[ebp]
	add	eax, DWORD PTR _cchMax$[ebp]
	mov	DWORD PTR _pszDest$[ebp], eax

; 10790:         *pszDest = '\0';

	mov	eax, DWORD PTR _pszDest$[ebp]
	mov	BYTE PTR [eax], 0

; 10791: 
; 10792:         cchNewDestLength = cchMax;

	mov	eax, DWORD PTR _cchMax$[ebp]
	mov	DWORD PTR _cchNewDestLength$[ebp], eax

; 10793:     }
; 10794:     else

	jmp	SHORT $LN4@StringVPri
$LN3@StringVPri:

; 10795:     {
; 10796:         cchNewDestLength = (size_t)iRet;

	mov	eax, DWORD PTR _iRet$[ebp]
	mov	DWORD PTR _cchNewDestLength$[ebp], eax
$LN4@StringVPri:

; 10797:     }
; 10798: 
; 10799:     if (pcchNewDestLength)

	cmp	DWORD PTR _pcchNewDestLength$[ebp], 0
	je	SHORT $LN1@StringVPri

; 10800:     {
; 10801:         *pcchNewDestLength = cchNewDestLength;

	mov	eax, DWORD PTR _pcchNewDestLength$[ebp]
	mov	ecx, DWORD PTR _cchNewDestLength$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@StringVPri:

; 10802:     }
; 10803: 
; 10804:     return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 10805: }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?StringVPrintfWorkerA@@YGJPADIPAIPBD0@Z ENDP		; StringVPrintfWorkerA
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\shared\strsafe.h
;	COMDAT ?StringValidateDestA@@YGJPBDII@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_pszDest$ = 8						; size = 4
_cchDest$ = 12						; size = 4
_cchMax$ = 16						; size = 4
?StringValidateDestA@@YGJPBDII@Z PROC			; StringValidateDestA, COMDAT

; 10400: {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 10401:     HRESULT hr = S_OK;

	mov	DWORD PTR _hr$[ebp], 0

; 10402: 
; 10403:     if ((cchDest == 0) || (cchDest > cchMax))

	cmp	DWORD PTR _cchDest$[ebp], 0
	je	SHORT $LN1@StringVali
	mov	eax, DWORD PTR _cchDest$[ebp]
	cmp	eax, DWORD PTR _cchMax$[ebp]
	jbe	SHORT $LN2@StringVali
$LN1@StringVali:

; 10404:     {
; 10405:         hr = STRSAFE_E_INVALID_PARAMETER;

	mov	DWORD PTR _hr$[ebp], -2147024809	; 80070057H
$LN2@StringVali:

; 10406:     }
; 10407: 
; 10408:     return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 10409: }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?StringValidateDestA@@YGJPBDII@Z ENDP			; StringValidateDestA
_TEXT	ENDS
END
