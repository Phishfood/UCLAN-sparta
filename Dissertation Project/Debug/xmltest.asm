; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61030.0 

	TITLE	C:\Users\Simon\Documents\GitHub\UCLAN-sparta\Dissertation Project\TinyXML\xmltest.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0DA@GDDBJIHF@?$DMelement?5attrib1?$DN?$CC1?$CC?5attrib2?$DN?$CC2?$CC@ ; `string'
PUBLIC	??_C@_0CI@JFHMCFGL@?$DMelement?5attribute1?$DN?5?$CCTest?5Attri@ ; `string'
PUBLIC	??_C@_0CI@CANOBEFM@?$DMelement?5attribute1?5?$DN?$CCTest?5Attri@ ; `string'
PUBLIC	??_C@_0CJ@HKNOGIBO@?$DMelement?5attribute1?5?$DN?5?$CCTest?5Attr@ ; `string'
PUBLIC	??_C@_0EM@NCEFLKIF@?$DMdoc?$DO?$DMelement?5attribute?$DN?8attribu@ ; `string'
PUBLIC	??_C@_0DA@INPPIMCH@?$DMelement?5attrib?$DN?8bar?8?$DO?$DMsub?$DOText?$DM@ ; `string'
PUBLIC	??_C@_0CK@JPGBMHEP@?o?$LL?$LP?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN@ ; `string'
PUBLIC	??_C@_0P@PKOLAHPE@?o?$LL?$LP?$DMelement?1?$DO?6?$AA@ ; `string'
PUBLIC	??_C@_05KOLFGEDA@DEBUG?$AA@			; `string'
PUBLIC	?startMemState@@3U_CrtMemState@@A		; startMemState
PUBLIC	?endMemState@@3U_CrtMemState@@A			; endMemState
PUBLIC	?gPass@@3HA					; gPass
PUBLIC	?gFail@@3HA					; gFail
PUBLIC	??_C@_0L@KBEJNDBI@?$DMelement?1?$DO?$AA@	; `string'
PUBLIC	??_C@_0GM@DGBDOEMH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?$DP?$DO?$DM?$CBDOCTYPE?5P@ ; `string'
PUBLIC	??_C@_0GB@MFCMMDKI@?$DMinformation?$DO?7?$DMattributeApproach@ ; `string'
PUBLIC	??_C@_0M@BHIPBDOJ@?$DMelement?5?1?$DO?$AA@	; `string'
PUBLIC	??_C@_0BE@IJJMIOFN@?$DMelement?$DO?$DM?1element?$DO?$AA@ ; `string'
PUBLIC	??_C@_0CB@FADHGKFH@?$DMelement?$DO?$DMsubelement?1?$DO?$DM?1element?$DO@ ; `string'
PUBLIC	??_C@_0CN@OGKLLGJJ@?$DMelement?$DO?$DMsubelement?$DO?$DM?1subelemen@ ; `string'
PUBLIC	??_C@_0DG@CDENAKDB@?$DMelement?$DO?$DMsubelement?$DO?$DMsubsub?1?$DO?$DM?1@ ; `string'
PUBLIC	??_C@_0EL@OBILJPIP@?$DM?$CB?9?9comment?5beside?5elements?9?9?$DO?$DMe@ ; `string'
PUBLIC	??_C@_0GM@NJCOIECN@?$DM?$CB?9?9comment?5beside?5elements?0?5thi@ ; `string'
PUBLIC	??_C@_0DB@CGLIEOEL@?$DMelement?5attrib1?$DN?8foo?8?5attrib2?$DN?$CC@ ; `string'
PUBLIC	??_C@_0FA@DKBLPPJB@?$DMelement?5attrib1?$DN?8foo?8?5attrib2?$DN?$CC@ ; `string'
PUBLIC	??_C@_0CI@BKBLGPAN@?$DMelement?$DOText?5inside?5element?4?$DM?1e@ ; `string'
PUBLIC	??_C@_0BL@KLHMKGBA@?$DMelement?$DO?$DMb?$DO?$DM?1b?$DO?$DM?1element?$DO?$AA@ ; `string'
PUBLIC	??_C@_0EB@DANGBCCP@?$DMelement?$DOText?5inside?5and?5?$DMb?$DObold@ ; `string'
PUBLIC	??_C@_0FA@BBOBGLEN@?$DMouter?$DO?$DMelement?$DOText?5inside?5and?5@ ; `string'
PUBLIC	??_C@_0CE@LIOACJNG@?$DMelement?$DOThis?5?$CGamp?$DL?5That?4?$DM?1eleme@ ; `string'
PUBLIC	??_C@_0CC@EMHAMCMI@?$DMelement?5attrib?$DN?8This?$CGlt?$DLThat?8?5?1@ ; `string'
PUBLIC	??_C@_0FK@NCOLHCLE@?$DM?$CB?9?9hello?5world?6?5?5?5?5?5?5?5?5?5?5line?52@ ; `string'
PUBLIC	??_C@_0CA@EPENKIDJ@?$DMelement?$DOText?5before?4?$DM?1element?$DO?$AA@ ; `string'
PUBLIC	??_C@_0BK@KAMADEFH@?$DMelement?$DO?$DMsub?1?$DO?$DM?1element?$DO?$AA@ ; `string'
_BSS	SEGMENT
?startMemState@@3U_CrtMemState@@A DB 034H DUP (?)	; startMemState
?endMemState@@3U_CrtMemState@@A DB 034H DUP (?)		; endMemState
?gPass@@3HA DD	01H DUP (?)				; gPass
?gFail@@3HA DD	01H DUP (?)				; gFail
_BSS	ENDS
;	COMDAT ??_C@_0BK@KAMADEFH@?$DMelement?$DO?$DMsub?1?$DO?$DM?1element?$DO?$AA@
CONST	SEGMENT
??_C@_0BK@KAMADEFH@?$DMelement?$DO?$DMsub?1?$DO?$DM?1element?$DO?$AA@ DB '<'
	DB	'element><sub/></element>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@EPENKIDJ@?$DMelement?$DOText?5before?4?$DM?1element?$DO?$AA@
CONST	SEGMENT
??_C@_0CA@EPENKIDJ@?$DMelement?$DOText?5before?4?$DM?1element?$DO?$AA@ DB '<'
	DB	'element>Text before.</element>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FK@NCOLHCLE@?$DM?$CB?9?9hello?5world?6?5?5?5?5?5?5?5?5?5?5line?52@
CONST	SEGMENT
??_C@_0FK@NCOLHCLE@?$DM?$CB?9?9hello?5world?6?5?5?5?5?5?5?5?5?5?5line?52@ DB '<'
	DB	'!--hello world', 0aH, '          line 2', 0dH, '          lin'
	DB	'e 3', 0dH, 0aH, '          line 4', 0aH, 0dH, '          line'
	DB	' 5', 0dH, '-->', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EMHAMCMI@?$DMelement?5attrib?$DN?8This?$CGlt?$DLThat?8?5?1@
CONST	SEGMENT
??_C@_0CC@EMHAMCMI@?$DMelement?5attrib?$DN?8This?$CGlt?$DLThat?8?5?1@ DB '<'
	DB	'element attrib=''This&lt;That'' />', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LIOACJNG@?$DMelement?$DOThis?5?$CGamp?$DL?5That?4?$DM?1eleme@
CONST	SEGMENT
??_C@_0CE@LIOACJNG@?$DMelement?$DOThis?5?$CGamp?$DL?5That?4?$DM?1eleme@ DB '<'
	DB	'element>This &amp; That.</element>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@BBOBGLEN@?$DMouter?$DO?$DMelement?$DOText?5inside?5and?5@
CONST	SEGMENT
??_C@_0FA@BBOBGLEN@?$DMouter?$DO?$DMelement?$DOText?5inside?5and?5@ DB '<'
	DB	'outer><element>Text inside and <b>bolded</b> in the element.<'
	DB	'/element></outer>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@DANGBCCP@?$DMelement?$DOText?5inside?5and?5?$DMb?$DObold@
CONST	SEGMENT
??_C@_0EB@DANGBCCP@?$DMelement?$DOText?5inside?5and?5?$DMb?$DObold@ DB '<'
	DB	'element>Text inside and <b>bolded</b> in the element.</elemen'
	DB	't>', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KLHMKGBA@?$DMelement?$DO?$DMb?$DO?$DM?1b?$DO?$DM?1element?$DO?$AA@
CONST	SEGMENT
??_C@_0BL@KLHMKGBA@?$DMelement?$DO?$DMb?$DO?$DM?1b?$DO?$DM?1element?$DO?$AA@ DB '<'
	DB	'element><b></b></element>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@BKBLGPAN@?$DMelement?$DOText?5inside?5element?4?$DM?1e@
CONST	SEGMENT
??_C@_0CI@BKBLGPAN@?$DMelement?$DOText?5inside?5element?4?$DM?1e@ DB '<el'
	DB	'ement>Text inside element.</element>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@DKBLPPJB@?$DMelement?5attrib1?$DN?8foo?8?5attrib2?$DN?$CC@
CONST	SEGMENT
??_C@_0FA@DKBLPPJB@?$DMelement?5attrib1?$DN?8foo?8?5attrib2?$DN?$CC@ DB '<'
	DB	'element attrib1=''foo'' attrib2="bar" ><subelement attrib3='''
	DB	'yeehaa'' /></element>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@CGLIEOEL@?$DMelement?5attrib1?$DN?8foo?8?5attrib2?$DN?$CC@
CONST	SEGMENT
??_C@_0DB@CGLIEOEL@?$DMelement?5attrib1?$DN?8foo?8?5attrib2?$DN?$CC@ DB '<'
	DB	'element attrib1=''foo'' attrib2="bar" ></element>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GM@NJCOIECN@?$DM?$CB?9?9comment?5beside?5elements?0?5thi@
CONST	SEGMENT
??_C@_0GM@NJCOIECN@?$DM?$CB?9?9comment?5beside?5elements?0?5thi@ DB '<!--'
	DB	'comment beside elements, this time with spaces-->  ', 0aH, ' '
	DB	'<element>  <subelement> ', 0aH, ' </subelement> </element>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@OBILJPIP@?$DM?$CB?9?9comment?5beside?5elements?9?9?$DO?$DMe@
CONST	SEGMENT
??_C@_0EL@OBILJPIP@?$DM?$CB?9?9comment?5beside?5elements?9?9?$DO?$DMe@ DB '<'
	DB	'!--comment beside elements--><element><subelement></subelemen'
	DB	't></element>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@CDENAKDB@?$DMelement?$DO?$DMsubelement?$DO?$DMsubsub?1?$DO?$DM?1@
CONST	SEGMENT
??_C@_0DG@CDENAKDB@?$DMelement?$DO?$DMsubelement?$DO?$DMsubsub?1?$DO?$DM?1@ DB '<'
	DB	'element><subelement><subsub/></subelement></element>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@OGKLLGJJ@?$DMelement?$DO?$DMsubelement?$DO?$DM?1subelemen@
CONST	SEGMENT
??_C@_0CN@OGKLLGJJ@?$DMelement?$DO?$DMsubelement?$DO?$DM?1subelemen@ DB '<'
	DB	'element><subelement></subelement></element>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FADHGKFH@?$DMelement?$DO?$DMsubelement?1?$DO?$DM?1element?$DO@
CONST	SEGMENT
??_C@_0CB@FADHGKFH@?$DMelement?$DO?$DMsubelement?1?$DO?$DM?1element?$DO@ DB '<'
	DB	'element><subelement/></element>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IJJMIOFN@?$DMelement?$DO?$DM?1element?$DO?$AA@
CONST	SEGMENT
??_C@_0BE@IJJMIOFN@?$DMelement?$DO?$DM?1element?$DO?$AA@ DB '<element></e'
	DB	'lement>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BHIPBDOJ@?$DMelement?5?1?$DO?$AA@
CONST	SEGMENT
??_C@_0M@BHIPBDOJ@?$DMelement?5?1?$DO?$AA@ DB '<element />', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@MFCMMDKI@?$DMinformation?$DO?7?$DMattributeApproach@
CONST	SEGMENT
??_C@_0GB@MFCMMDKI@?$DMinformation?$DO?7?$DMattributeApproach@ DB '<infor'
	DB	'mation>', 09H, '<attributeApproach v=''2'' />', 09H, '<textAp'
	DB	'proach>', 09H, 09H, '<v>2</v>', 09H, '</textApproach></inform'
	DB	'ation>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GM@DGBDOEMH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?$DP?$DO?$DM?$CBDOCTYPE?5P@
CONST	SEGMENT
??_C@_0GM@DGBDOEMH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?$DP?$DO?$DM?$CBDOCTYPE?5P@ DB '<'
	DB	'?xml version="1.0"?><!DOCTYPE PLAY SYSTEM "play.dtd"><PLAY><T'
	DB	'ITLE>A Midsummer Night''s Dream</TITLE></PLAY>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KBEJNDBI@?$DMelement?1?$DO?$AA@
CONST	SEGMENT
??_C@_0L@KBEJNDBI@?$DMelement?1?$DO?$AA@ DB '<element/>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KOLFGEDA@DEBUG?$AA@
CONST	SEGMENT
??_C@_05KOLFGEDA@DEBUG?$AA@ DB 'DEBUG', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
?COUNT@?GP@??main@@9@4HB DD 0aH				; `main'::`111'::COUNT
CONST	ENDS
;	COMDAT ??_C@_0P@PKOLAHPE@?o?$LL?$LP?$DMelement?1?$DO?6?$AA@
CONST	SEGMENT
??_C@_0P@PKOLAHPE@?o?$LL?$LP?$DMelement?1?$DO?6?$AA@ DB 0efH, 0bbH, 0bfH, '<'
	DB	'element/>', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@JPGBMHEP@?o?$LL?$LP?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN@
CONST	SEGMENT
??_C@_0CK@JPGBMHEP@?o?$LL?$LP?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN@ DB 0efH
	DB	0bbH, 0bfH, '<?xml version="1.0" encoding="UTF-8"?>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@INPPIMCH@?$DMelement?5attrib?$DN?8bar?8?$DO?$DMsub?$DOText?$DM@
CONST	SEGMENT
??_C@_0DA@INPPIMCH@?$DMelement?5attrib?$DN?8bar?8?$DO?$DMsub?$DOText?$DM@ DB '<'
	DB	'element attrib=''bar''><sub>Text</sub></element>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@NCEFLKIF@?$DMdoc?$DO?$DMelement?5attribute?$DN?8attribu@
CONST	SEGMENT
??_C@_0EM@NCEFLKIF@?$DMdoc?$DO?$DMelement?5attribute?$DN?8attribu@ DB '<d'
	DB	'oc><element attribute=''attribute''/><element attribute=''att'
	DB	'ribute''/></doc>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HKNOGIBO@?$DMelement?5attribute1?5?$DN?5?$CCTest?5Attr@
CONST	SEGMENT
??_C@_0CJ@HKNOGIBO@?$DMelement?5attribute1?5?$DN?5?$CCTest?5Attr@ DB '<el'
	DB	'ement attribute1 = "Test Attribute"/>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CANOBEFM@?$DMelement?5attribute1?5?$DN?$CCTest?5Attri@
CONST	SEGMENT
??_C@_0CI@CANOBEFM@?$DMelement?5attribute1?5?$DN?$CCTest?5Attri@ DB '<ele'
	DB	'ment attribute1 ="Test Attribute"/>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@JFHMCFGL@?$DMelement?5attribute1?$DN?5?$CCTest?5Attri@
CONST	SEGMENT
??_C@_0CI@JFHMCFGL@?$DMelement?5attribute1?$DN?5?$CCTest?5Attri@ DB '<ele'
	DB	'ment attribute1= "Test Attribute"/>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@GDDBJIHF@?$DMelement?5attrib1?$DN?$CC1?$CC?5attrib2?$DN?$CC2?$CC@
CONST	SEGMENT
??_C@_0DA@GDDBJIHF@?$DMelement?5attrib1?$DN?$CC1?$CC?5attrib2?$DN?$CC2?$CC@ DB '<'
	DB	'element attrib1="1" attrib2="2" attrib3="3" />', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?xml@?FC@??main@@9@4PBDB DD FLAT:??_C@_0DA@GDDBJIHF@?$DMelement?5attrib1?$DN?$CC1?$CC?5attrib2?$DN?$CC2?$CC@ ; `main'::`82'::xml
?xml0@?FD@??main@@9@4PBDB DD FLAT:??_C@_0CI@JFHMCFGL@?$DMelement?5attribute1?$DN?5?$CCTest?5Attri@ ; `main'::`83'::xml0
?xml1@?FD@??main@@9@4PBDB DD FLAT:??_C@_0CI@CANOBEFM@?$DMelement?5attribute1?5?$DN?$CCTest?5Attri@ ; `main'::`83'::xml1
?xml2@?FD@??main@@9@4PBDB DD FLAT:??_C@_0CJ@HKNOGIBO@?$DMelement?5attribute1?5?$DN?5?$CCTest?5Attr@ ; `main'::`83'::xml2
?xml@?FE@??main@@9@4PBDB DD FLAT:??_C@_0EM@NCEFLKIF@?$DMdoc?$DO?$DMelement?5attribute?$DN?8attribu@ ; `main'::`84'::xml
?xml@?FF@??main@@9@4PBDB DD FLAT:??_C@_0DA@INPPIMCH@?$DMelement?5attrib?$DN?8bar?8?$DO?$DMsub?$DOText?$DM@ ; `main'::`85'::xml
?xml@?FG@??main@@9@4PBDB DD FLAT:??_C@_0DA@INPPIMCH@?$DMelement?5attrib?$DN?8bar?8?$DO?$DMsub?$DOText?$DM@ ; `main'::`86'::xml
?result@?FH@??main@@9@4PBDB DD FLAT:??_C@_0CK@JPGBMHEP@?o?$LL?$LP?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN@ ; `main'::`87'::result
?xml_bom_preservation@?GG@??main@@9@4PBDB DD FLAT:??_C@_0P@PKOLAHPE@?o?$LL?$LP?$DMelement?1?$DO?6?$AA@ ; `main'::`102'::xml_bom_preservation
?note@?HB@??main@@9@4PBDB DD FLAT:??_C@_05KOLFGEDA@DEBUG?$AA@ ; `main'::`113'::note
?xml@?1??example_2@@YAHXZ@4PBDB DD FLAT:??_C@_0L@KBEJNDBI@?$DMelement?1?$DO?$AA@ ; `example_2'::`2'::xml
?xml@?1??example_3@@YAHXZ@4PBDB DD FLAT:??_C@_0GM@DGBDOEMH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?$DP?$DO?$DM?$CBDOCTYPE?5P@ ; `example_3'::`2'::xml
?xml@?1??example_4@@YA_NXZ@4PBDB DD FLAT:??_C@_0GB@MFCMMDKI@?$DMinformation?$DO?7?$DMattributeApproach@ ; `example_4'::`2'::xml
?test@?P@??main@@9@4PBDB DD FLAT:??_C@_0FK@NCOLHCLE@?$DM?$CB?9?9hello?5world?6?5?5?5?5?5?5?5?5?5?5line?52@ ; `main'::`15'::test
?test@?M@??main@@9@4PAPBDA DD FLAT:??_C@_0M@BHIPBDOJ@?$DMelement?5?1?$DO?$AA@ ; `main'::`12'::test
	DD	FLAT:??_C@_0BE@IJJMIOFN@?$DMelement?$DO?$DM?1element?$DO?$AA@
	DD	FLAT:??_C@_0CB@FADHGKFH@?$DMelement?$DO?$DMsubelement?1?$DO?$DM?1element?$DO@
	DD	FLAT:??_C@_0CN@OGKLLGJJ@?$DMelement?$DO?$DMsubelement?$DO?$DM?1subelemen@
	DD	FLAT:??_C@_0DG@CDENAKDB@?$DMelement?$DO?$DMsubelement?$DO?$DMsubsub?1?$DO?$DM?1@
	DD	FLAT:??_C@_0EL@OBILJPIP@?$DM?$CB?9?9comment?5beside?5elements?9?9?$DO?$DMe@
	DD	FLAT:??_C@_0GM@NJCOIECN@?$DM?$CB?9?9comment?5beside?5elements?0?5thi@
	DD	FLAT:??_C@_0DB@CGLIEOEL@?$DMelement?5attrib1?$DN?8foo?8?5attrib2?$DN?$CC@
	DD	FLAT:??_C@_0FA@DKBLPPJB@?$DMelement?5attrib1?$DN?8foo?8?5attrib2?$DN?$CC@
	DD	FLAT:??_C@_0CI@BKBLGPAN@?$DMelement?$DOText?5inside?5element?4?$DM?1e@
	DD	FLAT:??_C@_0BL@KLHMKGBA@?$DMelement?$DO?$DMb?$DO?$DM?1b?$DO?$DM?1element?$DO?$AA@
	DD	FLAT:??_C@_0EB@DANGBCCP@?$DMelement?$DOText?5inside?5and?5?$DMb?$DObold@
	DD	FLAT:??_C@_0FA@BBOBGLEN@?$DMouter?$DO?$DMelement?$DOText?5inside?5and?5@
	DD	FLAT:??_C@_0CE@LIOACJNG@?$DMelement?$DOThis?5?$CGamp?$DL?5That?4?$DM?1eleme@
	DD	FLAT:??_C@_0CC@EMHAMCMI@?$DMelement?5attrib?$DN?8This?$CGlt?$DLThat?8?5?1@
	DD	00H
?test@?BA@??main@@9@4PBDB DD FLAT:??_C@_0CA@EPENKIDJ@?$DMelement?$DOText?5before?4?$DM?1element?$DO?$AA@ ; `main'::`16'::test
?test@?BB@??main@@9@4PBDB DD FLAT:??_C@_0BK@KAMADEFH@?$DMelement?$DO?$DMsub?1?$DO?$DM?1element?$DO?$AA@ ; `main'::`17'::test
_DATA	ENDS
PUBLIC	?__autoclassinit@StrPair@tinyxml2@@QAEXI@Z	; tinyxml2::StrPair::__autoclassinit
PUBLIC	??1XMLVisitor@tinyxml2@@UAE@XZ			; tinyxml2::XMLVisitor::~XMLVisitor
PUBLIC	?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z ; tinyxml2::XMLVisitor::VisitEnter
PUBLIC	?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z ; tinyxml2::XMLVisitor::VisitExit
PUBLIC	?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z ; tinyxml2::XMLVisitor::VisitEnter
PUBLIC	?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@@Z ; tinyxml2::XMLVisitor::VisitExit
PUBLIC	?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z ; tinyxml2::XMLVisitor::Visit
PUBLIC	?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLText@2@@Z ; tinyxml2::XMLVisitor::Visit
PUBLIC	?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLComment@2@@Z ; tinyxml2::XMLVisitor::Visit
PUBLIC	?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLUnknown@2@@Z ; tinyxml2::XMLVisitor::Visit
PUBLIC	??_GXMLVisitor@tinyxml2@@UAEPAXI@Z		; tinyxml2::XMLVisitor::`scalar deleting destructor'
PUBLIC	?NoChildren@XMLNode@tinyxml2@@QBE_NXZ		; tinyxml2::XMLNode::NoChildren
PUBLIC	?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ	; tinyxml2::XMLNode::FirstChild
PUBLIC	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ	; tinyxml2::XMLNode::FirstChild
PUBLIC	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
PUBLIC	?LastChild@XMLNode@tinyxml2@@QBEPBV12@XZ	; tinyxml2::XMLNode::LastChild
PUBLIC	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ	; tinyxml2::XMLNode::LastChild
PUBLIC	?LastChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::LastChildElement
PUBLIC	?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ	; tinyxml2::XMLNode::NextSibling
PUBLIC	?NextSibling@XMLNode@tinyxml2@@QAEPAV12@XZ	; tinyxml2::XMLNode::NextSibling
PUBLIC	?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
PUBLIC	?__autoclassinit@XMLNode@tinyxml2@@QAEXI@Z	; tinyxml2::XMLNode::__autoclassinit
PUBLIC	?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ	; tinyxml2::XMLAttribute::Next
PUBLIC	?Name@XMLElement@tinyxml2@@QBEPBDXZ		; tinyxml2::XMLElement::Name
PUBLIC	?IntAttribute@XMLElement@tinyxml2@@QBEHPBD@Z	; tinyxml2::XMLElement::IntAttribute
PUBLIC	?BoolAttribute@XMLElement@tinyxml2@@QBE_NPBD@Z	; tinyxml2::XMLElement::BoolAttribute
PUBLIC	?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
PUBLIC	?QueryBoolAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPA_N@Z ; tinyxml2::XMLElement::QueryBoolAttribute
PUBLIC	?QueryDoubleAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAN@Z ; tinyxml2::XMLElement::QueryDoubleAttribute
PUBLIC	?QueryAttribute@XMLElement@tinyxml2@@QBEHPBDPAH@Z ; tinyxml2::XMLElement::QueryAttribute
PUBLIC	?QueryAttribute@XMLElement@tinyxml2@@QBEHPBDPAN@Z ; tinyxml2::XMLElement::QueryAttribute
PUBLIC	?SetAttribute@XMLElement@tinyxml2@@QAEXPBD0@Z	; tinyxml2::XMLElement::SetAttribute
PUBLIC	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDH@Z	; tinyxml2::XMLElement::SetAttribute
PUBLIC	?SetAttribute@XMLElement@tinyxml2@@QAEXPBD_N@Z	; tinyxml2::XMLElement::SetAttribute
PUBLIC	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDN@Z	; tinyxml2::XMLElement::SetAttribute
PUBLIC	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDM@Z	; tinyxml2::XMLElement::SetAttribute
PUBLIC	?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ ; tinyxml2::XMLElement::FirstAttribute
PUBLIC	?HasBOM@XMLDocument@tinyxml2@@QBE_NXZ		; tinyxml2::XMLDocument::HasBOM
PUBLIC	?SetBOM@XMLDocument@tinyxml2@@QAEX_N@Z		; tinyxml2::XMLDocument::SetBOM
PUBLIC	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
PUBLIC	?DeleteNode@XMLDocument@tinyxml2@@QAEXPAVXMLNode@2@@Z ; tinyxml2::XMLDocument::DeleteNode
PUBLIC	?Error@XMLDocument@tinyxml2@@QBE_NXZ		; tinyxml2::XMLDocument::Error
PUBLIC	?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ ; tinyxml2::XMLDocument::ErrorID
PUBLIC	?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEXI@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::__autoclassinit
PUBLIC	?__autoclassinit@?$MemPoolT@$0DE@@tinyxml2@@QAEXI@Z ; tinyxml2::MemPoolT<52>::__autoclassinit
PUBLIC	?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEXI@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::__autoclassinit
PUBLIC	?__autoclassinit@?$MemPoolT@$0CE@@tinyxml2@@QAEXI@Z ; tinyxml2::MemPoolT<36>::__autoclassinit
PUBLIC	?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEXI@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::__autoclassinit
PUBLIC	?__autoclassinit@?$MemPoolT@$0DA@@tinyxml2@@QAEXI@Z ; tinyxml2::MemPoolT<48>::__autoclassinit
PUBLIC	?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEXI@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::__autoclassinit
PUBLIC	?__autoclassinit@?$MemPoolT@$0CM@@tinyxml2@@QAEXI@Z ; tinyxml2::MemPoolT<44>::__autoclassinit
PUBLIC	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z	; tinyxml2::XMLDocument::__autoclassinit
PUBLIC	??0XMLHandle@tinyxml2@@QAE@PAVXMLNode@1@@Z	; tinyxml2::XMLHandle::XMLHandle
PUBLIC	??0XMLHandle@tinyxml2@@QAE@AAVXMLNode@1@@Z	; tinyxml2::XMLHandle::XMLHandle
PUBLIC	?FirstChild@XMLHandle@tinyxml2@@QAE?AV12@XZ	; tinyxml2::XMLHandle::FirstChild
PUBLIC	?FirstChildElement@XMLHandle@tinyxml2@@QAE?AV12@PBD@Z ; tinyxml2::XMLHandle::FirstChildElement
PUBLIC	?ToElement@XMLHandle@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLHandle::ToElement
PUBLIC	?__autoclassinit@XMLHandle@tinyxml2@@QAEXI@Z	; tinyxml2::XMLHandle::__autoclassinit
PUBLIC	??0XMLConstHandle@tinyxml2@@QAE@PBVXMLNode@1@@Z	; tinyxml2::XMLConstHandle::XMLConstHandle
PUBLIC	??0XMLConstHandle@tinyxml2@@QAE@ABVXMLNode@1@@Z	; tinyxml2::XMLConstHandle::XMLConstHandle
PUBLIC	?FirstChild@XMLConstHandle@tinyxml2@@QBE?BV12@XZ ; tinyxml2::XMLConstHandle::FirstChild
PUBLIC	?FirstChildElement@XMLConstHandle@tinyxml2@@QBE?BV12@PBD@Z ; tinyxml2::XMLConstHandle::FirstChildElement
PUBLIC	?ToElement@XMLConstHandle@tinyxml2@@QBEPBVXMLElement@2@XZ ; tinyxml2::XMLConstHandle::ToElement
PUBLIC	?__autoclassinit@XMLConstHandle@tinyxml2@@QAEXI@Z ; tinyxml2::XMLConstHandle::__autoclassinit
PUBLIC	??1XMLPrinter@tinyxml2@@UAE@XZ			; tinyxml2::XMLPrinter::~XMLPrinter
PUBLIC	?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z ; tinyxml2::XMLPrinter::VisitExit
PUBLIC	?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ		; tinyxml2::XMLPrinter::CStr
PUBLIC	?CStrSize@XMLPrinter@tinyxml2@@QBEHXZ		; tinyxml2::XMLPrinter::CStrSize
PUBLIC	?CompactMode@XMLPrinter@tinyxml2@@MAE_NABVXMLElement@2@@Z ; tinyxml2::XMLPrinter::CompactMode
PUBLIC	??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ		; tinyxml2::DynArray<char const *,10>::~DynArray<char const *,10>
PUBLIC	?__autoclassinit@?$DynArray@PBD$09@tinyxml2@@QAEXI@Z ; tinyxml2::DynArray<char const *,10>::__autoclassinit
PUBLIC	??1?$DynArray@D$0BE@@tinyxml2@@QAE@XZ		; tinyxml2::DynArray<char,20>::~DynArray<char,20>
PUBLIC	?Size@?$DynArray@D$0BE@@tinyxml2@@QBEHXZ	; tinyxml2::DynArray<char,20>::Size
PUBLIC	?Mem@?$DynArray@D$0BE@@tinyxml2@@QBEPBDXZ	; tinyxml2::DynArray<char,20>::Mem
PUBLIC	?__autoclassinit@?$DynArray@D$0BE@@tinyxml2@@QAEXI@Z ; tinyxml2::DynArray<char,20>::__autoclassinit
PUBLIC	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z	; tinyxml2::XMLPrinter::__autoclassinit
PUBLIC	??_GXMLPrinter@tinyxml2@@UAEPAXI@Z		; tinyxml2::XMLPrinter::`scalar deleting destructor'
PUBLIC	?XMLTest@@YA_NPBD00_N1@Z			; XMLTest
PUBLIC	?NullLineEndings@@YAXPAD@Z			; NullLineEndings
PUBLIC	?example_1@@YAHXZ				; example_1
PUBLIC	?example_2@@YAHXZ				; example_2
PUBLIC	?example_3@@YAHXZ				; example_3
PUBLIC	?example_4@@YA_NXZ				; example_4
PUBLIC	_main
PUBLIC	??$XMLTest@H@@YA_NPBDHH_N@Z			; XMLTest<int>
PUBLIC	??$XMLTest@_N@@YA_NPBD_N11@Z			; XMLTest<bool>
PUBLIC	??$XMLTest@W4XMLError@tinyxml2@@@@YA_NPBDW4XMLError@tinyxml2@@1_N@Z ; XMLTest<enum tinyxml2::XMLError>
PUBLIC	??$XMLTest@I@@YA_NPBDII_N@Z			; XMLTest<unsigned int>
PUBLIC	??$XMLTest@M@@YA_NPBDMM_N@Z			; XMLTest<float>
PUBLIC	??$XMLTest@N@@YA_NPBDNN_N@Z			; XMLTest<double>
PUBLIC	??_7XMLVisitor@tinyxml2@@6B@			; tinyxml2::XMLVisitor::`vftable'
PUBLIC	??_7XMLPrinter@tinyxml2@@6B@			; tinyxml2::XMLPrinter::`vftable'
PUBLIC	??_C@_06MMBJDEJC@?$FLpass?$FN?$AA@		; `string'
PUBLIC	??_C@_06DBEIIGKC@?$FLfail?$FN?$AA@		; `string'
PUBLIC	??_C@_04MDKIEGGJ@?5?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_0O@PJBPHMNJ@?5?$CFs?5?$FL?$CFs?$FN?$FL?$CFs?$FN?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@MGFIECLE@resources?1dream?4xml?$AA@	; `string'
PUBLIC	??_C@_04MKCNCBEG@PLAY?$AA@			; `string'
PUBLIC	??_C@_05DMCAHJJE@TITLE?$AA@			; `string'
PUBLIC	??_C@_0BG@BOKCOHLJ@Name?5of?5play?5?$CI1?$CJ?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@JACNOAFK@Name?5of?5play?5?$CI2?$CJ?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@BLMCCKNI@attributeApproach?$AA@	; `string'
PUBLIC	??_C@_01MHEDDDHA@v?$AA@				; `string'
PUBLIC	??_C@_0N@DBACDMDK@textApproach?$AA@		; `string'
PUBLIC	??_C@_0CF@NAELEFGH@Both?5values?5are?5the?5same?3?5?$CFd?5and@ ; `string'
PUBLIC	??_C@_0P@HOEBBIHO@resources?1out?1?$AA@		; `string'
PUBLIC	??_C@_0CD@FNBOFDCL@Test?5file?5?8?$CFs?8?5loaded?4?5ErrorID?$DN?$CF@ ; `string'
PUBLIC	??_C@_0O@MGBHNCAN@Load?5time?$DN?$CFu?6?$AA@	; `string'
PUBLIC	??_C@_0BA@NCOPPKFI@Delete?5time?$DN?$CFu?6?$AA@	; `string'
PUBLIC	??_C@_0P@JMJCIMED@Total?5time?$DN?$CFu?6?$AA@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0NK@DCFJCLFO@Error?5opening?5test?5file?5?8dream?4x@ ; `string'
PUBLIC	??_C@_09HEGNPFBN@Example?91?$AA@		; `string'
PUBLIC	??_C@_09FPEAKGNO@Example?92?$AA@		; `string'
PUBLIC	??_C@_09EGFLJHJP@Example?93?$AA@		; `string'
PUBLIC	??_C@_09JBKABFI@Example?94?$AA@			; `string'
PUBLIC	??_C@_0DA@HHHLHLBD@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ ; `string'
PUBLIC	??_C@_0L@PPLFOKHK@Subelement?$AA@		; `string'
PUBLIC	??_C@_07HCLJNICE@element?$AA@			; `string'
PUBLIC	??_C@_03KCMAIMAP@sub?$AA@			; `string'
PUBLIC	??_C@_06CEIPPJF@attrib?$AA@			; `string'
PUBLIC	??_C@_07GJGNEJFD@comment?$AA@			; `string'
PUBLIC	??_C@_07NNFIJNBL@?$CG?5Text?$CB?$AA@		; `string'
PUBLIC	??_C@_0BB@BFILBPOF@Programmatic?5DOM?$AA@	; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0CL@GAOKPBOJ@?$DMelement?$DO?$DMsub?5attrib?$DN?$CC1?$CC?1?$DO?$DMsub?1?$DO@ ; `string'
PUBLIC	??_C@_0N@JIEHICMA@Compact?5mode?$AA@		; `string'
PUBLIC	??_C@_0BL@MKAHMKJP@?4?1resources?1out?1pretty?4xml?$AA@ ; `string'
PUBLIC	??_C@_0BM@HCFLCKCD@?4?1resources?1out?1compact?4xml?$AA@ ; `string'
PUBLIC	??_C@_0BL@FKPDPIFL@resources?1out?1dreamout?4xml?$AA@ ; `string'
PUBLIC	??_C@_0BC@CIAMHNHO@xml?5version?$DN?$CC1?40?$CC?$AA@ ; `string'
PUBLIC	??_C@_05MMFIBGEF@Dream?$AA@			; `string'
PUBLIC	??_C@_0BP@MHJCDDEA@DOCTYPE?5PLAY?5SYSTEM?5?$CCplay?4dtd?$CC?$AA@ ; `string'
PUBLIC	??_C@_0CA@JHNCBPHK@And?5Robin?5shall?5restore?5amends?4?$AA@ ; `string'
PUBLIC	??_C@_09BHKMDEKD@Dream?9out?$AA@		; `string'
PUBLIC	??_C@_0HF@CCALMFNO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@ ; `string'
PUBLIC	??_C@_07KEDHPJMI@Bad?5XML?$AA@			; `string'
PUBLIC	??_C@_0CK@POKHOPMA@?$DMdoc?5attr0?$DN?81?8?5attr1?$DN?82?40?8?5attr2@ ; `string'
PUBLIC	??_C@_05ONKJHJKK@attr0?$AA@			; `string'
PUBLIC	??_C@_0BP@JOIIDGJG@Query?5attribute?3?5int?5as?5double?$AA@ ; `string'
PUBLIC	??_C@_05PELCEIOL@attr1?$AA@			; `string'
PUBLIC	??_C@_0CC@GOMFGJFF@Query?5attribute?3?5double?5as?5doubl@ ; `string'
PUBLIC	??_C@_0BP@JKMCBOMB@Query?5attribute?3?5double?5as?5int?$AA@ ; `string'
PUBLIC	??_C@_05NPJPBLCI@attr2?$AA@			; `string'
PUBLIC	??_C@_0BO@FGLKNEME@Query?5attribute?3?5not?5a?5number?$AA@ ; `string'
PUBLIC	??_C@_03BLIIKFAI@bar?$AA@			; `string'
PUBLIC	??_C@_0CA@BNGCPADO@Query?5attribute?3?5does?5not?5exist?$AA@ ; `string'
PUBLIC	??_C@_06NOBAAADK@?$DMdoc?1?$DO?$AA@		; `string'
PUBLIC	??_C@_08MGPAICNM@strValue?$AA@			; `string'
PUBLIC	??_C@_03OJMAPEGJ@str?$AA@			; `string'
PUBLIC	??_C@_03JBIPMCLC@int?$AA@			; `string'
PUBLIC	??_C@_06BNJCAIGJ@double?$AA@			; `string'
PUBLIC	??_C@_0BF@JMEHCLBP@Attribute?5match?5test?$AA@	; `string'
PUBLIC	??_C@_0CA@EAIDEFBO@Attribute?5round?5trip?4?5c?9string?4?$AA@ ; `string'
PUBLIC	??_C@_0BL@CEGNIGNP@Attribute?5round?5trip?4?5int?4?$AA@ ; `string'
PUBLIC	??_C@_0BO@IHMJGANF@Attribute?5round?5trip?4?5double?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@COLFGKDP@Alternate?5query?$AA@	; `string'
PUBLIC	??_C@_0BH@GIFCGBMN@resources?1utf8test?4xml?$AA@ ; `string'
PUBLIC	??_C@_08JEEDKNPB@document?$AA@			; `string'
PUBLIC	??_C@_07PEAPJBGG@Russian?$AA@			; `string'
PUBLIC	??_C@_05MFEJDJP@value?$AA@			; `string'
PUBLIC	??_C@_0BG@GHEBNCCN@UTF?98?3?5Russian?5value?4?$AA@ ; `string'
PUBLIC	??_C@_0N@KGCIHMHM@?$DM?P?$LI?P?$LM?P?$LF?P?$LF?Q?$IC?$DO?$AA@ ; `string'
PUBLIC	??_C@_0CG@KNPGPFFM@UTF?98?3?5Browsing?5russian?5element?5@ ; `string'
PUBLIC	??_C@_0BO@NLDFJKGL@resources?1out?1utf8testout?4xml?$AA@ ; `string'
PUBLIC	??_C@_0BN@JICGPLMD@resources?1utf8testverify?4xml?$AA@ ; `string'
PUBLIC	??_C@_0M@BACAGND@verify?3?$CFs?$DM?6?$AA@	; `string'
PUBLIC	??_C@_0M@DCMPPKDG@saved?5?3?$CFs?$DM?6?$AA@	; `string'
PUBLIC	??_C@_0CL@FPCEDNNA@UTF?98?3?5Verified?5multi?9language?5r@ ; `string'
PUBLIC	??_C@_0BJ@JKDBNMPF@?$DMfoo?$DOThis?5is?5?5text?$DM?1foo?$DO?$AA@ ; `string'
PUBLIC	??_C@_0O@NCGAPDDE@This?5is?5?5text?$AA@		; `string'
PUBLIC	??_C@_0BG@DKADDCJD@GetText?$CI?$CJ?5normal?5use?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@NPPGHFHL@?$DMfoo?$DO?$DMb?$DOThis?5is?5text?$DM?1b?$DO?$DM?1foo?$DO?$AA@ ; `string'
PUBLIC	??_C@_0BN@JFKHBMCC@GetText?$CI?$CJ?5contained?5element?4?$AA@ ; `string'
PUBLIC	??_C@_0M@PAFJMELE@?$DMfoo?$DO?$DM?1foo?$DO?$AA@	; `string'
PUBLIC	??_C@_09KPLDGONG@darkness?4?$AA@		; `string'
PUBLIC	??_C@_0CD@LIEFECGF@SetText?$CI?$CJ?5normal?5use?5?$CIopen?1close@ ; `string'
PUBLIC	??_C@_0M@FKDKOAKD@blue?5flame?4?$AA@		; `string'
PUBLIC	??_C@_0BD@LDKHKAAP@SetText?$CI?$CJ?5replace?4?$AA@ ; `string'
PUBLIC	??_C@_06NJAOBOIJ@?$DMfoo?1?$DO?$AA@		; `string'
PUBLIC	??_C@_0L@MBNNDOHD@The?5driver?$AA@		; `string'
PUBLIC	??_C@_0CF@LAEHCCKM@SetText?$CI?$CJ?5normal?5use?4?5?$CIself?9clos@ ; `string'
PUBLIC	??_C@_0O@MIIPHOPP@?$DMb?$DOhorses?$DM?1b?$DO?$AA@ ; `string'
PUBLIC	??_C@_0CG@CJOLAFFM@SetText?$CI?$CJ?5replace?5with?5tag?9like?5@ ; `string'
PUBLIC	??_C@_0CN@IPKKIGIC@?$DMfoo?$DO?$DMbar?$DOText?5in?5nested?5element@ ; `string'
PUBLIC	??_C@_06OKGGDFFJ@wolves?$AA@			; `string'
PUBLIC	??_C@_0CO@IMDKLJDD@SetText?$CI?$CJ?5prefix?5to?5nested?5non?9t@ ; `string'
PUBLIC	??_C@_0O@FHILFDBK@SetText?5types?$AA@		; `string'
PUBLIC	??_C@_01HIHLOKLC@1?$AA@				; `string'
PUBLIC	??_C@_03GMOBGHL@1?45?$AA@			; `string'
PUBLIC	??_C@_0FF@LNIBCIJH@?$DMxmlElement?$DO?$DM?$CB?$FLCDATA?$FLI?5am?5?$DO?5the?5@ ; `string'
PUBLIC	??_C@_0DA@BKAEPNI@I?5am?5?$DO?5the?5rules?$CB?6?4?4?4since?5I?5mak@ ; `string'
PUBLIC	??_C@_0N@MEEMONHG@CDATA?5parse?4?$AA@		; `string'
PUBLIC	??_C@_0FM@NJMMKIOK@?$DMxmlElement?$DO?$DM?$CB?$FLCDATA?$FL?$DMb?$DOI?5am?5?$DO?5t@ ; `string'
PUBLIC	??_C@_0DH@HHLGMDOJ@?$DMb?$DOI?5am?5?$DO?5the?5rules?$CB?$DM?1b?$DO?6?4?4?4sinc@ ; `string'
PUBLIC	??_C@_0CA@GMICGAMB@CDATA?5parse?4?5?$FL?5tixml1?31480107?5?$FN?$AA@ ; `string'
PUBLIC	??_C@_06EBOPLIP@Parent?$AA@			; `string'
PUBLIC	??_C@_0L@HDPLNMID@childText0?$AA@		; `string'
PUBLIC	??_C@_0L@GKOAONMC@childText1?$AA@		; `string'
PUBLIC	??_C@_0CG@MLGHGPCL@Test?5InsertAfterChild?5on?5empty?5n@ ; `string'
PUBLIC	??_C@_0BAH@KKKMGCGH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@ ; `string'
PUBLIC	??_C@_07JKKCBBMM@context?$AA@			; `string'
PUBLIC	??_C@_0GO@IJIKLCCP@Line?55?5has?5?$CCquotation?5marks?$CC?5and@ ; `string'
PUBLIC	??_C@_0BO@MCPEDDIC@Entity?5transformation?3?5read?4?5?$AA@ ; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_0BL@JOEHEAJB@resources?1out?1textfile?4txt?$AA@ ; `string'
PUBLIC	??_C@_0JO@DGGKOKBD@?$DMpsg?5context?$DN?$CCLine?55?5has?5?$CGquot?$DLq@ ; `string'
PUBLIC	??_C@_0BP@LGFBHJGA@Entity?5transformation?3?5write?4?5?$AA@ ; `string'
PUBLIC	??_C@_0MK@GGAOCKLE@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@ ; `string'
PUBLIC	??_C@_0EJ@ELOFOBAI@Line?55?5has?5?$CGquot?$DLquotation?5marks@ ; `string'
PUBLIC	??_C@_0BD@KLPMDKDG@No?5entity?5parsing?4?$AA@	; `string'
PUBLIC	??_C@_0M@DFJHOJG@Crazy?5?$CGttk?$DL?$AA@	; `string'
PUBLIC	??_C@_0DB@OHKCIJPO@?$DM?$DPxml?5version?$DN?81?40?8?$DP?$DO?$DMa?4elem?5xmi@ ; `string'
PUBLIC	??_C@_0N@IKFDFIHA@dot?5in?5names?$AA@		; `string'
PUBLIC	??_C@_06MMJJKPDB@a?4elem?$AA@			; `string'
PUBLIC	??_C@_03GJAMENNA@2?40?$AA@			; `string'
PUBLIC	??_C@_0M@OPBPNMBD@xmi?4version?$AA@		; `string'
PUBLIC	??_C@_0EJ@CPIHGBID@?$DMelement?$DO?$DMName?$DO1?41?5Start?5easy?5ig@ ; `string'
PUBLIC	??_C@_0CF@PDDEMPDP@1?41?5Start?5easy?5ignore?5fin?5thickn@ ; `string'
PUBLIC	??_C@_0BH@NGKLNOLB@Entity?5with?5one?5digit?4?$AA@ ; `string'
PUBLIC	??_C@_0HN@OKHKIEOC@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DM?$CBDOCTYPE?5@ ; `string'
PUBLIC	??_C@_0BI@NHIHPBDM@resources?1out?1test7?4xml?$AA@ ; `string'
PUBLIC	??_C@_0BP@MLLCGLEH@DOCTYPE?5PLAY?5SYSTEM?5?8play?4dtd?8?$AA@ ; `string'
PUBLIC	??_C@_0BK@ECFILBLF@Correct?5value?5of?5unknown?4?$AA@ ; `string'
PUBLIC	??_C@_0BI@HBLJONDE@?$DM?$CB?9?9?5Somewhat?$DMevil?$DO?5?9?9?$DO?$AA@ ; `string'
PUBLIC	??_C@_0BB@GGPEMION@?5Somewhat?$DMevil?$DO?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@FNPJMOFI@Comment?5formatting?4?$AA@	; `string'
PUBLIC	??_C@_0CD@DKALFOFA@?$DMelement?5attr?$DN?8red?8?5attr?$DN?8blue?8?5@ ; `string'
PUBLIC	??_C@_0BN@DGCJJCB@Parsing?5repeated?5attributes?4?$AA@ ; `string'
PUBLIC	??_C@_0CE@NFMLDHKO@?$DMelement?5att?$AAr?$DN?8red?8?5attr?$DN?8blue?8@ ; `string'
PUBLIC	??_C@_0BM@JADGBJGB@Embedded?5null?5throws?5error?4?$AA@ ; `string'
PUBLIC	??_C@_04PFOHOKJK@?5?5?5?5?$AA@			; `string'
PUBLIC	??_C@_0BF@HAJDLEGD@Empty?5document?5error?$AA@	; `string'
PUBLIC	??_C@_0BE@LNMJCBEP@?$DMtest?$DO?$CG?$CDx0e?$DL?$DM?1test?$DO?$AA@ ; `string'
PUBLIC	??_C@_0O@HKEHIJIC@Low?5entities?4?$AA@		; `string'
PUBLIC	??_C@_0BH@JIACOPCA@?$DMfoo?5attribute?$DNbar?$CC?5?1?$DO?$AA@ ; `string'
PUBLIC	??_C@_0CB@MBJEHLNC@Throw?5error?5with?5bad?5end?5quotes?4@ ; `string'
PUBLIC	??_C@_03HPGBEFGP@?$DMx?$DO?$AA@			; `string'
PUBLIC	??_C@_0CA@BHPABECP@Missing?5end?5tag?5at?5end?5of?5input?$AA@ ; `string'
PUBLIC	??_C@_04EIPGDJCO@?$DMx?$DO?5?$AA@		; `string'
PUBLIC	??_C@_0CJ@HGJJNIAN@Missing?5end?5tag?5with?5trailing?5wh@ ; `string'
PUBLIC	??_C@_07CPCNDMHI@?$DMx?$DO?$DM?1y?$DO?$AA@	; `string'
PUBLIC	??_C@_0BA@NJJGABAE@Mismatched?5tags?$AA@	; `string'
PUBLIC	??_C@_0EB@ODKPIILK@?$DM?$CB?9?9?5declarations?5for?5?$DMhead?$DO?5?$CG?5?$DM@ ; `string'
PUBLIC	??_C@_0CD@CODJEHCK@?5declarations?5for?5?$DMhead?$DO?5?$CG?5?$DMbody@ ; `string'
PUBLIC	??_C@_0BK@MALMLOLG@Comments?5ignore?5entities?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@FBELHALE@?5far?5?$CGamp?$DL?5away?5?$AA@ ; `string'
PUBLIC	??_C@_0GI@CMIIHJDO@?$DMParent?$DO?$DMchild1?5att?$DN?8?8?1?$DO?$DM?$CB?9?9?5Wit@ ; `string'
PUBLIC	??_C@_0BM@JIIHAJNF@Comments?5iterate?5correctly?4?$AA@ ; `string'
PUBLIC	??_C@_0EM@CJMHAPLB@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCut@ ; `string'
PUBLIC	??_C@_0CC@GGDECDLF@?$DMattributelist?$DO?5?$DM?1attributelist?5@ ; `string'
PUBLIC	??_C@_0BK@HKANBGJD@Handle?5end?5tag?5whitespace?$AA@ ; `string'
PUBLIC	??_C@_0P@DICPCCME@?$DMinfinite?$DOloop?$AA@	; `string'
PUBLIC	??_C@_0BE@JGNLGJDE@Infinite?5loop?5test?4?$AA@	; `string'
PUBLIC	??_C@_0EK@ONBFBPNK@?$DM?$DPxml?5version?$DN?81?40?8?$DP?$DO?5?$DMelement?$DO?$DM@ ; `string'
PUBLIC	??_C@_0BA@HNALEGEM@Clone?5and?5Equal?$AA@	; `string'
PUBLIC	??_C@_0DA@GFHCIFGH@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@ ; `string'
PUBLIC	??_C@_0BL@FMIAMMDP@Error?5in?5snprinf?5handling?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@PMCCNHHC@Attribute?5order?$AA@	; `string'
PUBLIC	??_C@_01FDFGLJHB@2?$AA@				; `string'
PUBLIC	??_C@_01EKENIIDA@3?$AA@				; `string'
PUBLIC	??_C@_07HEAMEKAE@attrib3?$AA@			; `string'
PUBLIC	??_C@_07GNBHHLEF@attrib2?$AA@			; `string'
PUBLIC	??_C@_07EGDKCIIG@attrib1?$AA@			; `string'
PUBLIC	??_C@_0BI@IANOCNPB@Attribute?5order?5?$CIempty?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0L@LPIGNHFH@attribute1?$AA@		; `string'
PUBLIC	??_C@_0P@NGBJGMEL@Test?5Attribute?$AA@		; `string'
PUBLIC	??_C@_0BI@PAJAIDMH@Attribute?5with?5space?5?$CD1?$AA@ ; `string'
PUBLIC	??_C@_0BI@NLLNNAAE@Attribute?5with?5space?5?$CD2?$AA@ ; `string'
PUBLIC	??_C@_0BI@MCKGOBEF@Attribute?5with?5space?5?$CD3?$AA@ ; `string'
PUBLIC	??_C@_0CA@IBJIGOGD@Infinite?5loop?5in?5shallow?5equal?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@CPDDNNLH@Handle?0?5success?0?5mutable?$AA@ ; `string'
PUBLIC	??_C@_04CGFJFPFD@none?$AA@			; `string'
PUBLIC	??_C@_0BF@GDKFDLID@Handle?0?5dne?0?5mutable?$AA@ ; `string'
PUBLIC	??_C@_0BH@HKJKIOMM@Handle?0?5success?0?5const?$AA@ ; `string'
PUBLIC	??_C@_0BD@IDJKNPBF@Handle?0?5dne?0?5const?$AA@	; `string'
PUBLIC	??_C@_0BM@GCGFEAOC@BOM?5and?5default?5declaration?$AA@ ; `string'
PUBLIC	??_C@_08DPMAHLC@CStrSize?$AA@			; `string'
PUBLIC	??_C@_0CF@GPHHENIA@?$DMipxml?5ws?$DN?81?8?$DO?$DMinfo?5bla?$DN?8?5?1?$DO?$DM?1ip@ ; `string'
PUBLIC	??_C@_0P@BCNOFDDB@Ill?5formed?5XML?$AA@		; `string'
PUBLIC	??_C@_0ED@LDGKNEHM@?$DMpoint?$DO?5?$DMx?$DO1?42?$DM?1x?$DO?5?$DMy?$DO1?$DM?1y?$DO?5?$DMz?$DO3@ ; `string'
PUBLIC	??_C@_01EANLCPLP@y?$AA@				; `string'
PUBLIC	??_C@_01FJMABOPO@x?$AA@				; `string'
PUBLIC	??_C@_05HDPIMK@valid?$AA@			; `string'
PUBLIC	??_C@_0N@LKHDPBLF@QueryIntText?$AA@		; `string'
PUBLIC	??_C@_0BC@CCNPEEIL@QueryUnsignedText?$AA@	; `string'
PUBLIC	??_C@_0P@GCNAFAFM@QueryFloatText?$AA@		; `string'
PUBLIC	??_C@_0BA@IBOJFNAC@QueryDoubleText?$AA@		; `string'
PUBLIC	??_C@_0O@EMFLMKH@QueryBoolText?$AA@		; `string'
PUBLIC	??_C@_0DG@KHOIEEBA@?$DMelement?$DO?$DM_sub?1?$DO?$DM?3sub?1?$DO?$DMsub?3sub?1@ ; `string'
PUBLIC	??_C@_0CG@LOCDHJFB@Non?9alpha?5element?5lead?5letter?5pa@ ; `string'
PUBLIC	??_C@_0CO@ELGOLBEM@?$DMelement?5_attr1?$DN?$CCfoo?$CC?5?3attr2?$DN?$CCba@ ; `string'
PUBLIC	??_C@_0CL@EMHFCFPM@Non?9alpha?5attribute?5lead?5charact@ ; `string'
PUBLIC	??_C@_0BE@ELECGKJA@?$DM3lement?$DO?$DM?13lement?$DO?$AA@ ; `string'
PUBLIC	??_C@_0CN@MHFPJKIO@Element?5names?5with?5lead?5digit?5fa@ ; `string'
PUBLIC	??_C@_0CI@FIBMGFCP@?$DMelement?1?$DOWOA?5THIS?5ISN?8T?5GOING?5T@ ; `string'
PUBLIC	??_C@_0BM@CGMGPGOD@Set?5length?5of?5incoming?5data?$AA@ ; `string'
PUBLIC	??_C@_0BD@NPIJJJII@Document?5Clear?$CI?$CJ?8s?$AA@ ; `string'
PUBLIC	??_C@_0IH@HJKJGCIC@?$DMelement?$DO?$DMa?$DO?5This?5?6is?5?$CGapos?$DL?5?5te@ ; `string'
PUBLIC	??_C@_0BB@FJIIKGDN@This?5is?5?8?5text?5?8?$AA@	; `string'
PUBLIC	??_C@_0BE@CMHNPBKO@Whitespace?5collapse?$AA@	; `string'
PUBLIC	??_C@_0BI@FBKIDIGN@?$DMelement?$DO?5?5?5?5?$DM?1element?$DO?$AA@ ; `string'
PUBLIC	??_C@_0BG@FFGMDLLC@Whitespace?5?5all?5space?$AA@ ; `string'
PUBLIC	??_C@_06OJAIHGIC@unused?$AA@			; `string'
PUBLIC	??_C@_0BJ@PHGGEOAM@Tracking?5unused?5elements?$AA@ ; `string'
PUBLIC	??_C@_0CE@KBPIICGI@?$DMparent?$DO?$DMchild?$DOabc?$DM?1child?$DO?$DM?1pare@ ; `string'
PUBLIC	??_C@_06MLKDMCBD@parent?$AA@			; `string'
PUBLIC	??_C@_05GPGNDLEK@child?$AA@			; `string'
PUBLIC	??_C@_0BE@MBLOGLKH@?$DMchild?$DOabc?$DM?1child?$DO?6?$AA@ ; `string'
PUBLIC	??_C@_0BI@HPOOLHMM@Printing?5of?5sub?9element?$AA@ ; `string'
PUBLIC	??_C@_0BE@MDBJGIIB@resources?1empty?4xml?$AA@	; `string'
PUBLIC	??_C@_0BG@KJCHNKFD@Loading?5an?5empty?5file?$AA@ ; `string'
PUBLIC	??_C@_0BJ@CHGEEKHN@XML_ERROR_EMPTY_DOCUMENT?$AA@ ; `string'
PUBLIC	??_C@_0CO@PCABNGG@Loading?5an?5empty?5file?5and?5ErrorN@ ; `string'
PUBLIC	??_C@_0BJ@OLHFLBMB@BOM?5preservation?5?$CIparse?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BL@BKJEMECM@BOM?5preservation?5?$CIcompare?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BG@MIOOCLIO@resources?1bomtest?4xml?$AA@	; `string'
PUBLIC	??_C@_0BI@PFBIFHKF@BOM?5preservation?5?$CIload?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0HC@CBOIMHMF@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@ ; `string'
PUBLIC	??_C@_0HC@IOIHEOFF@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@ ; `string'
PUBLIC	??_C@_0GN@KIBDBHHO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@ ; `string'
PUBLIC	??_C@_0GN@FCBOADCO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@ ; `string'
PUBLIC	??_C@_03OHDNLOHO@one?$AA@			; `string'
PUBLIC	??_C@_07NIJMFPAJ@subtree?$AA@			; `string'
PUBLIC	??_C@_03IJDNBOJF@two?$AA@			; `string'
PUBLIC	??_C@_0CF@EMCHKENB@Move?5node?5from?5within?5?$DMone?$DO?5to?5?$DM@ ; `string'
PUBLIC	??_C@_0CI@CODAANPB@Move?5node?5from?5within?5?$DMone?$DO?5afte@ ; `string'
PUBLIC	??_C@_0CI@BJIGDGKB@Move?5node?5from?5within?5?$DMone?$DO?5afte@ ; `string'
PUBLIC	??_C@_0DI@HAIDNGPC@?$DMsvg?5width?5?$DN?5?$CC128?$CC?5height?5?$DN?5?$CC128@ ; `string'
PUBLIC	??_C@_09KECGMEAA@attrA?9f64?$AA@		; `string'
PUBLIC	??_C@_09CCLCLGKO@attrB?9f64?$AA@		; `string'
PUBLIC	??_C@_09OJOOGFAL@attrC?9f64?$AA@		; `string'
PUBLIC	??_C@_09PEOLFFLD@attrD?9f64?$AA@		; `string'
PUBLIC	??_C@_09PELHKBGN@attrA?9f32?$AA@		; `string'
PUBLIC	??_C@_09HCCDNDMD@attrB?9f32?$AA@		; `string'
PUBLIC	??_C@_09LJHPAAGG@attrC?9f32?$AA@		; `string'
PUBLIC	??_C@_09KEHKDANO@attrD?9f32?$AA@		; `string'
PUBLIC	??_C@_0CN@OLALBDAH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCUT@ ; `string'
PUBLIC	??_C@_0CO@POACOABE@?6Parsing?5?$CFs?5of?5dream?4xml?3?5?$CF?43f?5m@ ; `string'
PUBLIC	??_C@_0BD@GBHHAEKH@?6Pass?5?$CFd?0?5Fail?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0O@ECKPCLMN@?5?$CFs?5?$FL?$CFd?$FN?$FL?$CFd?$FN?6?$AA@ ; `string'
PUBLIC	??_R4XMLPrinter@tinyxml2@@6B@			; tinyxml2::XMLPrinter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXMLPrinter@tinyxml2@@@8			; tinyxml2::XMLPrinter `RTTI Type Descriptor'
PUBLIC	??_R3XMLPrinter@tinyxml2@@8			; tinyxml2::XMLPrinter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLPrinter@tinyxml2@@8			; tinyxml2::XMLPrinter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XMLPrinter@tinyxml2@@8		; tinyxml2::XMLPrinter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@XMLVisitor@tinyxml2@@8		; tinyxml2::XMLVisitor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVXMLVisitor@tinyxml2@@@8			; tinyxml2::XMLVisitor `RTTI Type Descriptor'
PUBLIC	??_R3XMLVisitor@tinyxml2@@8			; tinyxml2::XMLVisitor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLVisitor@tinyxml2@@8			; tinyxml2::XMLVisitor::`RTTI Base Class Array'
PUBLIC	??_R4XMLVisitor@tinyxml2@@6B@			; tinyxml2::XMLVisitor::`RTTI Complete Object Locator'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@2edbe6ff
PUBLIC	__real@3ddb7cdfd9d7bdbb
PUBLIC	__real@3dfcd6ea
PUBLIC	__real@3f99999a
PUBLIC	__real@3fbf9add3739635f
PUBLIC	__real@3fc00000
PUBLIC	__real@3ff3333333333333
PUBLIC	__real@3ff8000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@419d6f34547e6b75
PUBLIC	__real@41cdcd6500000000
PUBLIC	__real@41cdd50620000000
PUBLIC	__real@4415af1d78b58c40
PUBLIC	__real@4ceb79a3
PUBLIC	__real@4e6e6b28
PUBLIC	__real@4e6ea831
PUBLIC	__real@60ad78ec
PUBLIC	__real@bff0000000000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fgets:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fread:PROC
EXTRN	__imp__fseek:PROC
EXTRN	__imp__ftell:PROC
EXTRN	__imp__printf:PROC
EXTRN	__imp__exit:PROC
EXTRN	_strcmp:PROC
EXTRN	??_EXMLVisitor@tinyxml2@@UAEPAXI@Z:PROC		; tinyxml2::XMLVisitor::`vector deleting destructor'
EXTRN	?Value@XMLNode@tinyxml2@@QBEPBDXZ:PROC		; tinyxml2::XMLNode::Value
EXTRN	?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z:PROC ; tinyxml2::XMLNode::FirstChildElement
EXTRN	?LastChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z:PROC ; tinyxml2::XMLNode::LastChildElement
EXTRN	?NextSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z:PROC ; tinyxml2::XMLNode::NextSiblingElement
EXTRN	?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z:PROC ; tinyxml2::XMLNode::InsertEndChild
EXTRN	?InsertFirstChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z:PROC ; tinyxml2::XMLNode::InsertFirstChild
EXTRN	?InsertAfterChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@0@Z:PROC ; tinyxml2::XMLNode::InsertAfterChild
EXTRN	?DeleteChild@XMLNode@tinyxml2@@QAEXPAV12@@Z:PROC ; tinyxml2::XMLNode::DeleteChild
EXTRN	?Name@XMLAttribute@tinyxml2@@QBEPBDXZ:PROC	; tinyxml2::XMLAttribute::Name
EXTRN	?Value@XMLAttribute@tinyxml2@@QBEPBDXZ:PROC	; tinyxml2::XMLAttribute::Value
EXTRN	?QueryIntValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAH@Z:PROC ; tinyxml2::XMLAttribute::QueryIntValue
EXTRN	?QueryBoolValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z:PROC ; tinyxml2::XMLAttribute::QueryBoolValue
EXTRN	?QueryDoubleValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAN@Z:PROC ; tinyxml2::XMLAttribute::QueryDoubleValue
EXTRN	?SetAttribute@XMLAttribute@tinyxml2@@QAEXPBD@Z:PROC ; tinyxml2::XMLAttribute::SetAttribute
EXTRN	?SetAttribute@XMLAttribute@tinyxml2@@QAEXH@Z:PROC ; tinyxml2::XMLAttribute::SetAttribute
EXTRN	?SetAttribute@XMLAttribute@tinyxml2@@QAEX_N@Z:PROC ; tinyxml2::XMLAttribute::SetAttribute
EXTRN	?SetAttribute@XMLAttribute@tinyxml2@@QAEXN@Z:PROC ; tinyxml2::XMLAttribute::SetAttribute
EXTRN	?SetAttribute@XMLAttribute@tinyxml2@@QAEXM@Z:PROC ; tinyxml2::XMLAttribute::SetAttribute
EXTRN	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z:PROC ; tinyxml2::XMLElement::Attribute
EXTRN	?DeleteAttribute@XMLElement@tinyxml2@@QAEXPBD@Z:PROC ; tinyxml2::XMLElement::DeleteAttribute
EXTRN	?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z:PROC ; tinyxml2::XMLElement::FindAttribute
EXTRN	?GetText@XMLElement@tinyxml2@@QBEPBDXZ:PROC	; tinyxml2::XMLElement::GetText
EXTRN	?SetText@XMLElement@tinyxml2@@QAEXPBD@Z:PROC	; tinyxml2::XMLElement::SetText
EXTRN	?SetText@XMLElement@tinyxml2@@QAEXH@Z:PROC	; tinyxml2::XMLElement::SetText
EXTRN	?SetText@XMLElement@tinyxml2@@QAEXI@Z:PROC	; tinyxml2::XMLElement::SetText
EXTRN	?SetText@XMLElement@tinyxml2@@QAEX_N@Z:PROC	; tinyxml2::XMLElement::SetText
EXTRN	?SetText@XMLElement@tinyxml2@@QAEXN@Z:PROC	; tinyxml2::XMLElement::SetText
EXTRN	?SetText@XMLElement@tinyxml2@@QAEXM@Z:PROC	; tinyxml2::XMLElement::SetText
EXTRN	?QueryIntText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAH@Z:PROC ; tinyxml2::XMLElement::QueryIntText
EXTRN	?QueryUnsignedText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAI@Z:PROC ; tinyxml2::XMLElement::QueryUnsignedText
EXTRN	?QueryBoolText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z:PROC ; tinyxml2::XMLElement::QueryBoolText
EXTRN	?QueryDoubleText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAN@Z:PROC ; tinyxml2::XMLElement::QueryDoubleText
EXTRN	?QueryFloatText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAM@Z:PROC ; tinyxml2::XMLElement::QueryFloatText
EXTRN	?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z:PROC ; tinyxml2::XMLElement::FindOrCreateAttribute
EXTRN	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z:PROC ; tinyxml2::XMLDocument::XMLDocument
EXTRN	??1XMLDocument@tinyxml2@@UAE@XZ:PROC		; tinyxml2::XMLDocument::~XMLDocument
EXTRN	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z:PROC ; tinyxml2::XMLDocument::Parse
EXTRN	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z:PROC ; tinyxml2::XMLDocument::LoadFile
EXTRN	?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD_N@Z:PROC ; tinyxml2::XMLDocument::SaveFile
EXTRN	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z:PROC ; tinyxml2::XMLDocument::Print
EXTRN	?Accept@XMLDocument@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z:PROC ; tinyxml2::XMLDocument::Accept
EXTRN	?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z:PROC ; tinyxml2::XMLDocument::NewElement
EXTRN	?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z:PROC ; tinyxml2::XMLDocument::NewComment
EXTRN	?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z:PROC ; tinyxml2::XMLDocument::NewText
EXTRN	?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z:PROC ; tinyxml2::XMLDocument::NewDeclaration
EXTRN	?ErrorName@XMLDocument@tinyxml2@@QBEPBDXZ:PROC	; tinyxml2::XMLDocument::ErrorName
EXTRN	?PrintError@XMLDocument@tinyxml2@@QBEXXZ:PROC	; tinyxml2::XMLDocument::PrintError
EXTRN	?Clear@XMLDocument@tinyxml2@@QAEXXZ:PROC	; tinyxml2::XMLDocument::Clear
EXTRN	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z:PROC ; tinyxml2::XMLPrinter::XMLPrinter
EXTRN	?CloseElement@XMLPrinter@tinyxml2@@UAEX_N@Z:PROC ; tinyxml2::XMLPrinter::CloseElement
EXTRN	?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z:PROC ; tinyxml2::XMLPrinter::VisitEnter
EXTRN	?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z:PROC ; tinyxml2::XMLPrinter::VisitEnter
EXTRN	?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@@Z:PROC ; tinyxml2::XMLPrinter::VisitExit
EXTRN	?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLText@2@@Z:PROC ; tinyxml2::XMLPrinter::Visit
EXTRN	?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLComment@2@@Z:PROC ; tinyxml2::XMLPrinter::Visit
EXTRN	?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z:PROC ; tinyxml2::XMLPrinter::Visit
EXTRN	?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLUnknown@2@@Z:PROC ; tinyxml2::XMLPrinter::Visit
EXTRN	?PrintSpace@XMLPrinter@tinyxml2@@MAEXH@Z:PROC	; tinyxml2::XMLPrinter::PrintSpace
EXTRN	??_EXMLPrinter@tinyxml2@@UAEPAXI@Z:PROC		; tinyxml2::XMLPrinter::`vector deleting destructor'
EXTRN	__imp__clock:PROC
EXTRN	__imp___mkdir:PROC
EXTRN	__imp___CrtSetDbgFlag:PROC
EXTRN	__imp___CrtMemCheckpoint:PROC
EXTRN	__imp___CrtMemDifference:PROC
EXTRN	__imp___CrtMemDumpStatistics:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp__QueryPerformanceCounter@4:PROC
EXTRN	__imp__QueryPerformanceFrequency@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@60ad78ec
CONST	SEGMENT
__real@60ad78ec DD 060ad78ecr			; 1e+020
CONST	ENDS
;	COMDAT __real@4e6ea831
CONST	SEGMENT
__real@4e6ea831 DD 04e6ea831r			; 1.001e+009
CONST	ENDS
;	COMDAT __real@4e6e6b28
CONST	SEGMENT
__real@4e6e6b28 DD 04e6e6b28r			; 1e+009
CONST	ENDS
;	COMDAT __real@4ceb79a3
CONST	SEGMENT
__real@4ceb79a3 DD 04ceb79a3r			; 1.23457e+008
CONST	ENDS
;	COMDAT __real@4415af1d78b58c40
CONST	SEGMENT
__real@4415af1d78b58c40 DQ 04415af1d78b58c40r	; 1e+020
CONST	ENDS
;	COMDAT __real@41cdd50620000000
CONST	SEGMENT
__real@41cdd50620000000 DQ 041cdd50620000000r	; 1.001e+009
CONST	ENDS
;	COMDAT __real@41cdcd6500000000
CONST	SEGMENT
__real@41cdcd6500000000 DQ 041cdcd6500000000r	; 1e+009
CONST	ENDS
;	COMDAT __real@419d6f34547e6b75
CONST	SEGMENT
__real@419d6f34547e6b75 DQ 0419d6f34547e6b75r	; 1.23457e+008
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@3ff8000000000000
CONST	SEGMENT
__real@3ff8000000000000 DQ 03ff8000000000000r	; 1.5
CONST	ENDS
;	COMDAT __real@3ff3333333333333
CONST	SEGMENT
__real@3ff3333333333333 DQ 03ff3333333333333r	; 1.2
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3fbf9add3739635f
CONST	SEGMENT
__real@3fbf9add3739635f DQ 03fbf9add3739635fr	; 0.123457
CONST	ENDS
;	COMDAT __real@3f99999a
CONST	SEGMENT
__real@3f99999a DD 03f99999ar			; 1.2
CONST	ENDS
;	COMDAT __real@3dfcd6ea
CONST	SEGMENT
__real@3dfcd6ea DD 03dfcd6ear			; 0.123457
CONST	ENDS
;	COMDAT __real@3ddb7cdfd9d7bdbb
CONST	SEGMENT
__real@3ddb7cdfd9d7bdbb DQ 03ddb7cdfd9d7bdbbr	; 1e-010
CONST	ENDS
;	COMDAT __real@2edbe6ff
CONST	SEGMENT
__real@2edbe6ff DD 02edbe6ffr			; 1e-010
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R4XMLVisitor@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLVisitor@tinyxml2@@6B@ DD 00H			; tinyxml2::XMLVisitor::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLVisitor@tinyxml2@@@8
	DD	FLAT:??_R3XMLVisitor@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLVisitor@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLVisitor@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLVisitor@tinyxml2@@8 ; tinyxml2::XMLVisitor::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3XMLVisitor@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLVisitor@tinyxml2@@8 DD 00H			; tinyxml2::XMLVisitor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2XMLVisitor@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLVisitor@tinyxml2@@@8
_DATA	SEGMENT
??_R0?AVXMLVisitor@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::XMLVisitor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLVisitor@tinyxml2@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLVisitor@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLVisitor@tinyxml2@@8 DD FLAT:??_R0?AVXMLVisitor@tinyxml2@@@8 ; tinyxml2::XMLVisitor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLVisitor@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLPrinter@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLPrinter@tinyxml2@@8 DD FLAT:??_R0?AVXMLPrinter@tinyxml2@@@8 ; tinyxml2::XMLPrinter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLPrinter@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLPrinter@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLPrinter@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLPrinter@tinyxml2@@8 ; tinyxml2::XMLPrinter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@XMLVisitor@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3XMLPrinter@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLPrinter@tinyxml2@@8 DD 00H			; tinyxml2::XMLPrinter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2XMLPrinter@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLPrinter@tinyxml2@@@8
_DATA	SEGMENT
??_R0?AVXMLPrinter@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::XMLPrinter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLPrinter@tinyxml2@@', 00H
_DATA	ENDS
;	COMDAT ??_R4XMLPrinter@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLPrinter@tinyxml2@@6B@ DD 00H			; tinyxml2::XMLPrinter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLPrinter@tinyxml2@@@8
	DD	FLAT:??_R3XMLPrinter@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_C@_0O@ECKPCLMN@?5?$CFs?5?$FL?$CFd?$FN?$FL?$CFd?$FN?6?$AA@
CONST	SEGMENT
??_C@_0O@ECKPCLMN@?5?$CFs?5?$FL?$CFd?$FN?$FL?$CFd?$FN?6?$AA@ DB ' %s [%d]'
	DB	'[%d]', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GBHHAEKH@?6Pass?5?$CFd?0?5Fail?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BD@GBHHAEKH@?6Pass?5?$CFd?0?5Fail?5?$CFd?6?$AA@ DB 0aH, 'Pass %d, '
	DB	'Fail %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@POACOABE@?6Parsing?5?$CFs?5of?5dream?4xml?3?5?$CF?43f?5m@
CONST	SEGMENT
??_C@_0CO@POACOABE@?6Parsing?5?$CFs?5of?5dream?4xml?3?5?$CF?43f?5m@ DB 0aH
	DB	'Parsing %s of dream.xml: %.3f milli-seconds', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@OLALBDAH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCUT@
CONST	SEGMENT
??_C@_0CN@OLALBDAH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCUT@ DB '<'
	DB	'?xml version="1.0" encoding="UTF-8"?><test>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KEHKDANO@attrD?9f32?$AA@
CONST	SEGMENT
??_C@_09KEHKDANO@attrD?9f32?$AA@ DB 'attrD-f32', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LJHPAAGG@attrC?9f32?$AA@
CONST	SEGMENT
??_C@_09LJHPAAGG@attrC?9f32?$AA@ DB 'attrC-f32', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HCCDNDMD@attrB?9f32?$AA@
CONST	SEGMENT
??_C@_09HCCDNDMD@attrB?9f32?$AA@ DB 'attrB-f32', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PELHKBGN@attrA?9f32?$AA@
CONST	SEGMENT
??_C@_09PELHKBGN@attrA?9f32?$AA@ DB 'attrA-f32', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PEOLFFLD@attrD?9f64?$AA@
CONST	SEGMENT
??_C@_09PEOLFFLD@attrD?9f64?$AA@ DB 'attrD-f64', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09OJOOGFAL@attrC?9f64?$AA@
CONST	SEGMENT
??_C@_09OJOOGFAL@attrC?9f64?$AA@ DB 'attrC-f64', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CCLCLGKO@attrB?9f64?$AA@
CONST	SEGMENT
??_C@_09CCLCLGKO@attrB?9f64?$AA@ DB 'attrB-f64', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KECGMEAA@attrA?9f64?$AA@
CONST	SEGMENT
??_C@_09KECGMEAA@attrA?9f64?$AA@ DB 'attrA-f64', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@HAIDNGPC@?$DMsvg?5width?5?$DN?5?$CC128?$CC?5height?5?$DN?5?$CC128@
CONST	SEGMENT
??_C@_0DI@HAIDNGPC@?$DMsvg?5width?5?$DN?5?$CC128?$CC?5height?5?$DN?5?$CC128@ DB '<'
	DB	'svg width = "128" height = "128">', 09H, '<text> </text></svg'
	DB	'>', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@BJIGDGKB@Move?5node?5from?5within?5?$DMone?$DO?5afte@
CONST	SEGMENT
??_C@_0CI@BJIGDGKB@Move?5node?5from?5within?5?$DMone?$DO?5afte@ DB 'Move '
	DB	'node from within <one> after <one>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CODAANPB@Move?5node?5from?5within?5?$DMone?$DO?5afte@
CONST	SEGMENT
??_C@_0CI@CODAANPB@Move?5node?5from?5within?5?$DMone?$DO?5afte@ DB 'Move '
	DB	'node from within <one> after <two>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@EMCHKENB@Move?5node?5from?5within?5?$DMone?$DO?5to?5?$DM@
CONST	SEGMENT
??_C@_0CF@EMCHKENB@Move?5node?5from?5within?5?$DMone?$DO?5to?5?$DM@ DB 'M'
	DB	'ove node from within <one> to <two>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03IJDNBOJF@two?$AA@
CONST	SEGMENT
??_C@_03IJDNBOJF@two?$AA@ DB 'two', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07NIJMFPAJ@subtree?$AA@
CONST	SEGMENT
??_C@_07NIJMFPAJ@subtree?$AA@ DB 'subtree', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHDNLOHO@one?$AA@
CONST	SEGMENT
??_C@_03OHDNLOHO@one?$AA@ DB 'one', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@FCBOADCO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@
CONST	SEGMENT
??_C@_0GN@FCBOADCO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@ DB '<'
	DB	'?xml version="1.0" ?><root><one/><two/><subtree><elem>element'
	DB	' 1</elem>text<!-- comment --></subtree></root>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@KIBDBHHO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@
CONST	SEGMENT
??_C@_0GN@KIBDBHHO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@ DB '<'
	DB	'?xml version="1.0" ?><root><one/><subtree><elem>element 1</el'
	DB	'em>text<!-- comment --></subtree><two/></root>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@IOIHEOFF@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@
CONST	SEGMENT
??_C@_0HC@IOIHEOFF@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@ DB '<'
	DB	'?xml version="1.0" ?><root><one/><two><subtree><elem>element '
	DB	'1</elem>text<!-- comment --></subtree></two></root>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@CBOIMHMF@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@
CONST	SEGMENT
??_C@_0HC@CBOIMHMF@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@ DB '<'
	DB	'?xml version="1.0" ?><root><one><subtree><elem>element 1</ele'
	DB	'm>text<!-- comment --></subtree></one><two/></root>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PFBIFHKF@BOM?5preservation?5?$CIload?$CJ?$AA@
CONST	SEGMENT
??_C@_0BI@PFBIFHKF@BOM?5preservation?5?$CIload?$CJ?$AA@ DB 'BOM preservat'
	DB	'ion (load)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MIOOCLIO@resources?1bomtest?4xml?$AA@
CONST	SEGMENT
??_C@_0BG@MIOOCLIO@resources?1bomtest?4xml?$AA@ DB 'resources/bomtest.xml'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BKJEMECM@BOM?5preservation?5?$CIcompare?$CJ?$AA@
CONST	SEGMENT
??_C@_0BL@BKJEMECM@BOM?5preservation?5?$CIcompare?$CJ?$AA@ DB 'BOM preser'
	DB	'vation (compare)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OLHFLBMB@BOM?5preservation?5?$CIparse?$CJ?$AA@
CONST	SEGMENT
??_C@_0BJ@OLHFLBMB@BOM?5preservation?5?$CIparse?$CJ?$AA@ DB 'BOM preserva'
	DB	'tion (parse)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@PCABNGG@Loading?5an?5empty?5file?5and?5ErrorN@
CONST	SEGMENT
??_C@_0CO@PCABNGG@Loading?5an?5empty?5file?5and?5ErrorN@ DB 'Loading an e'
	DB	'mpty file and ErrorName as string', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CHGEEKHN@XML_ERROR_EMPTY_DOCUMENT?$AA@
CONST	SEGMENT
??_C@_0BJ@CHGEEKHN@XML_ERROR_EMPTY_DOCUMENT?$AA@ DB 'XML_ERROR_EMPTY_DOCU'
	DB	'MENT', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KJCHNKFD@Loading?5an?5empty?5file?$AA@
CONST	SEGMENT
??_C@_0BG@KJCHNKFD@Loading?5an?5empty?5file?$AA@ DB 'Loading an empty fil'
	DB	'e', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MDBJGIIB@resources?1empty?4xml?$AA@
CONST	SEGMENT
??_C@_0BE@MDBJGIIB@resources?1empty?4xml?$AA@ DB 'resources/empty.xml', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HPOOLHMM@Printing?5of?5sub?9element?$AA@
CONST	SEGMENT
??_C@_0BI@HPOOLHMM@Printing?5of?5sub?9element?$AA@ DB 'Printing of sub-el'
	DB	'ement', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MBLOGLKH@?$DMchild?$DOabc?$DM?1child?$DO?6?$AA@
CONST	SEGMENT
??_C@_0BE@MBLOGLKH@?$DMchild?$DOabc?$DM?1child?$DO?6?$AA@ DB '<child>abc<'
	DB	'/child>', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05GPGNDLEK@child?$AA@
CONST	SEGMENT
??_C@_05GPGNDLEK@child?$AA@ DB 'child', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLKDMCBD@parent?$AA@
CONST	SEGMENT
??_C@_06MLKDMCBD@parent?$AA@ DB 'parent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@KBPIICGI@?$DMparent?$DO?$DMchild?$DOabc?$DM?1child?$DO?$DM?1pare@
CONST	SEGMENT
??_C@_0CE@KBPIICGI@?$DMparent?$DO?$DMchild?$DOabc?$DM?1child?$DO?$DM?1pare@ DB '<'
	DB	'parent><child>abc</child></parent>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PHGGEOAM@Tracking?5unused?5elements?$AA@
CONST	SEGMENT
??_C@_0BJ@PHGGEOAM@Tracking?5unused?5elements?$AA@ DB 'Tracking unused el'
	DB	'ements', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06OJAIHGIC@unused?$AA@
CONST	SEGMENT
??_C@_06OJAIHGIC@unused?$AA@ DB 'unused', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FFGMDLLC@Whitespace?5?5all?5space?$AA@
CONST	SEGMENT
??_C@_0BG@FFGMDLLC@Whitespace?5?5all?5space?$AA@ DB 'Whitespace  all spac'
	DB	'e', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FBKIDIGN@?$DMelement?$DO?5?5?5?5?$DM?1element?$DO?$AA@
CONST	SEGMENT
??_C@_0BI@FBKIDIGN@?$DMelement?$DO?5?5?5?5?$DM?1element?$DO?$AA@ DB '<ele'
	DB	'ment>    </element>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CMHNPBKO@Whitespace?5collapse?$AA@
CONST	SEGMENT
??_C@_0BE@CMHNPBKO@Whitespace?5collapse?$AA@ DB 'Whitespace collapse', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FJIIKGDN@This?5is?5?8?5text?5?8?$AA@
CONST	SEGMENT
??_C@_0BB@FJIIKGDN@This?5is?5?8?5text?5?8?$AA@ DB 'This is '' text ''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0IH@HJKJGCIC@?$DMelement?$DO?$DMa?$DO?5This?5?6is?5?$CGapos?$DL?5?5te@
CONST	SEGMENT
??_C@_0IH@HJKJGCIC@?$DMelement?$DO?$DMa?$DO?5This?5?6is?5?$CGapos?$DL?5?5te@ DB '<'
	DB	'element><a> This ', 0aH, 'is &apos;  text  &apos; </a><b>  Th'
	DB	'is is &apos; text &apos;  ', 0aH, '</b><c>This  is  &apos;  ', 0aH
	DB	0aH, ' text &apos;</c></element>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NPIJJJII@Document?5Clear?$CI?$CJ?8s?$AA@
CONST	SEGMENT
??_C@_0BD@NPIJJJII@Document?5Clear?$CI?$CJ?8s?$AA@ DB 'Document Clear()'''
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@CGMGPGOD@Set?5length?5of?5incoming?5data?$AA@
CONST	SEGMENT
??_C@_0BM@CGMGPGOD@Set?5length?5of?5incoming?5data?$AA@ DB 'Set length of'
	DB	' incoming data', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FIBMGFCP@?$DMelement?1?$DOWOA?5THIS?5ISN?8T?5GOING?5T@
CONST	SEGMENT
??_C@_0CI@FIBMGFCP@?$DMelement?1?$DOWOA?5THIS?5ISN?8T?5GOING?5T@ DB '<ele'
	DB	'ment/>WOA THIS ISN''T GOING TO PARSE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@MHFPJKIO@Element?5names?5with?5lead?5digit?5fa@
CONST	SEGMENT
??_C@_0CN@MHFPJKIO@Element?5names?5with?5lead?5digit?5fa@ DB 'Element nam'
	DB	'es with lead digit fail to parse.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ELECGKJA@?$DM3lement?$DO?$DM?13lement?$DO?$AA@
CONST	SEGMENT
??_C@_0BE@ELECGKJA@?$DM3lement?$DO?$DM?13lement?$DO?$AA@ DB '<3lement></3'
	DB	'lement>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EMHFCFPM@Non?9alpha?5attribute?5lead?5charact@
CONST	SEGMENT
??_C@_0CL@EMHFCFPM@Non?9alpha?5attribute?5lead?5charact@ DB 'Non-alpha at'
	DB	'tribute lead character parses.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@ELGOLBEM@?$DMelement?5_attr1?$DN?$CCfoo?$CC?5?3attr2?$DN?$CCba@
CONST	SEGMENT
??_C@_0CO@ELGOLBEM@?$DMelement?5_attr1?$DN?$CCfoo?$CC?5?3attr2?$DN?$CCba@ DB '<'
	DB	'element _attr1="foo" :attr2="bar"></element>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@LOCDHJFB@Non?9alpha?5element?5lead?5letter?5pa@
CONST	SEGMENT
??_C@_0CG@LOCDHJFB@Non?9alpha?5element?5lead?5letter?5pa@ DB 'Non-alpha e'
	DB	'lement lead letter parses.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KHOIEEBA@?$DMelement?$DO?$DM_sub?1?$DO?$DM?3sub?1?$DO?$DMsub?3sub?1@
CONST	SEGMENT
??_C@_0DG@KHOIEEBA@?$DMelement?$DO?$DM_sub?1?$DO?$DM?3sub?1?$DO?$DMsub?3sub?1@ DB '<'
	DB	'element><_sub/><:sub/><sub:sub/><sub-sub/></element>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EMFLMKH@QueryBoolText?$AA@
CONST	SEGMENT
??_C@_0O@EMFLMKH@QueryBoolText?$AA@ DB 'QueryBoolText', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IBOJFNAC@QueryDoubleText?$AA@
CONST	SEGMENT
??_C@_0BA@IBOJFNAC@QueryDoubleText?$AA@ DB 'QueryDoubleText', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GCNAFAFM@QueryFloatText?$AA@
CONST	SEGMENT
??_C@_0P@GCNAFAFM@QueryFloatText?$AA@ DB 'QueryFloatText', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CCNPEEIL@QueryUnsignedText?$AA@
CONST	SEGMENT
??_C@_0BC@CCNPEEIL@QueryUnsignedText?$AA@ DB 'QueryUnsignedText', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LKHDPBLF@QueryIntText?$AA@
CONST	SEGMENT
??_C@_0N@LKHDPBLF@QueryIntText?$AA@ DB 'QueryIntText', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HDPIMK@valid?$AA@
CONST	SEGMENT
??_C@_05HDPIMK@valid?$AA@ DB 'valid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01FJMABOPO@x?$AA@
CONST	SEGMENT
??_C@_01FJMABOPO@x?$AA@ DB 'x', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EANLCPLP@y?$AA@
CONST	SEGMENT
??_C@_01EANLCPLP@y?$AA@ DB 'y', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@LDGKNEHM@?$DMpoint?$DO?5?$DMx?$DO1?42?$DM?1x?$DO?5?$DMy?$DO1?$DM?1y?$DO?5?$DMz?$DO3@
CONST	SEGMENT
??_C@_0ED@LDGKNEHM@?$DMpoint?$DO?5?$DMx?$DO1?42?$DM?1x?$DO?5?$DMy?$DO1?$DM?1y?$DO?5?$DMz?$DO3@ DB '<'
	DB	'point> <x>1.2</x> <y>1</y> <z>38</z> <valid>true</valid> </po'
	DB	'int>', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BCNOFDDB@Ill?5formed?5XML?$AA@
CONST	SEGMENT
??_C@_0P@BCNOFDDB@Ill?5formed?5XML?$AA@ DB 'Ill formed XML', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GPHHENIA@?$DMipxml?5ws?$DN?81?8?$DO?$DMinfo?5bla?$DN?8?5?1?$DO?$DM?1ip@
CONST	SEGMENT
??_C@_0CF@GPHHENIA@?$DMipxml?5ws?$DN?81?8?$DO?$DMinfo?5bla?$DN?8?5?1?$DO?$DM?1ip@ DB '<'
	DB	'ipxml ws=''1''><info bla='' /></ipxml>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DPMAHLC@CStrSize?$AA@
CONST	SEGMENT
??_C@_08DPMAHLC@CStrSize?$AA@ DB 'CStrSize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GCGFEAOC@BOM?5and?5default?5declaration?$AA@
CONST	SEGMENT
??_C@_0BM@GCGFEAOC@BOM?5and?5default?5declaration?$AA@ DB 'BOM and defaul'
	DB	't declaration', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IDJKNPBF@Handle?0?5dne?0?5const?$AA@
CONST	SEGMENT
??_C@_0BD@IDJKNPBF@Handle?0?5dne?0?5const?$AA@ DB 'Handle, dne, const', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HKJKIOMM@Handle?0?5success?0?5const?$AA@
CONST	SEGMENT
??_C@_0BH@HKJKIOMM@Handle?0?5success?0?5const?$AA@ DB 'Handle, success, c'
	DB	'onst', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GDKFDLID@Handle?0?5dne?0?5mutable?$AA@
CONST	SEGMENT
??_C@_0BF@GDKFDLID@Handle?0?5dne?0?5mutable?$AA@ DB 'Handle, dne, mutable'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGFJFPFD@none?$AA@
CONST	SEGMENT
??_C@_04CGFJFPFD@none?$AA@ DB 'none', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CPDDNNLH@Handle?0?5success?0?5mutable?$AA@
CONST	SEGMENT
??_C@_0BJ@CPDDNNLH@Handle?0?5success?0?5mutable?$AA@ DB 'Handle, success,'
	DB	' mutable', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IBJIGOGD@Infinite?5loop?5in?5shallow?5equal?4?$AA@
CONST	SEGMENT
??_C@_0CA@IBJIGOGD@Infinite?5loop?5in?5shallow?5equal?4?$AA@ DB 'Infinite'
	DB	' loop in shallow equal.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MCKGOBEF@Attribute?5with?5space?5?$CD3?$AA@
CONST	SEGMENT
??_C@_0BI@MCKGOBEF@Attribute?5with?5space?5?$CD3?$AA@ DB 'Attribute with '
	DB	'space #3', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NLLNNAAE@Attribute?5with?5space?5?$CD2?$AA@
CONST	SEGMENT
??_C@_0BI@NLLNNAAE@Attribute?5with?5space?5?$CD2?$AA@ DB 'Attribute with '
	DB	'space #2', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PAJAIDMH@Attribute?5with?5space?5?$CD1?$AA@
CONST	SEGMENT
??_C@_0BI@PAJAIDMH@Attribute?5with?5space?5?$CD1?$AA@ DB 'Attribute with '
	DB	'space #1', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NGBJGMEL@Test?5Attribute?$AA@
CONST	SEGMENT
??_C@_0P@NGBJGMEL@Test?5Attribute?$AA@ DB 'Test Attribute', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LPIGNHFH@attribute1?$AA@
CONST	SEGMENT
??_C@_0L@LPIGNHFH@attribute1?$AA@ DB 'attribute1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IANOCNPB@Attribute?5order?5?$CIempty?$CJ?$AA@
CONST	SEGMENT
??_C@_0BI@IANOCNPB@Attribute?5order?5?$CIempty?$CJ?$AA@ DB 'Attribute ord'
	DB	'er (empty)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07EGDKCIIG@attrib1?$AA@
CONST	SEGMENT
??_C@_07EGDKCIIG@attrib1?$AA@ DB 'attrib1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GNBHHLEF@attrib2?$AA@
CONST	SEGMENT
??_C@_07GNBHHLEF@attrib2?$AA@ DB 'attrib2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HEAMEKAE@attrib3?$AA@
CONST	SEGMENT
??_C@_07HEAMEKAE@attrib3?$AA@ DB 'attrib3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EKENIIDA@3?$AA@
CONST	SEGMENT
??_C@_01EKENIIDA@3?$AA@ DB '3', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01FDFGLJHB@2?$AA@
CONST	SEGMENT
??_C@_01FDFGLJHB@2?$AA@ DB '2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PMCCNHHC@Attribute?5order?$AA@
CONST	SEGMENT
??_C@_0BA@PMCCNHHC@Attribute?5order?$AA@ DB 'Attribute order', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FMIAMMDP@Error?5in?5snprinf?5handling?4?$AA@
CONST	SEGMENT
??_C@_0BL@FMIAMMDP@Error?5in?5snprinf?5handling?4?$AA@ DB 'Error in snpri'
	DB	'nf handling.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@GFHCIFGH@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@
CONST	SEGMENT
??_C@_0DA@GFHCIFGH@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@ DB 'aaaaaaaaaaaaaaaa'
	DB	'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HNALEGEM@Clone?5and?5Equal?$AA@
CONST	SEGMENT
??_C@_0BA@HNALEGEM@Clone?5and?5Equal?$AA@ DB 'Clone and Equal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@ONBFBPNK@?$DM?$DPxml?5version?$DN?81?40?8?$DP?$DO?5?$DMelement?$DO?$DM@
CONST	SEGMENT
??_C@_0EK@ONBFBPNK@?$DM?$DPxml?5version?$DN?81?40?8?$DP?$DO?5?$DMelement?$DO?$DM@ DB '<'
	DB	'?xml version=''1.0''?> <element><sub/></element> <!--comment-'
	DB	'-> <!DOCTYPE>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JGNLGJDE@Infinite?5loop?5test?4?$AA@
CONST	SEGMENT
??_C@_0BE@JGNLGJDE@Infinite?5loop?5test?4?$AA@ DB 'Infinite loop test.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DICPCCME@?$DMinfinite?$DOloop?$AA@
CONST	SEGMENT
??_C@_0P@DICPCCME@?$DMinfinite?$DOloop?$AA@ DB '<infinite>loop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HKANBGJD@Handle?5end?5tag?5whitespace?$AA@
CONST	SEGMENT
??_C@_0BK@HKANBGJD@Handle?5end?5tag?5whitespace?$AA@ DB 'Handle end tag w'
	DB	'hitespace', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GGDECDLF@?$DMattributelist?$DO?5?$DM?1attributelist?5@
CONST	SEGMENT
??_C@_0CC@GGDECDLF@?$DMattributelist?$DO?5?$DM?1attributelist?5@ DB '<att'
	DB	'ributelist> </attributelist >', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@CJMHAPLB@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCut@
CONST	SEGMENT
??_C@_0EM@CJMHAPLB@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCut@ DB '<'
	DB	'?xml version="1.0" encoding="utf-8"?><feed><![CDATA[Test XMLb'
	DB	'lablablalblbl', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JIIHAJNF@Comments?5iterate?5correctly?4?$AA@
CONST	SEGMENT
??_C@_0BM@JIIHAJNF@Comments?5iterate?5correctly?4?$AA@ DB 'Comments itera'
	DB	'te correctly.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@CMIIHJDO@?$DMParent?$DO?$DMchild1?5att?$DN?8?8?1?$DO?$DM?$CB?9?9?5Wit@
CONST	SEGMENT
??_C@_0GI@CMIIHJDO@?$DMParent?$DO?$DMchild1?5att?$DN?8?8?1?$DO?$DM?$CB?9?9?5Wit@ DB '<'
	DB	'Parent><child1 att=''''/><!-- With this comment, child2 will '
	DB	'not be parsed! --><child2 att=''''/></Parent>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FBELHALE@?5far?5?$CGamp?$DL?5away?5?$AA@
CONST	SEGMENT
??_C@_0BB@FBELHALE@?5far?5?$CGamp?$DL?5away?5?$AA@ DB ' far &amp; away ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MALMLOLG@Comments?5ignore?5entities?4?$AA@
CONST	SEGMENT
??_C@_0BK@MALMLOLG@Comments?5ignore?5entities?4?$AA@ DB 'Comments ignore '
	DB	'entities.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CODJEHCK@?5declarations?5for?5?$DMhead?$DO?5?$CG?5?$DMbody@
CONST	SEGMENT
??_C@_0CD@CODJEHCK@?5declarations?5for?5?$DMhead?$DO?5?$CG?5?$DMbody@ DB ' '
	DB	'declarations for <head> & <body> ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@ODKPIILK@?$DM?$CB?9?9?5declarations?5for?5?$DMhead?$DO?5?$CG?5?$DM@
CONST	SEGMENT
??_C@_0EB@ODKPIILK@?$DM?$CB?9?9?5declarations?5for?5?$DMhead?$DO?5?$CG?5?$DM@ DB '<'
	DB	'!-- declarations for <head> & <body> --><!-- far &amp; away -'
	DB	'->', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NJJGABAE@Mismatched?5tags?$AA@
CONST	SEGMENT
??_C@_0BA@NJJGABAE@Mismatched?5tags?$AA@ DB 'Mismatched tags', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPCNDMHI@?$DMx?$DO?$DM?1y?$DO?$AA@
CONST	SEGMENT
??_C@_07CPCNDMHI@?$DMx?$DO?$DM?1y?$DO?$AA@ DB '<x></y>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HGJJNIAN@Missing?5end?5tag?5with?5trailing?5wh@
CONST	SEGMENT
??_C@_0CJ@HGJJNIAN@Missing?5end?5tag?5with?5trailing?5wh@ DB 'Missing end'
	DB	' tag with trailing whitespace', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EIPGDJCO@?$DMx?$DO?5?$AA@
CONST	SEGMENT
??_C@_04EIPGDJCO@?$DMx?$DO?5?$AA@ DB '<x> ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BHPABECP@Missing?5end?5tag?5at?5end?5of?5input?$AA@
CONST	SEGMENT
??_C@_0CA@BHPABECP@Missing?5end?5tag?5at?5end?5of?5input?$AA@ DB 'Missing'
	DB	' end tag at end of input', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03HPGBEFGP@?$DMx?$DO?$AA@
CONST	SEGMENT
??_C@_03HPGBEFGP@?$DMx?$DO?$AA@ DB '<x>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MBJEHLNC@Throw?5error?5with?5bad?5end?5quotes?4@
CONST	SEGMENT
??_C@_0CB@MBJEHLNC@Throw?5error?5with?5bad?5end?5quotes?4@ DB 'Throw erro'
	DB	'r with bad end quotes.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JIACOPCA@?$DMfoo?5attribute?$DNbar?$CC?5?1?$DO?$AA@
CONST	SEGMENT
??_C@_0BH@JIACOPCA@?$DMfoo?5attribute?$DNbar?$CC?5?1?$DO?$AA@ DB '<foo at'
	DB	'tribute=bar" />', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HKEHIJIC@Low?5entities?4?$AA@
CONST	SEGMENT
??_C@_0O@HKEHIJIC@Low?5entities?4?$AA@ DB 'Low entities.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LNMJCBEP@?$DMtest?$DO?$CG?$CDx0e?$DL?$DM?1test?$DO?$AA@
CONST	SEGMENT
??_C@_0BE@LNMJCBEP@?$DMtest?$DO?$CG?$CDx0e?$DL?$DM?1test?$DO?$AA@ DB '<te'
	DB	'st>&#x0e;</test>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HAJDLEGD@Empty?5document?5error?$AA@
CONST	SEGMENT
??_C@_0BF@HAJDLEGD@Empty?5document?5error?$AA@ DB 'Empty document error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_04PFOHOKJK@?5?5?5?5?$AA@ DB '    ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JADGBJGB@Embedded?5null?5throws?5error?4?$AA@
CONST	SEGMENT
??_C@_0BM@JADGBJGB@Embedded?5null?5throws?5error?4?$AA@ DB 'Embedded null'
	DB	' throws error.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NFMLDHKO@?$DMelement?5att?$AAr?$DN?8red?8?5attr?$DN?8blue?8@
CONST	SEGMENT
??_C@_0CE@NFMLDHKO@?$DMelement?5att?$AAr?$DN?8red?8?5attr?$DN?8blue?8@ DB '<'
	DB	'element att', 00H, 'r=''red'' attr=''blue'' />', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DGCJJCB@Parsing?5repeated?5attributes?4?$AA@
CONST	SEGMENT
??_C@_0BN@DGCJJCB@Parsing?5repeated?5attributes?4?$AA@ DB 'Parsing repeat'
	DB	'ed attributes.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DKALFOFA@?$DMelement?5attr?$DN?8red?8?5attr?$DN?8blue?8?5@
CONST	SEGMENT
??_C@_0CD@DKALFOFA@?$DMelement?5attr?$DN?8red?8?5attr?$DN?8blue?8?5@ DB '<'
	DB	'element attr=''red'' attr=''blue'' />', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FNPJMOFI@Comment?5formatting?4?$AA@
CONST	SEGMENT
??_C@_0BE@FNPJMOFI@Comment?5formatting?4?$AA@ DB 'Comment formatting.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GGPEMION@?5Somewhat?$DMevil?$DO?5?$AA@
CONST	SEGMENT
??_C@_0BB@GGPEMION@?5Somewhat?$DMevil?$DO?5?$AA@ DB ' Somewhat<evil> ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HBLJONDE@?$DM?$CB?9?9?5Somewhat?$DMevil?$DO?5?9?9?$DO?$AA@
CONST	SEGMENT
??_C@_0BI@HBLJONDE@?$DM?$CB?9?9?5Somewhat?$DMevil?$DO?5?9?9?$DO?$AA@ DB '<'
	DB	'!-- Somewhat<evil> -->', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ECFILBLF@Correct?5value?5of?5unknown?4?$AA@
CONST	SEGMENT
??_C@_0BK@ECFILBLF@Correct?5value?5of?5unknown?4?$AA@ DB 'Correct value o'
	DB	'f unknown.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MLLCGLEH@DOCTYPE?5PLAY?5SYSTEM?5?8play?4dtd?8?$AA@
CONST	SEGMENT
??_C@_0BP@MLLCGLEH@DOCTYPE?5PLAY?5SYSTEM?5?8play?4dtd?8?$AA@ DB 'DOCTYPE '
	DB	'PLAY SYSTEM ''play.dtd''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NHIHPBDM@resources?1out?1test7?4xml?$AA@
CONST	SEGMENT
??_C@_0BI@NHIHPBDM@resources?1out?1test7?4xml?$AA@ DB 'resources/out/test'
	DB	'7.xml', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0HN@OKHKIEOC@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DM?$CBDOCTYPE?5@
CONST	SEGMENT
??_C@_0HN@OKHKIEOC@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DM?$CBDOCTYPE?5@ DB '<'
	DB	'?xml version="1.0" ?><!DOCTYPE PLAY SYSTEM ''play.dtd''><!ELE'
	DB	'MENT title (#PCDATA)><!ELEMENT books (title,authors)><element'
	DB	' />', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NGKLNOLB@Entity?5with?5one?5digit?4?$AA@
CONST	SEGMENT
??_C@_0BH@NGKLNOLB@Entity?5with?5one?5digit?4?$AA@ DB 'Entity with one di'
	DB	'git.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PDDEMPDP@1?41?5Start?5easy?5ignore?5fin?5thickn@
CONST	SEGMENT
??_C@_0CF@PDDEMPDP@1?41?5Start?5easy?5ignore?5fin?5thickn@ DB '1.1 Start '
	DB	'easy ignore fin thickness', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@CPIHGBID@?$DMelement?$DO?$DMName?$DO1?41?5Start?5easy?5ig@
CONST	SEGMENT
??_C@_0EJ@CPIHGBID@?$DMelement?$DO?$DMName?$DO1?41?5Start?5easy?5ig@ DB '<'
	DB	'element><Name>1.1 Start easy ignore fin thickness&#xA;</Name>'
	DB	'</element>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OPBPNMBD@xmi?4version?$AA@
CONST	SEGMENT
??_C@_0M@OPBPNMBD@xmi?4version?$AA@ DB 'xmi.version', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GJAMENNA@2?40?$AA@
CONST	SEGMENT
??_C@_03GJAMENNA@2?40?$AA@ DB '2.0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MMJJKPDB@a?4elem?$AA@
CONST	SEGMENT
??_C@_06MMJJKPDB@a?4elem?$AA@ DB 'a.elem', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IKFDFIHA@dot?5in?5names?$AA@
CONST	SEGMENT
??_C@_0N@IKFDFIHA@dot?5in?5names?$AA@ DB 'dot in names', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@OHKCIJPO@?$DM?$DPxml?5version?$DN?81?40?8?$DP?$DO?$DMa?4elem?5xmi@
CONST	SEGMENT
??_C@_0DB@OHKCIJPO@?$DM?$DPxml?5version?$DN?81?40?8?$DP?$DO?$DMa?4elem?5xmi@ DB '<'
	DB	'?xml version=''1.0''?><a.elem xmi.version=''2.0''/>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DFJHOJG@Crazy?5?$CGttk?$DL?$AA@
CONST	SEGMENT
??_C@_0M@DFJHOJG@Crazy?5?$CGttk?$DL?$AA@ DB 'Crazy &ttk;', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KLPMDKDG@No?5entity?5parsing?4?$AA@
CONST	SEGMENT
??_C@_0BD@KLPMDKDG@No?5entity?5parsing?4?$AA@ DB 'No entity parsing.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@ELOFOBAI@Line?55?5has?5?$CGquot?$DLquotation?5marks@
CONST	SEGMENT
??_C@_0EJ@ELOFOBAI@Line?55?5has?5?$CGquot?$DLquotation?5marks@ DB 'Line 5'
	DB	' has &quot;quotation marks&quot; and &apos;apostrophe marks&a'
	DB	'pos;.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0MK@GGAOCKLE@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@
CONST	SEGMENT
??_C@_0MK@GGAOCKLE@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@ DB '<'
	DB	'?xml version="1.0" standalone="no" ?><passages count="006" fo'
	DB	'rmatversion="20020620"><psg context="Line 5 has &quot;quotati'
	DB	'on marks&quot; and &apos;apostrophe marks&apos;.">Crazy &ttk;'
	DB	'</psg></passages>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LGFBHJGA@Entity?5transformation?3?5write?4?5?$AA@
CONST	SEGMENT
??_C@_0BP@LGFBHJGA@Entity?5transformation?3?5write?4?5?$AA@ DB 'Entity tr'
	DB	'ansformation: write. ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0JO@DGGKOKBD@?$DMpsg?5context?$DN?$CCLine?55?5has?5?$CGquot?$DLq@
CONST	SEGMENT
??_C@_0JO@DGGKOKBD@?$DMpsg?5context?$DN?$CCLine?55?5has?5?$CGquot?$DLq@ DB '<'
	DB	'psg context="Line 5 has &quot;quotation marks&quot; and &apos'
	DB	';apostrophe marks&apos;. It also has &lt;, &gt;, and &amp;, a'
	DB	's well as a fake copyright ', 0c2H, 0a9H, '."/>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JOEHEAJB@resources?1out?1textfile?4txt?$AA@
CONST	SEGMENT
??_C@_0BL@JOEHEAJB@resources?1out?1textfile?4txt?$AA@ DB 'resources/out/t'
	DB	'extfile.txt', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MCPEDDIC@Entity?5transformation?3?5read?4?5?$AA@
CONST	SEGMENT
??_C@_0BO@MCPEDDIC@Entity?5transformation?3?5read?4?5?$AA@ DB 'Entity tra'
	DB	'nsformation: read. ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GO@IJIKLCCP@Line?55?5has?5?$CCquotation?5marks?$CC?5and@
CONST	SEGMENT
??_C@_0GO@IJIKLCCP@Line?55?5has?5?$CCquotation?5marks?$CC?5and@ DB 'Line '
	DB	'5 has "quotation marks" and ''apostrophe marks''. It also has'
	DB	' <, >, and &, as well as a fake copyright ', 0c2H, 0a9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JKKCBBMM@context?$AA@
CONST	SEGMENT
??_C@_07JKKCBBMM@context?$AA@ DB 'context', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BAH@KKKMGCGH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@
CONST	SEGMENT
??_C@_0BAH@KKKMGCGH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@ DB '<'
	DB	'?xml version="1.0" standalone="no" ?><passages count="006" fo'
	DB	'rmatversion="20020620"><psg context="Line 5 has &quot;quotati'
	DB	'on marks&quot; and &apos;apostrophe marks&apos;. It also has '
	DB	'&lt;, &gt;, and &amp;, as well as a fake copyright &#xA9;."> '
	DB	'</psg></passages>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MLGHGPCL@Test?5InsertAfterChild?5on?5empty?5n@
CONST	SEGMENT
??_C@_0CG@MLGHGPCL@Test?5InsertAfterChild?5on?5empty?5n@ DB 'Test InsertA'
	DB	'fterChild on empty node. ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GKOAONMC@childText1?$AA@
CONST	SEGMENT
??_C@_0L@GKOAONMC@childText1?$AA@ DB 'childText1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HDPLNMID@childText0?$AA@
CONST	SEGMENT
??_C@_0L@HDPLNMID@childText0?$AA@ DB 'childText0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06EBOPLIP@Parent?$AA@
CONST	SEGMENT
??_C@_06EBOPLIP@Parent?$AA@ DB 'Parent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GMICGAMB@CDATA?5parse?4?5?$FL?5tixml1?31480107?5?$FN?$AA@
CONST	SEGMENT
??_C@_0CA@GMICGAMB@CDATA?5parse?4?5?$FL?5tixml1?31480107?5?$FN?$AA@ DB 'C'
	DB	'DATA parse. [ tixml1:1480107 ]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@HHLGMDOJ@?$DMb?$DOI?5am?5?$DO?5the?5rules?$CB?$DM?1b?$DO?6?4?4?4sinc@
CONST	SEGMENT
??_C@_0DH@HHLGMDOJ@?$DMb?$DOI?5am?5?$DO?5the?5rules?$CB?$DM?1b?$DO?6?4?4?4sinc@ DB '<'
	DB	'b>I am > the rules!</b>', 0aH, '...since I make symbolic puns'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0FM@NJMMKIOK@?$DMxmlElement?$DO?$DM?$CB?$FLCDATA?$FL?$DMb?$DOI?5am?5?$DO?5t@
CONST	SEGMENT
??_C@_0FM@NJMMKIOK@?$DMxmlElement?$DO?$DM?$CB?$FLCDATA?$FL?$DMb?$DOI?5am?5?$DO?5t@ DB '<'
	DB	'xmlElement><![CDATA[<b>I am > the rules!</b>', 0aH, '...since'
	DB	' I make symbolic puns]]></xmlElement>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MEEMONHG@CDATA?5parse?4?$AA@
CONST	SEGMENT
??_C@_0N@MEEMONHG@CDATA?5parse?4?$AA@ DB 'CDATA parse.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@BKAEPNI@I?5am?5?$DO?5the?5rules?$CB?6?4?4?4since?5I?5mak@
CONST	SEGMENT
??_C@_0DA@BKAEPNI@I?5am?5?$DO?5the?5rules?$CB?6?4?4?4since?5I?5mak@ DB 'I'
	DB	' am > the rules!', 0aH, '...since I make symbolic puns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@LNIBCIJH@?$DMxmlElement?$DO?$DM?$CB?$FLCDATA?$FLI?5am?5?$DO?5the?5@
CONST	SEGMENT
??_C@_0FF@LNIBCIJH@?$DMxmlElement?$DO?$DM?$CB?$FLCDATA?$FLI?5am?5?$DO?5the?5@ DB '<'
	DB	'xmlElement><![CDATA[I am > the rules!', 0aH, '...since I make'
	DB	' symbolic puns]]></xmlElement>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03GMOBGHL@1?45?$AA@
CONST	SEGMENT
??_C@_03GMOBGHL@1?45?$AA@ DB '1.5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01HIHLOKLC@1?$AA@
CONST	SEGMENT
??_C@_01HIHLOKLC@1?$AA@ DB '1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FHILFDBK@SetText?5types?$AA@
CONST	SEGMENT
??_C@_0O@FHILFDBK@SetText?5types?$AA@ DB 'SetText types', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@IMDKLJDD@SetText?$CI?$CJ?5prefix?5to?5nested?5non?9t@
CONST	SEGMENT
??_C@_0CO@IMDKLJDD@SetText?$CI?$CJ?5prefix?5to?5nested?5non?9t@ DB 'SetTe'
	DB	'xt() prefix to nested non-text children.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OKGGDFFJ@wolves?$AA@
CONST	SEGMENT
??_C@_06OKGGDFFJ@wolves?$AA@ DB 'wolves', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@IPKKIGIC@?$DMfoo?$DO?$DMbar?$DOText?5in?5nested?5element@
CONST	SEGMENT
??_C@_0CN@IPKKIGIC@?$DMfoo?$DO?$DMbar?$DOText?5in?5nested?5element@ DB '<'
	DB	'foo><bar>Text in nested element</bar></foo>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@CJOLAFFM@SetText?$CI?$CJ?5replace?5with?5tag?9like?5@
CONST	SEGMENT
??_C@_0CG@CJOLAFFM@SetText?$CI?$CJ?5replace?5with?5tag?9like?5@ DB 'SetTe'
	DB	'xt() replace with tag-like text.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MIIPHOPP@?$DMb?$DOhorses?$DM?1b?$DO?$AA@
CONST	SEGMENT
??_C@_0O@MIIPHOPP@?$DMb?$DOhorses?$DM?1b?$DO?$AA@ DB '<b>horses</b>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@LAEHCCKM@SetText?$CI?$CJ?5normal?5use?4?5?$CIself?9clos@
CONST	SEGMENT
??_C@_0CF@LAEHCCKM@SetText?$CI?$CJ?5normal?5use?4?5?$CIself?9clos@ DB 'Se'
	DB	'tText() normal use. (self-closing)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MBNNDOHD@The?5driver?$AA@
CONST	SEGMENT
??_C@_0L@MBNNDOHD@The?5driver?$AA@ DB 'The driver', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NJAOBOIJ@?$DMfoo?1?$DO?$AA@
CONST	SEGMENT
??_C@_06NJAOBOIJ@?$DMfoo?1?$DO?$AA@ DB '<foo/>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LDKHKAAP@SetText?$CI?$CJ?5replace?4?$AA@
CONST	SEGMENT
??_C@_0BD@LDKHKAAP@SetText?$CI?$CJ?5replace?4?$AA@ DB 'SetText() replace.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FKDKOAKD@blue?5flame?4?$AA@
CONST	SEGMENT
??_C@_0M@FKDKOAKD@blue?5flame?4?$AA@ DB 'blue flame.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LIEFECGF@SetText?$CI?$CJ?5normal?5use?5?$CIopen?1close@
CONST	SEGMENT
??_C@_0CD@LIEFECGF@SetText?$CI?$CJ?5normal?5use?5?$CIopen?1close@ DB 'Set'
	DB	'Text() normal use (open/close).', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KPLDGONG@darkness?4?$AA@
CONST	SEGMENT
??_C@_09KPLDGONG@darkness?4?$AA@ DB 'darkness.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PAFJMELE@?$DMfoo?$DO?$DM?1foo?$DO?$AA@
CONST	SEGMENT
??_C@_0M@PAFJMELE@?$DMfoo?$DO?$DM?1foo?$DO?$AA@ DB '<foo></foo>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JFKHBMCC@GetText?$CI?$CJ?5contained?5element?4?$AA@
CONST	SEGMENT
??_C@_0BN@JFKHBMCC@GetText?$CI?$CJ?5contained?5element?4?$AA@ DB 'GetText'
	DB	'() contained element.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NPPGHFHL@?$DMfoo?$DO?$DMb?$DOThis?5is?5text?$DM?1b?$DO?$DM?1foo?$DO?$AA@
CONST	SEGMENT
??_C@_0BP@NPPGHFHL@?$DMfoo?$DO?$DMb?$DOThis?5is?5text?$DM?1b?$DO?$DM?1foo?$DO?$AA@ DB '<'
	DB	'foo><b>This is text</b></foo>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DKADDCJD@GetText?$CI?$CJ?5normal?5use?4?$AA@
CONST	SEGMENT
??_C@_0BG@DKADDCJD@GetText?$CI?$CJ?5normal?5use?4?$AA@ DB 'GetText() norm'
	DB	'al use.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NCGAPDDE@This?5is?5?5text?$AA@
CONST	SEGMENT
??_C@_0O@NCGAPDDE@This?5is?5?5text?$AA@ DB 'This is  text', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JKDBNMPF@?$DMfoo?$DOThis?5is?5?5text?$DM?1foo?$DO?$AA@
CONST	SEGMENT
??_C@_0BJ@JKDBNMPF@?$DMfoo?$DOThis?5is?5?5text?$DM?1foo?$DO?$AA@ DB '<foo'
	DB	'>This is  text</foo>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@FPCEDNNA@UTF?98?3?5Verified?5multi?9language?5r@
CONST	SEGMENT
??_C@_0CL@FPCEDNNA@UTF?98?3?5Verified?5multi?9language?5r@ DB 'UTF-8: Ver'
	DB	'ified multi-language round trip.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DCMPPKDG@saved?5?3?$CFs?$DM?6?$AA@
CONST	SEGMENT
??_C@_0M@DCMPPKDG@saved?5?3?$CFs?$DM?6?$AA@ DB 'saved :%s<', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BACAGND@verify?3?$CFs?$DM?6?$AA@
CONST	SEGMENT
??_C@_0M@BACAGND@verify?3?$CFs?$DM?6?$AA@ DB 'verify:%s<', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JICGPLMD@resources?1utf8testverify?4xml?$AA@
CONST	SEGMENT
??_C@_0BN@JICGPLMD@resources?1utf8testverify?4xml?$AA@ DB 'resources/utf8'
	DB	'testverify.xml', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NLDFJKGL@resources?1out?1utf8testout?4xml?$AA@
CONST	SEGMENT
??_C@_0BO@NLDFJKGL@resources?1out?1utf8testout?4xml?$AA@ DB 'resources/ou'
	DB	't/utf8testout.xml', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KNPGPFFM@UTF?98?3?5Browsing?5russian?5element?5@
CONST	SEGMENT
??_C@_0CG@KNPGPFFM@UTF?98?3?5Browsing?5russian?5element?5@ DB 'UTF-8: Bro'
	DB	'wsing russian element name.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KGCIHMHM@?$DM?P?$LI?P?$LM?P?$LF?P?$LF?Q?$IC?$DO?$AA@
CONST	SEGMENT
??_C@_0N@KGCIHMHM@?$DM?P?$LI?P?$LM?P?$LF?P?$LF?Q?$IC?$DO?$AA@ DB '<', 0d0H
	DB	0b8H, 0d0H, 0bcH, 0d0H, 0b5H, 0d0H, 0b5H, 0d1H, 082H, '>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GHEBNCCN@UTF?98?3?5Russian?5value?4?$AA@
CONST	SEGMENT
??_C@_0BG@GHEBNCCN@UTF?98?3?5Russian?5value?4?$AA@ DB 'UTF-8: Russian val'
	DB	'ue.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05MFEJDJP@value?$AA@
CONST	SEGMENT
??_C@_05MFEJDJP@value?$AA@ DB 'value', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PEAPJBGG@Russian?$AA@
CONST	SEGMENT
??_C@_07PEAPJBGG@Russian?$AA@ DB 'Russian', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JEEDKNPB@document?$AA@
CONST	SEGMENT
??_C@_08JEEDKNPB@document?$AA@ DB 'document', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GIFCGBMN@resources?1utf8test?4xml?$AA@
CONST	SEGMENT
??_C@_0BH@GIFCGBMN@resources?1utf8test?4xml?$AA@ DB 'resources/utf8test.x'
	DB	'ml', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@COLFGKDP@Alternate?5query?$AA@
CONST	SEGMENT
??_C@_0BA@COLFGKDP@Alternate?5query?$AA@ DB 'Alternate query', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IHMJGANF@Attribute?5round?5trip?4?5double?4?$AA@
CONST	SEGMENT
??_C@_0BO@IHMJGANF@Attribute?5round?5trip?4?5double?4?$AA@ DB 'Attribute '
	DB	'round trip. double.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CEGNIGNP@Attribute?5round?5trip?4?5int?4?$AA@
CONST	SEGMENT
??_C@_0BL@CEGNIGNP@Attribute?5round?5trip?4?5int?4?$AA@ DB 'Attribute rou'
	DB	'nd trip. int.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@EAIDEFBO@Attribute?5round?5trip?4?5c?9string?4?$AA@
CONST	SEGMENT
??_C@_0CA@EAIDEFBO@Attribute?5round?5trip?4?5c?9string?4?$AA@ DB 'Attribu'
	DB	'te round trip. c-string.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JMEHCLBP@Attribute?5match?5test?$AA@
CONST	SEGMENT
??_C@_0BF@JMEHCLBP@Attribute?5match?5test?$AA@ DB 'Attribute match test', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BNJCAIGJ@double?$AA@
CONST	SEGMENT
??_C@_06BNJCAIGJ@double?$AA@ DB 'double', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBIPMCLC@int?$AA@
CONST	SEGMENT
??_C@_03JBIPMCLC@int?$AA@ DB 'int', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OJMAPEGJ@str?$AA@
CONST	SEGMENT
??_C@_03OJMAPEGJ@str?$AA@ DB 'str', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MGPAICNM@strValue?$AA@
CONST	SEGMENT
??_C@_08MGPAICNM@strValue?$AA@ DB 'strValue', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NOBAAADK@?$DMdoc?1?$DO?$AA@
CONST	SEGMENT
??_C@_06NOBAAADK@?$DMdoc?1?$DO?$AA@ DB '<doc/>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BNGCPADO@Query?5attribute?3?5does?5not?5exist?$AA@
CONST	SEGMENT
??_C@_0CA@BNGCPADO@Query?5attribute?3?5does?5not?5exist?$AA@ DB 'Query at'
	DB	'tribute: does not exist', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BLIIKFAI@bar?$AA@
CONST	SEGMENT
??_C@_03BLIIKFAI@bar?$AA@ DB 'bar', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FGLKNEME@Query?5attribute?3?5not?5a?5number?$AA@
CONST	SEGMENT
??_C@_0BO@FGLKNEME@Query?5attribute?3?5not?5a?5number?$AA@ DB 'Query attr'
	DB	'ibute: not a number', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05NPJPBLCI@attr2?$AA@
CONST	SEGMENT
??_C@_05NPJPBLCI@attr2?$AA@ DB 'attr2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JKMCBOMB@Query?5attribute?3?5double?5as?5int?$AA@
CONST	SEGMENT
??_C@_0BP@JKMCBOMB@Query?5attribute?3?5double?5as?5int?$AA@ DB 'Query att'
	DB	'ribute: double as int', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GOMFGJFF@Query?5attribute?3?5double?5as?5doubl@
CONST	SEGMENT
??_C@_0CC@GOMFGJFF@Query?5attribute?3?5double?5as?5doubl@ DB 'Query attri'
	DB	'bute: double as double', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PELCEIOL@attr1?$AA@
CONST	SEGMENT
??_C@_05PELCEIOL@attr1?$AA@ DB 'attr1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JOIIDGJG@Query?5attribute?3?5int?5as?5double?$AA@
CONST	SEGMENT
??_C@_0BP@JOIIDGJG@Query?5attribute?3?5int?5as?5double?$AA@ DB 'Query att'
	DB	'ribute: int as double', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05ONKJHJKK@attr0?$AA@
CONST	SEGMENT
??_C@_05ONKJHJKK@attr0?$AA@ DB 'attr0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@POKHOPMA@?$DMdoc?5attr0?$DN?81?8?5attr1?$DN?82?40?8?5attr2@
CONST	SEGMENT
??_C@_0CK@POKHOPMA@?$DMdoc?5attr0?$DN?81?8?5attr1?$DN?82?40?8?5attr2@ DB '<'
	DB	'doc attr0=''1'' attr1=''2.0'' attr2=''foo'' />', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KEDHPJMI@Bad?5XML?$AA@
CONST	SEGMENT
??_C@_07KEDHPJMI@Bad?5XML?$AA@ DB 'Bad XML', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0HF@CCALMFNO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@
CONST	SEGMENT
??_C@_0HF@CCALMFNO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@ DB '<'
	DB	'?xml version="1.0" standalone="no" ?>', 0aH, '<passages count'
	DB	'="006" formatversion="20020620">', 0aH, '    <wrong error>', 0aH
	DB	'</passages>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09BHKMDEKD@Dream?9out?$AA@
CONST	SEGMENT
??_C@_09BHKMDEKD@Dream?9out?$AA@ DB 'Dream-out', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JHNCBPHK@And?5Robin?5shall?5restore?5amends?4?$AA@
CONST	SEGMENT
??_C@_0CA@JHNCBPHK@And?5Robin?5shall?5restore?5amends?4?$AA@ DB 'And Robi'
	DB	'n shall restore amends.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MHJCDDEA@DOCTYPE?5PLAY?5SYSTEM?5?$CCplay?4dtd?$CC?$AA@
CONST	SEGMENT
??_C@_0BP@MHJCDDEA@DOCTYPE?5PLAY?5SYSTEM?5?$CCplay?4dtd?$CC?$AA@ DB 'DOCT'
	DB	'YPE PLAY SYSTEM "play.dtd"', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MMFIBGEF@Dream?$AA@
CONST	SEGMENT
??_C@_05MMFIBGEF@Dream?$AA@ DB 'Dream', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CIAMHNHO@xml?5version?$DN?$CC1?40?$CC?$AA@
CONST	SEGMENT
??_C@_0BC@CIAMHNHO@xml?5version?$DN?$CC1?40?$CC?$AA@ DB 'xml version="1.0'
	DB	'"', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FKPDPIFL@resources?1out?1dreamout?4xml?$AA@
CONST	SEGMENT
??_C@_0BL@FKPDPIFL@resources?1out?1dreamout?4xml?$AA@ DB 'resources/out/d'
	DB	'reamout.xml', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HCFLCKCD@?4?1resources?1out?1compact?4xml?$AA@
CONST	SEGMENT
??_C@_0BM@HCFLCKCD@?4?1resources?1out?1compact?4xml?$AA@ DB './resources/'
	DB	'out/compact.xml', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MKAHMKJP@?4?1resources?1out?1pretty?4xml?$AA@
CONST	SEGMENT
??_C@_0BL@MKAHMKJP@?4?1resources?1out?1pretty?4xml?$AA@ DB './resources/o'
	DB	'ut/pretty.xml', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JIEHICMA@Compact?5mode?$AA@
CONST	SEGMENT
??_C@_0N@JIEHICMA@Compact?5mode?$AA@ DB 'Compact mode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@GAOKPBOJ@?$DMelement?$DO?$DMsub?5attrib?$DN?$CC1?$CC?1?$DO?$DMsub?1?$DO@
CONST	SEGMENT
??_C@_0CL@GAOKPBOJ@?$DMelement?$DO?$DMsub?5attrib?$DN?$CC1?$CC?1?$DO?$DMsub?1?$DO@ DB '<'
	DB	'element><sub attrib="1"/><sub/></element>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BFILBPOF@Programmatic?5DOM?$AA@
CONST	SEGMENT
??_C@_0BB@BFILBPOF@Programmatic?5DOM?$AA@ DB 'Programmatic DOM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NNFIJNBL@?$CG?5Text?$CB?$AA@
CONST	SEGMENT
??_C@_07NNFIJNBL@?$CG?5Text?$CB?$AA@ DB '& Text!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GJGNEJFD@comment?$AA@
CONST	SEGMENT
??_C@_07GJGNEJFD@comment?$AA@ DB 'comment', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CEIPPJF@attrib?$AA@
CONST	SEGMENT
??_C@_06CEIPPJF@attrib?$AA@ DB 'attrib', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03KCMAIMAP@sub?$AA@
CONST	SEGMENT
??_C@_03KCMAIMAP@sub?$AA@ DB 'sub', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07HCLJNICE@element?$AA@
CONST	SEGMENT
??_C@_07HCLJNICE@element?$AA@ DB 'element', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PPLFOKHK@Subelement?$AA@
CONST	SEGMENT
??_C@_0L@PPLFOKHK@Subelement?$AA@ DB 'Subelement', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@HHHLHLBD@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
CONST	SEGMENT
??_C@_0DA@HHHLHLBD@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ DB '-'
	DB	'---------------------------------------------', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JBKABFI@Example?94?$AA@
CONST	SEGMENT
??_C@_09JBKABFI@Example?94?$AA@ DB 'Example-4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09EGFLJHJP@Example?93?$AA@
CONST	SEGMENT
??_C@_09EGFLJHJP@Example?93?$AA@ DB 'Example-3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FPEAKGNO@Example?92?$AA@
CONST	SEGMENT
??_C@_09FPEAKGNO@Example?92?$AA@ DB 'Example-2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HEGNPFBN@Example?91?$AA@
CONST	SEGMENT
??_C@_09HEGNPFBN@Example?91?$AA@ DB 'Example-1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0NK@DCFJCLFO@Error?5opening?5test?5file?5?8dream?4x@
CONST	SEGMENT
??_C@_0NK@DCFJCLFO@Error?5opening?5test?5file?5?8dream?4x@ DB 'Error open'
	DB	'ing test file ''dream.xml''.', 0aH, 'Is your working director'
	DB	'y the same as where ', 0aH, 'the xmltest.cpp and dream.xml fi'
	DB	'le are?', 0aH, 0aH, 'In windows Visual Studio you may need to'
	DB	' set', 0aH, 'Properties->Debugging->Working Directory to ''..'
	DB	'''', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JMJCIMED@Total?5time?$DN?$CFu?6?$AA@
CONST	SEGMENT
??_C@_0P@JMJCIMED@Total?5time?$DN?$CFu?6?$AA@ DB 'Total time=%u', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NCOPPKFI@Delete?5time?$DN?$CFu?6?$AA@
CONST	SEGMENT
??_C@_0BA@NCOPPKFI@Delete?5time?$DN?$CFu?6?$AA@ DB 'Delete time=%u', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MGBHNCAN@Load?5time?$DN?$CFu?6?$AA@
CONST	SEGMENT
??_C@_0O@MGBHNCAN@Load?5time?$DN?$CFu?6?$AA@ DB 'Load time=%u', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FNBOFDCL@Test?5file?5?8?$CFs?8?5loaded?4?5ErrorID?$DN?$CF@
CONST	SEGMENT
??_C@_0CD@FNBOFDCL@Test?5file?5?8?$CFs?8?5loaded?4?5ErrorID?$DN?$CF@ DB 'T'
	DB	'est file ''%s'' loaded. ErrorID=%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HOEBBIHO@resources?1out?1?$AA@
CONST	SEGMENT
??_C@_0P@HOEBBIHO@resources?1out?1?$AA@ DB 'resources/out/', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NAELEFGH@Both?5values?5are?5the?5same?3?5?$CFd?5and@
CONST	SEGMENT
??_C@_0CF@NAELEFGH@Both?5values?5are?5the?5same?3?5?$CFd?5and@ DB 'Both v'
	DB	'alues are the same: %d and %d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DBACDMDK@textApproach?$AA@
CONST	SEGMENT
??_C@_0N@DBACDMDK@textApproach?$AA@ DB 'textApproach', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01MHEDDDHA@v?$AA@
CONST	SEGMENT
??_C@_01MHEDDDHA@v?$AA@ DB 'v', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BLMCCKNI@attributeApproach?$AA@
CONST	SEGMENT
??_C@_0BC@BLMCCKNI@attributeApproach?$AA@ DB 'attributeApproach', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JACNOAFK@Name?5of?5play?5?$CI2?$CJ?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BG@JACNOAFK@Name?5of?5play?5?$CI2?$CJ?3?5?$CFs?6?$AA@ DB 'Name of '
	DB	'play (2): %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BOKCOHLJ@Name?5of?5play?5?$CI1?$CJ?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BG@BOKCOHLJ@Name?5of?5play?5?$CI1?$CJ?3?5?$CFs?6?$AA@ DB 'Name of '
	DB	'play (1): %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DMCAHJJE@TITLE?$AA@
CONST	SEGMENT
??_C@_05DMCAHJJE@TITLE?$AA@ DB 'TITLE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MKCNCBEG@PLAY?$AA@
CONST	SEGMENT
??_C@_04MKCNCBEG@PLAY?$AA@ DB 'PLAY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MGFIECLE@resources?1dream?4xml?$AA@
CONST	SEGMENT
??_C@_0BE@MGFIECLE@resources?1dream?4xml?$AA@ DB 'resources/dream.xml', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PJBPHMNJ@?5?$CFs?5?$FL?$CFs?$FN?$FL?$CFs?$FN?6?$AA@
CONST	SEGMENT
??_C@_0O@PJBPHMNJ@?5?$CFs?5?$FL?$CFs?$FN?$FL?$CFs?$FN?6?$AA@ DB ' %s [%s]'
	DB	'[%s]', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MDKIEGGJ@?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_04MDKIEGGJ@?5?$CFs?6?$AA@ DB ' %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DBEIIGKC@?$FLfail?$FN?$AA@
CONST	SEGMENT
??_C@_06DBEIIGKC@?$FLfail?$FN?$AA@ DB '[fail]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06MMBJDEJC@?$FLpass?$FN?$AA@
CONST	SEGMENT
??_C@_06MMBJDEJC@?$FLpass?$FN?$AA@ DB '[pass]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7XMLPrinter@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLPrinter@tinyxml2@@6B@ DD FLAT:??_R4XMLPrinter@tinyxml2@@6B@ ; tinyxml2::XMLPrinter::`vftable'
	DD	FLAT:??_EXMLPrinter@tinyxml2@@UAEPAXI@Z
	DD	FLAT:?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z
	DD	FLAT:?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z
	DD	FLAT:?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@@Z
	DD	FLAT:?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z
	DD	FLAT:?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLUnknown@2@@Z
	DD	FLAT:?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLComment@2@@Z
	DD	FLAT:?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLText@2@@Z
	DD	FLAT:?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z
	DD	FLAT:?CloseElement@XMLPrinter@tinyxml2@@UAEX_N@Z
	DD	FLAT:?CompactMode@XMLPrinter@tinyxml2@@MAE_NABVXMLElement@2@@Z
	DD	FLAT:?PrintSpace@XMLPrinter@tinyxml2@@MAEXH@Z
CONST	ENDS
;	COMDAT ??_7XMLVisitor@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLVisitor@tinyxml2@@6B@ DD FLAT:??_R4XMLVisitor@tinyxml2@@6B@ ; tinyxml2::XMLVisitor::`vftable'
	DD	FLAT:??_EXMLVisitor@tinyxml2@@UAEPAXI@Z
	DD	FLAT:?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z
	DD	FLAT:?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z
	DD	FLAT:?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@@Z
	DD	FLAT:?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z
	DD	FLAT:?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLUnknown@2@@Z
	DD	FLAT:?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLComment@2@@Z
	DD	FLAT:?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLText@2@@Z
	DD	FLAT:?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$_main DD 019930522H
	DD	04cH
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$8
	DD	08H
	DD	FLAT:__unwindfunclet$_main$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$14
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$15
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$16
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$17
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$18
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$19
	DD	013H
	DD	FLAT:__unwindfunclet$_main$20
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$21
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$22
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$23
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$24
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$25
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$26
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$27
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$28
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$29
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$30
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$31
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$32
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$33
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$34
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$35
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$36
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$37
	DD	025H
	DD	FLAT:__unwindfunclet$_main$38
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$39
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$40
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$41
	DD	029H
	DD	FLAT:__unwindfunclet$_main$42
	DD	02aH
	DD	FLAT:__unwindfunclet$_main$43
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$44
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$45
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$46
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$47
	DD	02fH
	DD	FLAT:__unwindfunclet$_main$48
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$49
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$50
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$51
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$52
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$53
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$54
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$55
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$56
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$57
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$58
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$59
	DD	03bH
	DD	FLAT:__unwindfunclet$_main$60
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$61
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$62
	DD	03eH
	DD	FLAT:__unwindfunclet$_main$63
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$64
	DD	040H
	DD	FLAT:__unwindfunclet$_main$65
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$66
	DD	042H
	DD	FLAT:__unwindfunclet$_main$67
	DD	043H
	DD	FLAT:__unwindfunclet$_main$68
	DD	044H
	DD	FLAT:__unwindfunclet$_main$69
	DD	045H
	DD	FLAT:__unwindfunclet$_main$70
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$71
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$72
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$73
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$74
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$75
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?example_4@@YA_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?example_4@@YA_NXZ$0
__ehfuncinfo$?example_4@@YA_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?example_4@@YA_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?example_3@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?example_3@@YAHXZ$0
__ehfuncinfo$?example_3@@YAHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?example_3@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?example_2@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?example_2@@YAHXZ$0
__ehfuncinfo$?example_2@@YAHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?example_2@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?example_1@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?example_1@@YAHXZ$0
__ehfuncinfo$?example_1@@YAHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?example_1@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1XMLPrinter@tinyxml2@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1XMLPrinter@tinyxml2@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1XMLPrinter@tinyxml2@@UAE@XZ$1
__ehfuncinfo$??1XMLPrinter@tinyxml2@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1XMLPrinter@tinyxml2@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ??$XMLTest@N@@YA_NPBDNN_N@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_pass$ = -5						; size = 1
_testString$ = 8					; size = 4
_expected$ = 12						; size = 8
_found$ = 20						; size = 8
_echo$ = 28						; size = 1
??$XMLTest@N@@YA_NPBDNN_N@Z PROC			; XMLTest<double>, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	bool pass = ( expected == found );

	movsd	xmm0, QWORD PTR _expected$[ebp]
	ucomisd	xmm0, QWORD PTR _found$[ebp]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN9@XMLTest
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN10@XMLTest
$LN9@XMLTest:
	mov	DWORD PTR tv65[ebp], 0
$LN10@XMLTest:
	mov	al, BYTE PTR tv65[ebp]
	mov	BYTE PTR _pass$[ebp], al

; 63   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN6@XMLTest

; 64   : 		printf ("[pass]");

	mov	esi, esp
	push	OFFSET ??_C@_06MMBJDEJC@?$FLpass?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 65   : 	else

	jmp	SHORT $LN5@XMLTest
$LN6@XMLTest:

; 66   : 		printf ("[fail]");

	mov	esi, esp
	push	OFFSET ??_C@_06DBEIIGKC@?$FLfail?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@XMLTest:

; 67   : 
; 68   : 	if ( !echo )

	movzx	eax, BYTE PTR _echo$[ebp]
	test	eax, eax
	jne	SHORT $LN4@XMLTest

; 69   : 		printf (" %s\n", testString);

	mov	esi, esp
	mov	eax, DWORD PTR _testString$[ebp]
	push	eax
	push	OFFSET ??_C@_04MDKIEGGJ@?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 70   : 	else

	jmp	SHORT $LN3@XMLTest
$LN4@XMLTest:

; 71   : 		printf (" %s [%d][%d]\n", testString, static_cast<int>(expected), static_cast<int>(found) );

	cvttsd2si eax, QWORD PTR _found$[ebp]
	mov	esi, esp
	push	eax
	cvttsd2si ecx, QWORD PTR _expected$[ebp]
	push	ecx
	mov	edx, DWORD PTR _testString$[ebp]
	push	edx
	push	OFFSET ??_C@_0O@ECKPCLMN@?5?$CFs?5?$FL?$CFd?$FN?$FL?$CFd?$FN?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@XMLTest:

; 72   : 
; 73   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN2@XMLTest

; 74   : 		++gPass;

	mov	eax, DWORD PTR ?gPass@@3HA		; gPass
	add	eax, 1
	mov	DWORD PTR ?gPass@@3HA, eax		; gPass

; 75   : 	else

	jmp	SHORT $LN1@XMLTest
$LN2@XMLTest:

; 76   : 		++gFail;

	mov	eax, DWORD PTR ?gFail@@3HA		; gFail
	add	eax, 1
	mov	DWORD PTR ?gFail@@3HA, eax		; gFail
$LN1@XMLTest:

; 77   : 	return pass;

	mov	al, BYTE PTR _pass$[ebp]

; 78   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$XMLTest@N@@YA_NPBDNN_N@Z ENDP			; XMLTest<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ??$XMLTest@M@@YA_NPBDMM_N@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_pass$ = -5						; size = 1
_testString$ = 8					; size = 4
_expected$ = 12						; size = 4
_found$ = 16						; size = 4
_echo$ = 20						; size = 1
??$XMLTest@M@@YA_NPBDMM_N@Z PROC			; XMLTest<float>, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	bool pass = ( expected == found );

	movss	xmm0, DWORD PTR _expected$[ebp]
	ucomiss	xmm0, DWORD PTR _found$[ebp]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN9@XMLTest
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN10@XMLTest
$LN9@XMLTest:
	mov	DWORD PTR tv65[ebp], 0
$LN10@XMLTest:
	mov	al, BYTE PTR tv65[ebp]
	mov	BYTE PTR _pass$[ebp], al

; 63   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN6@XMLTest

; 64   : 		printf ("[pass]");

	mov	esi, esp
	push	OFFSET ??_C@_06MMBJDEJC@?$FLpass?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 65   : 	else

	jmp	SHORT $LN5@XMLTest
$LN6@XMLTest:

; 66   : 		printf ("[fail]");

	mov	esi, esp
	push	OFFSET ??_C@_06DBEIIGKC@?$FLfail?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@XMLTest:

; 67   : 
; 68   : 	if ( !echo )

	movzx	eax, BYTE PTR _echo$[ebp]
	test	eax, eax
	jne	SHORT $LN4@XMLTest

; 69   : 		printf (" %s\n", testString);

	mov	esi, esp
	mov	eax, DWORD PTR _testString$[ebp]
	push	eax
	push	OFFSET ??_C@_04MDKIEGGJ@?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 70   : 	else

	jmp	SHORT $LN3@XMLTest
$LN4@XMLTest:

; 71   : 		printf (" %s [%d][%d]\n", testString, static_cast<int>(expected), static_cast<int>(found) );

	cvttss2si eax, DWORD PTR _found$[ebp]
	mov	esi, esp
	push	eax
	cvttss2si ecx, DWORD PTR _expected$[ebp]
	push	ecx
	mov	edx, DWORD PTR _testString$[ebp]
	push	edx
	push	OFFSET ??_C@_0O@ECKPCLMN@?5?$CFs?5?$FL?$CFd?$FN?$FL?$CFd?$FN?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@XMLTest:

; 72   : 
; 73   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN2@XMLTest

; 74   : 		++gPass;

	mov	eax, DWORD PTR ?gPass@@3HA		; gPass
	add	eax, 1
	mov	DWORD PTR ?gPass@@3HA, eax		; gPass

; 75   : 	else

	jmp	SHORT $LN1@XMLTest
$LN2@XMLTest:

; 76   : 		++gFail;

	mov	eax, DWORD PTR ?gFail@@3HA		; gFail
	add	eax, 1
	mov	DWORD PTR ?gFail@@3HA, eax		; gFail
$LN1@XMLTest:

; 77   : 	return pass;

	mov	al, BYTE PTR _pass$[ebp]

; 78   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$XMLTest@M@@YA_NPBDMM_N@Z ENDP			; XMLTest<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ??$XMLTest@I@@YA_NPBDII_N@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_pass$ = -5						; size = 1
_testString$ = 8					; size = 4
_expected$ = 12						; size = 4
_found$ = 16						; size = 4
_echo$ = 20						; size = 1
??$XMLTest@I@@YA_NPBDII_N@Z PROC			; XMLTest<unsigned int>, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	bool pass = ( expected == found );

	mov	eax, DWORD PTR _expected$[ebp]
	cmp	eax, DWORD PTR _found$[ebp]
	jne	SHORT $LN9@XMLTest
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN10@XMLTest
$LN9@XMLTest:
	mov	DWORD PTR tv65[ebp], 0
$LN10@XMLTest:
	mov	cl, BYTE PTR tv65[ebp]
	mov	BYTE PTR _pass$[ebp], cl

; 63   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN6@XMLTest

; 64   : 		printf ("[pass]");

	mov	esi, esp
	push	OFFSET ??_C@_06MMBJDEJC@?$FLpass?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 65   : 	else

	jmp	SHORT $LN5@XMLTest
$LN6@XMLTest:

; 66   : 		printf ("[fail]");

	mov	esi, esp
	push	OFFSET ??_C@_06DBEIIGKC@?$FLfail?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@XMLTest:

; 67   : 
; 68   : 	if ( !echo )

	movzx	eax, BYTE PTR _echo$[ebp]
	test	eax, eax
	jne	SHORT $LN4@XMLTest

; 69   : 		printf (" %s\n", testString);

	mov	esi, esp
	mov	eax, DWORD PTR _testString$[ebp]
	push	eax
	push	OFFSET ??_C@_04MDKIEGGJ@?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 70   : 	else

	jmp	SHORT $LN3@XMLTest
$LN4@XMLTest:

; 71   : 		printf (" %s [%d][%d]\n", testString, static_cast<int>(expected), static_cast<int>(found) );

	mov	esi, esp
	mov	eax, DWORD PTR _found$[ebp]
	push	eax
	mov	ecx, DWORD PTR _expected$[ebp]
	push	ecx
	mov	edx, DWORD PTR _testString$[ebp]
	push	edx
	push	OFFSET ??_C@_0O@ECKPCLMN@?5?$CFs?5?$FL?$CFd?$FN?$FL?$CFd?$FN?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@XMLTest:

; 72   : 
; 73   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN2@XMLTest

; 74   : 		++gPass;

	mov	eax, DWORD PTR ?gPass@@3HA		; gPass
	add	eax, 1
	mov	DWORD PTR ?gPass@@3HA, eax		; gPass

; 75   : 	else

	jmp	SHORT $LN1@XMLTest
$LN2@XMLTest:

; 76   : 		++gFail;

	mov	eax, DWORD PTR ?gFail@@3HA		; gFail
	add	eax, 1
	mov	DWORD PTR ?gFail@@3HA, eax		; gFail
$LN1@XMLTest:

; 77   : 	return pass;

	mov	al, BYTE PTR _pass$[ebp]

; 78   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$XMLTest@I@@YA_NPBDII_N@Z ENDP			; XMLTest<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ??$XMLTest@W4XMLError@tinyxml2@@@@YA_NPBDW4XMLError@tinyxml2@@1_N@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_pass$ = -5						; size = 1
_testString$ = 8					; size = 4
_expected$ = 12						; size = 4
_found$ = 16						; size = 4
_echo$ = 20						; size = 1
??$XMLTest@W4XMLError@tinyxml2@@@@YA_NPBDW4XMLError@tinyxml2@@1_N@Z PROC ; XMLTest<enum tinyxml2::XMLError>, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	bool pass = ( expected == found );

	mov	eax, DWORD PTR _expected$[ebp]
	cmp	eax, DWORD PTR _found$[ebp]
	jne	SHORT $LN9@XMLTest
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN10@XMLTest
$LN9@XMLTest:
	mov	DWORD PTR tv65[ebp], 0
$LN10@XMLTest:
	mov	cl, BYTE PTR tv65[ebp]
	mov	BYTE PTR _pass$[ebp], cl

; 63   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN6@XMLTest

; 64   : 		printf ("[pass]");

	mov	esi, esp
	push	OFFSET ??_C@_06MMBJDEJC@?$FLpass?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 65   : 	else

	jmp	SHORT $LN5@XMLTest
$LN6@XMLTest:

; 66   : 		printf ("[fail]");

	mov	esi, esp
	push	OFFSET ??_C@_06DBEIIGKC@?$FLfail?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@XMLTest:

; 67   : 
; 68   : 	if ( !echo )

	movzx	eax, BYTE PTR _echo$[ebp]
	test	eax, eax
	jne	SHORT $LN4@XMLTest

; 69   : 		printf (" %s\n", testString);

	mov	esi, esp
	mov	eax, DWORD PTR _testString$[ebp]
	push	eax
	push	OFFSET ??_C@_04MDKIEGGJ@?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 70   : 	else

	jmp	SHORT $LN3@XMLTest
$LN4@XMLTest:

; 71   : 		printf (" %s [%d][%d]\n", testString, static_cast<int>(expected), static_cast<int>(found) );

	mov	esi, esp
	mov	eax, DWORD PTR _found$[ebp]
	push	eax
	mov	ecx, DWORD PTR _expected$[ebp]
	push	ecx
	mov	edx, DWORD PTR _testString$[ebp]
	push	edx
	push	OFFSET ??_C@_0O@ECKPCLMN@?5?$CFs?5?$FL?$CFd?$FN?$FL?$CFd?$FN?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@XMLTest:

; 72   : 
; 73   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN2@XMLTest

; 74   : 		++gPass;

	mov	eax, DWORD PTR ?gPass@@3HA		; gPass
	add	eax, 1
	mov	DWORD PTR ?gPass@@3HA, eax		; gPass

; 75   : 	else

	jmp	SHORT $LN1@XMLTest
$LN2@XMLTest:

; 76   : 		++gFail;

	mov	eax, DWORD PTR ?gFail@@3HA		; gFail
	add	eax, 1
	mov	DWORD PTR ?gFail@@3HA, eax		; gFail
$LN1@XMLTest:

; 77   : 	return pass;

	mov	al, BYTE PTR _pass$[ebp]

; 78   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$XMLTest@W4XMLError@tinyxml2@@@@YA_NPBDW4XMLError@tinyxml2@@1_N@Z ENDP ; XMLTest<enum tinyxml2::XMLError>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ??$XMLTest@_N@@YA_NPBD_N11@Z
_TEXT	SEGMENT
tv67 = -208						; size = 4
_pass$ = -5						; size = 1
_testString$ = 8					; size = 4
_expected$ = 12						; size = 1
_found$ = 16						; size = 1
_echo$ = 20						; size = 1
??$XMLTest@_N@@YA_NPBD_N11@Z PROC			; XMLTest<bool>, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	bool pass = ( expected == found );

	movzx	eax, BYTE PTR _expected$[ebp]
	movzx	ecx, BYTE PTR _found$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN9@XMLTest
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN10@XMLTest
$LN9@XMLTest:
	mov	DWORD PTR tv67[ebp], 0
$LN10@XMLTest:
	mov	dl, BYTE PTR tv67[ebp]
	mov	BYTE PTR _pass$[ebp], dl

; 63   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN6@XMLTest

; 64   : 		printf ("[pass]");

	mov	esi, esp
	push	OFFSET ??_C@_06MMBJDEJC@?$FLpass?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 65   : 	else

	jmp	SHORT $LN5@XMLTest
$LN6@XMLTest:

; 66   : 		printf ("[fail]");

	mov	esi, esp
	push	OFFSET ??_C@_06DBEIIGKC@?$FLfail?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@XMLTest:

; 67   : 
; 68   : 	if ( !echo )

	movzx	eax, BYTE PTR _echo$[ebp]
	test	eax, eax
	jne	SHORT $LN4@XMLTest

; 69   : 		printf (" %s\n", testString);

	mov	esi, esp
	mov	eax, DWORD PTR _testString$[ebp]
	push	eax
	push	OFFSET ??_C@_04MDKIEGGJ@?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 70   : 	else

	jmp	SHORT $LN3@XMLTest
$LN4@XMLTest:

; 71   : 		printf (" %s [%d][%d]\n", testString, static_cast<int>(expected), static_cast<int>(found) );

	movzx	eax, BYTE PTR _found$[ebp]
	mov	esi, esp
	push	eax
	movzx	ecx, BYTE PTR _expected$[ebp]
	push	ecx
	mov	edx, DWORD PTR _testString$[ebp]
	push	edx
	push	OFFSET ??_C@_0O@ECKPCLMN@?5?$CFs?5?$FL?$CFd?$FN?$FL?$CFd?$FN?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@XMLTest:

; 72   : 
; 73   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN2@XMLTest

; 74   : 		++gPass;

	mov	eax, DWORD PTR ?gPass@@3HA		; gPass
	add	eax, 1
	mov	DWORD PTR ?gPass@@3HA, eax		; gPass

; 75   : 	else

	jmp	SHORT $LN1@XMLTest
$LN2@XMLTest:

; 76   : 		++gFail;

	mov	eax, DWORD PTR ?gFail@@3HA		; gFail
	add	eax, 1
	mov	DWORD PTR ?gFail@@3HA, eax		; gFail
$LN1@XMLTest:

; 77   : 	return pass;

	mov	al, BYTE PTR _pass$[ebp]

; 78   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$XMLTest@_N@@YA_NPBD_N11@Z ENDP			; XMLTest<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ??$XMLTest@H@@YA_NPBDHH_N@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_pass$ = -5						; size = 1
_testString$ = 8					; size = 4
_expected$ = 12						; size = 4
_found$ = 16						; size = 4
_echo$ = 20						; size = 1
??$XMLTest@H@@YA_NPBDHH_N@Z PROC			; XMLTest<int>, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 62   : 	bool pass = ( expected == found );

	mov	eax, DWORD PTR _expected$[ebp]
	cmp	eax, DWORD PTR _found$[ebp]
	jne	SHORT $LN9@XMLTest
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN10@XMLTest
$LN9@XMLTest:
	mov	DWORD PTR tv65[ebp], 0
$LN10@XMLTest:
	mov	cl, BYTE PTR tv65[ebp]
	mov	BYTE PTR _pass$[ebp], cl

; 63   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN6@XMLTest

; 64   : 		printf ("[pass]");

	mov	esi, esp
	push	OFFSET ??_C@_06MMBJDEJC@?$FLpass?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 65   : 	else

	jmp	SHORT $LN5@XMLTest
$LN6@XMLTest:

; 66   : 		printf ("[fail]");

	mov	esi, esp
	push	OFFSET ??_C@_06DBEIIGKC@?$FLfail?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@XMLTest:

; 67   : 
; 68   : 	if ( !echo )

	movzx	eax, BYTE PTR _echo$[ebp]
	test	eax, eax
	jne	SHORT $LN4@XMLTest

; 69   : 		printf (" %s\n", testString);

	mov	esi, esp
	mov	eax, DWORD PTR _testString$[ebp]
	push	eax
	push	OFFSET ??_C@_04MDKIEGGJ@?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 70   : 	else

	jmp	SHORT $LN3@XMLTest
$LN4@XMLTest:

; 71   : 		printf (" %s [%d][%d]\n", testString, static_cast<int>(expected), static_cast<int>(found) );

	mov	esi, esp
	mov	eax, DWORD PTR _found$[ebp]
	push	eax
	mov	ecx, DWORD PTR _expected$[ebp]
	push	ecx
	mov	edx, DWORD PTR _testString$[ebp]
	push	edx
	push	OFFSET ??_C@_0O@ECKPCLMN@?5?$CFs?5?$FL?$CFd?$FN?$FL?$CFd?$FN?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@XMLTest:

; 72   : 
; 73   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN2@XMLTest

; 74   : 		++gPass;

	mov	eax, DWORD PTR ?gPass@@3HA		; gPass
	add	eax, 1
	mov	DWORD PTR ?gPass@@3HA, eax		; gPass

; 75   : 	else

	jmp	SHORT $LN1@XMLTest
$LN2@XMLTest:

; 76   : 		++gFail;

	mov	eax, DWORD PTR ?gFail@@3HA		; gFail
	add	eax, 1
	mov	DWORD PTR ?gFail@@3HA, eax		; gFail
$LN1@XMLTest:

; 77   : 	return pass;

	mov	al, BYTE PTR _pass$[ebp]

; 78   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$XMLTest@H@@YA_NPBDHH_N@Z ENDP			; XMLTest<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT _main
_TEXT	SEGMENT
tv4630 = -30104						; size = 8
tv4627 = -30096						; size = 8
tv4624 = -30088						; size = 8
tv4621 = -30080						; size = 8
tv4618 = -30072						; size = 8
tv816 = -30069						; size = 1
tv666 = -30069						; size = 1
tv3743 = -30068						; size = 4
tv1905 = -30068						; size = 4
tv1873 = -30068						; size = 4
tv1820 = -30068						; size = 4
tv1151 = -30068						; size = 4
tv834 = -30068						; size = 4
tv811 = -30068						; size = 4
tv791 = -30068						; size = 4
tv716 = -30068						; size = 4
tv661 = -30068						; size = 4
tv641 = -30068						; size = 4
tv614 = -30068						; size = 4
tv488 = -30068						; size = 4
tv276 = -30068						; size = 4
tv264 = -30068						; size = 4
tv251 = -30068						; size = 4
tv132 = -30068						; size = 4
tv82 = -30068						; size = 4
tv3087 = -30065						; size = 1
tv3068 = -30065						; size = 1
tv2714 = -30065						; size = 1
tv2660 = -30065						; size = 1
tv2441 = -30065						; size = 1
tv1580 = -30065						; size = 1
tv1297 = -30065						; size = 1
tv1026 = -30065						; size = 1
tv1020 = -30065						; size = 1
$T2 = -30060						; size = 4
$T3 = -30048						; size = 4
$T4 = -30036						; size = 4
$T5 = -30024						; size = 4
$T6 = -30012						; size = 4
$T7 = -30000						; size = 4
$T8 = -29988						; size = 4
$T9 = -29976						; size = 4
$T10 = -29964						; size = 4
$T11 = -29952						; size = 4
$T12 = -29940						; size = 4
$T13 = -29928						; size = 4
$T14 = -29916						; size = 4
$T15 = -29904						; size = 4
$T16 = -29892						; size = 4
$T17 = -29880						; size = 4
$T18 = -29868						; size = 4
$T19 = -29856						; size = 4
$T20 = -29844						; size = 4
$T21 = -29832						; size = 4
$T22 = -29820						; size = 4
$T23 = -29808						; size = 4
$T24 = -29796						; size = 4
$T25 = -29784						; size = 4
_diffMemState$ = -29580					; size = 52
_doc$26 = -29520					; size = 372
_i$27 = -29140						; size = 4
_mem$28 = -29128					; size = 4
_size$29 = -29116					; size = 4
_fp$30 = -29104						; size = 4
_freq$31 = -29092					; size = 8
_end$32 = -29076					; size = 8
_start$33 = -29060					; size = 8
_doc$34 = -29044					; size = 372
_doc$35 = -28664					; size = 372
_doc$36 = -28284					; size = 372
_xml$37 = -27904					; size = 4
_doc$38 = -27892					; size = 372
_xml$39 = -27512					; size = 4
_printer4$40 = -27500					; size = 240
_printer3$41 = -27252					; size = 240
_one$42 = -27004					; size = 4
_printer2$43 = -26992					; size = 240
_printer1$44 = -26744					; size = 240
_two$45 = -26496					; size = 4
_subtree$46 = -26484					; size = 4
_doc$47 = -26472					; size = 372
_xmlAfterTwo$48 = -26092				; size = 4
_xmlAfterOne$49 = -26080				; size = 4
_xmlInsideTwo$50 = -26068				; size = 4
_xml$51 = -26056					; size = 4
_printer$52 = -26044					; size = 240
_doc$53 = -25796					; size = 372
_printer$54 = -25416					; size = 240
_doc$55 = -25168					; size = 372
_error$56 = -24788					; size = 4
_doc$57 = -24776					; size = 372
_printer$58 = -24396					; size = 240
_ele$59 = -24148					; size = 4
_doc$60 = -24136					; size = 372
_xml$61 = -23756					; size = 4
_ele$62 = -23744					; size = 4
_doc$63 = -23732					; size = 372
_xml$64 = -23352					; size = 4
_doc$65 = -23340					; size = 372
_xml$66 = -22960					; size = 4
_parent$67 = -22948					; size = 4
_element$68 = -22936					; size = 4
_doc$69 = -22924					; size = 372
_xml$70 = -22544					; size = 4
_doc$71 = -22532					; size = 372
_doc$72 = -22152					; size = 372
_xml$73 = -21772					; size = 4
_doc$74 = -21760					; size = 372
_xml$75 = -21380					; size = 4
_doc$76 = -21368					; size = 372
_xml$77 = -20988					; size = 4
_doc$78 = -20976					; size = 372
_xml$79 = -20596					; size = 4
_boolValue$80 = -20581					; size = 1
_doubleValue$81 = -20572				; size = 8
_floatValue$82 = -20556					; size = 4
_unsignedValue$83 = -20544				; size = 4
_intValue$84 = -20532					; size = 4
_pointElement$85 = -20520				; size = 4
_doc$86 = -20508					; size = 372
_xml$87 = -20128					; size = 4
_doc$88 = -20116					; size = 372
_xml$89 = -19736					; size = 4
_printer$90 = -19724					; size = 240
_doc$91 = -19476					; size = 372
_ele$92 = -19096					; size = 4
_docH$93 = -19084					; size = 4
_doc$94 = -19072					; size = 372
_docH$95 = -18692					; size = 4
_ele$96 = -18680					; size = 4
_doc$97 = -18668					; size = 372
_equal$98 = -18285					; size = 1
_ele1$99 = -18276					; size = 4
_ele0$100 = -18264					; size = 4
_doc$101 = -18252					; size = 372
_ele$102 = -17872					; size = 4
_doc2$103 = -17860					; size = 372
_doc1$104 = -17480					; size = 372
_doc0$105 = -17100					; size = 372
_a$106 = -16720						; size = 4
_ele$107 = -16708					; size = 4
_doc$108 = -16696					; size = 372
_doc$109 = -16316					; size = 372
_b$110 = -15936						; size = 4
_a$111 = -15924						; size = 4
_count$112 = -15912					; size = 4
_copy$113 = -15900					; size = 4
_node$114 = -15888					; size = 4
_clone$115 = -15876					; size = 372
_doc$116 = -15496					; size = 372
_pub$117 = -15116					; size = 4
_xml$118 = -15104					; size = 372
_xml$119 = -14724					; size = 372
_doc$120 = -14344					; size = 372
_buf$121 = -13964					; size = 76
_ele$122 = -13880					; size = 4
_count$123 = -13868					; size = 4
_xml$124 = -13856					; size = 372
_c1$125 = -13476					; size = 4
_c0$126 = -13464					; size = 4
_e1$127 = -13452					; size = 4
_e0$128 = -13440					; size = 4
_xml$129 = -13428					; size = 372
_xml$130 = -13048					; size = 372
_doc$131 = -12668					; size = 372
_result$132 = -12288					; size = 2
_doc$133 = -12276					; size = 372
_doc$134 = -11896					; size = 372
_str$135 = -11516					; size = 4
_doc$136 = -11504					; size = 372
_doctype$137 = -11124					; size = 4
_doc$138 = -11112					; size = 372
_doctype$139 = -10732					; size = 4
_comment$140 = -10720					; size = 4
_doc$141 = -10708					; size = 372
_doctype$142 = -10328					; size = 4
_decl$143 = -10316					; size = 4
_doc$144 = -10304					; size = 372
_doctype$145 = -9924					; size = 4
_text$146 = -9912					; size = 4
_doc$147 = -9900					; size = 372
_test$148 = -9520					; size = 4
_doc$149 = -9508					; size = 372
_test$150 = -9128					; size = 4
_doc$151 = -9116					; size = 372
_passages$152 = -8736					; size = 4
_buf$153 = -8724					; size = 1024
_streamer$154 = -7692					; size = 240
_textfile$155 = -7444					; size = 4
_expected$156 = -7432					; size = 4
_context$157 = -7420					; size = 4
_psg$158 = -7408					; size = 4
_doc$159 = -7396					; size = 372
_passages$160 = -7016					; size = 4
_childNode1$161 = -7004					; size = 4
_childNode0$162 = -6992					; size = 4
_childText1$163 = -6980					; size = 4
_childText0$164 = -6968					; size = 4
_parent$165 = -6956					; size = 4
_doc$166 = -6944					; size = 372
_doc$167 = -6564					; size = 372
_str$168 = -6184					; size = 4
_doc$169 = -6172					; size = 372
_str$170 = -5792					; size = 4
_element$171 = -5780					; size = 4
_doc$172 = -5768					; size = 372
_str$173 = -5388					; size = 4
_element$174 = -5376					; size = 4
_doc$175 = -5364					; size = 372
_str$176 = -4984					; size = 4
_savedBuf$177 = -4972					; size = 256
_verifyBuf$178 = -4708					; size = 256
_verify$179 = -4444					; size = 4
_saved$180 = -4432					; size = 4
_okay$181 = -4420					; size = 4
_text$182 = -4408					; size = 4
_russianText$183 = -4396				; size = 13
_russianElementName$184 = -4372				; size = 15
_correctValue$185 = -4348				; size = 17
_element$186 = -4320					; size = 4
_doc$187 = -4308					; size = 372
_cStr$188 = -3928					; size = 4
_dVal2$189 = -3916					; size = 8
_dVal$190 = -3900					; size = 8
_iVal2$191 = -3884					; size = 4
_iVal$192 = -3872					; size = 4
_ele$193 = -3860					; size = 4
_doc$194 = -3848					; size = 372
_str$195 = -3468					; size = 4
_dVal$196 = -3456					; size = 8
_result$197 = -3440					; size = 4
_iVal$198 = -3428					; size = 4
_ele$199 = -3416					; size = 4
_doc$200 = -3404					; size = 372
_str$201 = -3024					; size = 4
_doc$202 = -3012					; size = 372
_error$203 = -2632					; size = 4
_doc2$204 = -2620					; size = 372
_doc$205 = -2240					; size = 372
_streamer$206 = -1860					; size = 240
_streamer$207 = -1612					; size = 240
_result$208 = -1364					; size = 4
_value$209 = -1352					; size = 4
_comment$210 = -1340					; size = 4
_i$211 = -1328						; size = 4
_sub$212 = -1316					; size = 12
_element$213 = -1296					; size = 4
_doc$214 = -1284					; size = 4
_doc$215 = -1272					; size = 4
_newElement$216 = -1260					; size = 4
_root$217 = -1248					; size = 4
_doc$218 = -1236					; size = 372
_doc$219 = -856						; size = 372
_doc$220 = -476						; size = 372
_i$221 = -96						; size = 4
_fp$ = -84						; size = 4
_deleteTime$222 = -72					; size = 4
_errorID$223 = -60					; size = 4
_loadTime$224 = -48					; size = 4
_startTime$225 = -36					; size = 4
_doc$226 = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT

; 279  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 30092				; 0000758cH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-30104]
	mov	ecx, 7523				; 00001d63H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 280  : 	#if defined( _MSC_VER ) && defined( DEBUG )
; 281  : 		_CrtMemCheckpoint( &startMemState );

	mov	esi, esp
	push	OFFSET ?startMemState@@3U_CrtMemState@@A ; startMemState
	call	DWORD PTR __imp___CrtMemCheckpoint
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 282  : 		// Enable MS Visual C++ debug heap memory leaks dump on exit
; 283  : 		_CrtSetDbgFlag(_CrtSetDbgFlag(_CRTDBG_REPORT_FLAG) | _CRTDBG_LEAK_CHECK_DF);

	mov	esi, esp
	push	-1
	call	DWORD PTR __imp___CrtSetDbgFlag
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	or	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp___CrtSetDbgFlag
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 284  : 	#endif
; 285  : 
; 286  : 	#if defined(_MSC_VER) || defined(MINGW32) || defined(__MINGW32__)
; 287  : 		#if defined __MINGW64_VERSION_MAJOR && defined __MINGW64_VERSION_MINOR
; 288  : 			//MINGW64: both 32 and 64-bit
; 289  : 			mkdir( "resources/out/" );
; 290  :                 #else
; 291  :                 	_mkdir( "resources/out/" );

	mov	esi, esp
	push	OFFSET ??_C@_0P@HOEBBIHO@resources?1out?1?$AA@
	call	DWORD PTR __imp___mkdir
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 292  :                 #endif
; 293  : 	#else
; 294  : 		mkdir( "resources/out/", S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);
; 295  : 	#endif
; 296  : 
; 297  : 	if ( argc > 1 ) {

	cmp	DWORD PTR _argc$[ebp], 1
	jle	$LN34@main

; 298  : 		XMLDocument* doc = new XMLDocument();

	push	372					; 00000174H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN37@main
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN38@main
$LN37@main:
	mov	DWORD PTR tv82[ebp], 0
$LN38@main:
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _doc$226[ebp], ecx

; 299  : 		clock_t startTime = clock();

	mov	esi, esp
	call	DWORD PTR __imp__clock
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _startTime$225[ebp], eax

; 300  : 		doc->LoadFile( argv[1] );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	mov	ecx, DWORD PTR _doc$226[ebp]
	call	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile

; 301  : 		clock_t loadTime = clock();

	mov	esi, esp
	call	DWORD PTR __imp__clock
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _loadTime$224[ebp], eax

; 302  : 		int errorID = doc->ErrorID();

	mov	ecx, DWORD PTR _doc$226[ebp]
	call	?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ ; tinyxml2::XMLDocument::ErrorID
	mov	DWORD PTR _errorID$223[ebp], eax

; 303  : 		delete doc; doc = 0;

	mov	eax, DWORD PTR _doc$226[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN39@main
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN40@main
$LN39@main:
	mov	DWORD PTR tv132[ebp], 0
$LN40@main:
	mov	DWORD PTR _doc$226[ebp], 0

; 304  : 		clock_t deleteTime = clock();

	mov	esi, esp
	call	DWORD PTR __imp__clock
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _deleteTime$222[ebp], eax

; 305  : 
; 306  : 		printf( "Test file '%s' loaded. ErrorID=%d\n", argv[1], errorID );

	mov	esi, esp
	mov	eax, DWORD PTR _errorID$223[ebp]
	push	eax
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _argv$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	push	eax
	push	OFFSET ??_C@_0CD@FNBOFDCL@Test?5file?5?8?$CFs?8?5loaded?4?5ErrorID?$DN?$CF@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 307  : 		if ( !errorID ) {

	cmp	DWORD PTR _errorID$223[ebp], 0
	jne	SHORT $LN33@main

; 308  : 			printf( "Load time=%u\n",   (unsigned)(loadTime - startTime) );

	mov	eax, DWORD PTR _loadTime$224[ebp]
	sub	eax, DWORD PTR _startTime$225[ebp]
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0O@MGBHNCAN@Load?5time?$DN?$CFu?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 309  : 			printf( "Delete time=%u\n", (unsigned)(deleteTime - loadTime) );

	mov	eax, DWORD PTR _deleteTime$222[ebp]
	sub	eax, DWORD PTR _loadTime$224[ebp]
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BA@NCOPPKFI@Delete?5time?$DN?$CFu?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 310  : 			printf( "Total time=%u\n",  (unsigned)(deleteTime - startTime) );

	mov	eax, DWORD PTR _deleteTime$222[ebp]
	sub	eax, DWORD PTR _startTime$225[ebp]
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0P@JMJCIMED@Total?5time?$DN?$CFu?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN33@main:

; 311  : 		}
; 312  : 		exit(0);

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN34@main:

; 313  : 	}
; 314  : 
; 315  : 	FILE* fp = fopen( "resources/dream.xml", "r" );

	mov	esi, esp
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	OFFSET ??_C@_0BE@MGFIECLE@resources?1dream?4xml?$AA@
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _fp$[ebp], eax

; 316  : 	if ( !fp ) {

	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $LN32@main

; 317  : 		printf( "Error opening test file 'dream.xml'.\n"
; 318  : 				"Is your working directory the same as where \n"
; 319  : 				"the xmltest.cpp and dream.xml file are?\n\n"
; 320  : 	#if defined( _MSC_VER )
; 321  : 				"In windows Visual Studio you may need to set\n"
; 322  : 				"Properties->Debugging->Working Directory to '..'\n"
; 323  : 	#endif
; 324  : 			  );

	mov	esi, esp
	push	OFFSET ??_C@_0NK@DCFJCLFO@Error?5opening?5test?5file?5?8dream?4x@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 325  : 		exit( 1 );

	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN32@main:

; 326  : 	}
; 327  : 	fclose( fp );

	mov	esi, esp
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 328  : 
; 329  : 	XMLTest( "Example-1", 0, example_1() );

	push	1
	call	?example_1@@YAHXZ			; example_1
	push	eax
	push	0
	push	OFFSET ??_C@_09HEGNPFBN@Example?91?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 330  : 	XMLTest( "Example-2", 0, example_2() );

	push	1
	call	?example_2@@YAHXZ			; example_2
	push	eax
	push	0
	push	OFFSET ??_C@_09FPEAKGNO@Example?92?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 331  : 	XMLTest( "Example-3", 0, example_3() );

	push	1
	call	?example_3@@YAHXZ			; example_3
	push	eax
	push	0
	push	OFFSET ??_C@_09EGFLJHJP@Example?93?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 332  : 	XMLTest( "Example-4", true, example_4() );

	push	1
	call	?example_4@@YA_NXZ			; example_4
	movzx	eax, al
	push	eax
	push	1
	push	OFFSET ??_C@_09JBKABFI@Example?94?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 333  : 
; 334  : 	/* ------ Example 2: Lookup information. ---- */
; 335  : 
; 336  : 	{
; 337  : 		static const char* test[] = {	"<element />",
; 338  : 										"<element></element>",
; 339  : 										"<element><subelement/></element>",
; 340  : 										"<element><subelement></subelement></element>",
; 341  : 										"<element><subelement><subsub/></subelement></element>",
; 342  : 										"<!--comment beside elements--><element><subelement></subelement></element>",
; 343  : 										"<!--comment beside elements, this time with spaces-->  \n <element>  <subelement> \n </subelement> </element>",
; 344  : 										"<element attrib1='foo' attrib2=\"bar\" ></element>",
; 345  : 										"<element attrib1='foo' attrib2=\"bar\" ><subelement attrib3='yeehaa' /></element>",
; 346  : 										"<element>Text inside element.</element>",
; 347  : 										"<element><b></b></element>",
; 348  : 										"<element>Text inside and <b>bolded</b> in the element.</element>",
; 349  : 										"<outer><element>Text inside and <b>bolded</b> in the element.</element></outer>",
; 350  : 										"<element>This &amp; That.</element>",
; 351  : 										"<element attrib='This&lt;That' />",
; 352  : 										0
; 353  : 		};
; 354  : 		for( int i=0; test[i]; ++i ) {

	mov	DWORD PTR _i$221[ebp], 0
	jmp	SHORT $LN31@main
$LN30@main:
	mov	eax, DWORD PTR _i$221[ebp]
	add	eax, 1
	mov	DWORD PTR _i$221[ebp], eax
$LN31@main:
	mov	eax, DWORD PTR _i$221[ebp]
	cmp	DWORD PTR ?test@?M@??main@@9@4PAPBDA[eax*4], 0
	je	SHORT $LN29@main

; 355  : 			XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$220[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$220[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 356  : 			doc.Parse( test[i] );

	push	-1
	mov	eax, DWORD PTR _i$221[ebp]
	mov	ecx, DWORD PTR ?test@?M@??main@@9@4PAPBDA[eax*4]
	push	ecx
	lea	ecx, DWORD PTR _doc$220[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 357  : 			doc.Print();

	push	0
	lea	ecx, DWORD PTR _doc$220[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 358  : 			printf( "----------------------------------------------\n" );

	mov	esi, esp
	push	OFFSET ??_C@_0DA@HHHLHLBD@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 359  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$220[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
	jmp	$LN30@main
$LN29@main:

; 360  : 	}
; 361  : #if 1
; 362  : 	{
; 363  : 		static const char* test = "<!--hello world\n"
; 364  : 								  "          line 2\r"
; 365  : 								  "          line 3\r\n"
; 366  : 								  "          line 4\n\r"
; 367  : 								  "          line 5\r-->";
; 368  : 
; 369  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$219[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$219[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 370  : 		doc.Parse( test );

	push	-1
	mov	eax, DWORD PTR ?test@?P@??main@@9@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc$219[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 371  : 		doc.Print();

	push	0
	lea	ecx, DWORD PTR _doc$219[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 372  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$219[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 373  : 
; 374  : 	{
; 375  : 		static const char* test = "<element>Text before.</element>";
; 376  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$218[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$218[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 3

; 377  : 		doc.Parse( test );

	push	-1
	mov	eax, DWORD PTR ?test@?BA@??main@@9@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc$218[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 378  : 		XMLElement* root = doc.FirstChildElement();

	push	0
	lea	ecx, DWORD PTR _doc$218[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _root$217[ebp], eax

; 379  : 		XMLElement* newElement = doc.NewElement( "Subelement" );

	push	OFFSET ??_C@_0L@PPLFOKHK@Subelement?$AA@
	lea	ecx, DWORD PTR _doc$218[ebp]
	call	?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLDocument::NewElement
	mov	DWORD PTR _newElement$216[ebp], eax

; 380  : 		root->InsertEndChild( newElement );

	mov	eax, DWORD PTR _newElement$216[ebp]
	push	eax
	mov	ecx, DWORD PTR _root$217[ebp]
	call	?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertEndChild

; 381  : 		doc.Print();

	push	0
	lea	ecx, DWORD PTR _doc$218[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 382  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$218[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 383  : 	{
; 384  : 		XMLDocument* doc = new XMLDocument();

	push	372					; 00000174H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN41@main
	push	1
	mov	ecx, DWORD PTR $T7[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR tv251[ebp], eax
	jmp	SHORT $LN42@main
$LN41@main:
	mov	DWORD PTR tv251[ebp], 0
$LN42@main:
	mov	eax, DWORD PTR tv251[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR _doc$215[ebp], ecx

; 385  : 		static const char* test = "<element><sub/></element>";
; 386  : 		doc->Parse( test );

	push	-1
	mov	eax, DWORD PTR ?test@?BB@??main@@9@4PBDB
	push	eax
	mov	ecx, DWORD PTR _doc$215[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 387  : 		delete doc;

	mov	eax, DWORD PTR _doc$215[ebp]
	mov	DWORD PTR $T9[ebp], eax
	mov	ecx, DWORD PTR $T9[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN43@main
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T8[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T8[ebp]
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv264[ebp], eax
	jmp	SHORT $LN44@main
$LN43@main:
	mov	DWORD PTR tv264[ebp], 0
$LN44@main:

; 388  : 	}
; 389  : 	{
; 390  : 		// Test: Programmatic DOM
; 391  : 		// Build:
; 392  : 		//		<element>
; 393  : 		//			<!--comment-->
; 394  : 		//			<sub attrib="1" />
; 395  : 		//			<sub attrib="2" />
; 396  : 		//			<sub attrib="3" >& Text!</sub>
; 397  : 		//		<element>
; 398  : 
; 399  : 		XMLDocument* doc = new XMLDocument();

	push	372					; 00000174H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN45@main
	push	1
	mov	ecx, DWORD PTR $T11[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	mov	ecx, DWORD PTR $T11[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR tv276[ebp], eax
	jmp	SHORT $LN46@main
$LN45@main:
	mov	DWORD PTR tv276[ebp], 0
$LN46@main:
	mov	eax, DWORD PTR tv276[ebp]
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T10[ebp]
	mov	DWORD PTR _doc$214[ebp], ecx

; 400  : 		XMLNode* element = doc->InsertEndChild( doc->NewElement( "element" ) );

	push	OFFSET ??_C@_07HCLJNICE@element?$AA@
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLDocument::NewElement
	push	eax
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertEndChild
	mov	DWORD PTR _element$213[ebp], eax

; 401  : 
; 402  : 		XMLElement* sub[3] = { doc->NewElement( "sub" ), doc->NewElement( "sub" ), doc->NewElement( "sub" ) };

	push	OFFSET ??_C@_03KCMAIMAP@sub?$AA@
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLDocument::NewElement
	mov	DWORD PTR _sub$212[ebp], eax
	push	OFFSET ??_C@_03KCMAIMAP@sub?$AA@
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLDocument::NewElement
	mov	DWORD PTR _sub$212[ebp+4], eax
	push	OFFSET ??_C@_03KCMAIMAP@sub?$AA@
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLDocument::NewElement
	mov	DWORD PTR _sub$212[ebp+8], eax

; 403  : 		for( int i=0; i<3; ++i ) {

	mov	DWORD PTR _i$211[ebp], 0
	jmp	SHORT $LN28@main
$LN27@main:
	mov	eax, DWORD PTR _i$211[ebp]
	add	eax, 1
	mov	DWORD PTR _i$211[ebp], eax
$LN28@main:
	cmp	DWORD PTR _i$211[ebp], 3
	jge	SHORT $LN26@main

; 404  : 			sub[i]->SetAttribute( "attrib", i );

	mov	eax, DWORD PTR _i$211[ebp]
	push	eax
	push	OFFSET ??_C@_06CEIPPJF@attrib?$AA@
	mov	ecx, DWORD PTR _i$211[ebp]
	mov	ecx, DWORD PTR _sub$212[ebp+ecx*4]
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDH@Z ; tinyxml2::XMLElement::SetAttribute

; 405  : 		}

	jmp	SHORT $LN27@main
$LN26@main:

; 406  : 		element->InsertEndChild( sub[2] );

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _sub$212[ebp+eax]
	push	ecx
	mov	ecx, DWORD PTR _element$213[ebp]
	call	?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertEndChild

; 407  : 		XMLNode* comment = element->InsertFirstChild( doc->NewComment( "comment" ) );

	push	OFFSET ??_C@_07GJGNEJFD@comment?$AA@
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z ; tinyxml2::XMLDocument::NewComment
	push	eax
	mov	ecx, DWORD PTR _element$213[ebp]
	call	?InsertFirstChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertFirstChild
	mov	DWORD PTR _comment$210[ebp], eax

; 408  : 		element->InsertAfterChild( comment, sub[0] );

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _sub$212[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _comment$210[ebp]
	push	edx
	mov	ecx, DWORD PTR _element$213[ebp]
	call	?InsertAfterChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@0@Z ; tinyxml2::XMLNode::InsertAfterChild

; 409  : 		element->InsertAfterChild( sub[0], sub[1] );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _sub$212[ebp+eax]
	push	ecx
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _sub$212[ebp+edx]
	push	eax
	mov	ecx, DWORD PTR _element$213[ebp]
	call	?InsertAfterChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@0@Z ; tinyxml2::XMLNode::InsertAfterChild

; 410  : 		sub[2]->InsertFirstChild( doc->NewText( "& Text!" ));

	push	OFFSET ??_C@_07NNFIJNBL@?$CG?5Text?$CB?$AA@
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z ; tinyxml2::XMLDocument::NewText
	push	eax
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _sub$212[ebp+eax]
	call	?InsertFirstChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertFirstChild

; 411  : 		doc->Print();

	push	0
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 412  : 		XMLTest( "Programmatic DOM", "comment", doc->FirstChildElement( "element" )->FirstChild()->Value() );

	push	0
	push	1
	push	OFFSET ??_C@_07HCLJNICE@element?$AA@
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	ecx, eax
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_07GJGNEJFD@comment?$AA@
	push	OFFSET ??_C@_0BB@BFILBPOF@Programmatic?5DOM?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 413  : 		XMLTest( "Programmatic DOM", "0", doc->FirstChildElement( "element" )->FirstChildElement()->Attribute( "attrib" ) );

	push	0
	push	1
	push	0
	push	OFFSET ??_C@_06CEIPPJF@attrib?$AA@
	push	0
	push	OFFSET ??_C@_07HCLJNICE@element?$AA@
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
	push	eax
	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	push	OFFSET ??_C@_0BB@BFILBPOF@Programmatic?5DOM?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 414  : 		XMLTest( "Programmatic DOM", 2, doc->FirstChildElement()->LastChildElement( "sub" )->IntAttribute( "attrib" ) );

	push	1
	push	OFFSET ??_C@_06CEIPPJF@attrib?$AA@
	push	OFFSET ??_C@_03KCMAIMAP@sub?$AA@
	push	0
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?LastChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::LastChildElement
	mov	ecx, eax
	call	?IntAttribute@XMLElement@tinyxml2@@QBEHPBD@Z ; tinyxml2::XMLElement::IntAttribute
	push	eax
	push	2
	push	OFFSET ??_C@_0BB@BFILBPOF@Programmatic?5DOM?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 415  : 		XMLTest( "Programmatic DOM", "& Text!",
; 416  : 				 doc->FirstChildElement()->LastChildElement( "sub" )->FirstChild()->ToText()->Value() );

	push	OFFSET ??_C@_03KCMAIMAP@sub?$AA@
	push	0
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?LastChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::LastChildElement
	mov	ecx, eax
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR tv488[ebp], eax
	push	0
	push	1
	mov	esi, esp
	mov	eax, DWORD PTR tv488[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv488[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_07NNFIJNBL@?$CG?5Text?$CB?$AA@
	push	OFFSET ??_C@_0BB@BFILBPOF@Programmatic?5DOM?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 417  : 
; 418  : 		// And now deletion:
; 419  : 		element->DeleteChild( sub[2] );

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _sub$212[ebp+eax]
	push	ecx
	mov	ecx, DWORD PTR _element$213[ebp]
	call	?DeleteChild@XMLNode@tinyxml2@@QAEXPAV12@@Z ; tinyxml2::XMLNode::DeleteChild

; 420  : 		doc->DeleteNode( comment );

	mov	eax, DWORD PTR _comment$210[ebp]
	push	eax
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?DeleteNode@XMLDocument@tinyxml2@@QAEXPAVXMLNode@2@@Z ; tinyxml2::XMLDocument::DeleteNode

; 421  : 
; 422  : 		element->FirstChildElement()->SetAttribute( "attrib", true );

	push	1
	push	OFFSET ??_C@_06CEIPPJF@attrib?$AA@
	push	0
	mov	ecx, DWORD PTR _element$213[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLElement::SetAttribute

; 423  : 		element->LastChildElement()->DeleteAttribute( "attrib" );

	push	OFFSET ??_C@_06CEIPPJF@attrib?$AA@
	push	0
	mov	ecx, DWORD PTR _element$213[ebp]
	call	?LastChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::LastChildElement
	mov	ecx, eax
	call	?DeleteAttribute@XMLElement@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLElement::DeleteAttribute

; 424  : 
; 425  : 		XMLTest( "Programmatic DOM", true, doc->FirstChildElement()->FirstChildElement()->BoolAttribute( "attrib" ) );

	push	1
	push	OFFSET ??_C@_06CEIPPJF@attrib?$AA@
	push	0
	push	0
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?BoolAttribute@XMLElement@tinyxml2@@QBE_NPBD@Z ; tinyxml2::XMLElement::BoolAttribute
	movzx	eax, al
	push	eax
	push	1
	push	OFFSET ??_C@_0BB@BFILBPOF@Programmatic?5DOM?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 426  : 		int value = 10;

	mov	DWORD PTR _value$209[ebp], 10		; 0000000aH

; 427  : 		int result = doc->FirstChildElement()->LastChildElement()->QueryIntAttribute( "attrib", &value );

	lea	eax, DWORD PTR _value$209[ebp]
	push	eax
	push	OFFSET ??_C@_06CEIPPJF@attrib?$AA@
	push	0
	push	0
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?LastChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::LastChildElement
	mov	ecx, eax
	call	?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
	mov	DWORD PTR _result$208[ebp], eax

; 428  : 		XMLTest( "Programmatic DOM", result, (int)XML_NO_ATTRIBUTE );

	push	1
	push	1
	mov	eax, DWORD PTR _result$208[ebp]
	push	eax
	push	OFFSET ??_C@_0BB@BFILBPOF@Programmatic?5DOM?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 429  : 		XMLTest( "Programmatic DOM", value, 10 );

	push	1
	push	10					; 0000000aH
	mov	eax, DWORD PTR _value$209[ebp]
	push	eax
	push	OFFSET ??_C@_0BB@BFILBPOF@Programmatic?5DOM?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 430  : 
; 431  : 		doc->Print();

	push	0
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 432  : 
; 433  : 		{
; 434  : 			XMLPrinter streamer;

	push	1
	lea	ecx, DWORD PTR _streamer$207[ebp]
	call	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _streamer$207[ebp]
	call	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
	mov	DWORD PTR __$EHRec$[ebp+8], 6

; 435  : 			doc->Print( &streamer );

	lea	eax, DWORD PTR _streamer$207[ebp]
	push	eax
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 436  : 			printf( "%s", streamer.CStr() );

	lea	ecx, DWORD PTR _streamer$207[ebp]
	call	?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLPrinter::CStr
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 437  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _streamer$207[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter

; 438  : 		{
; 439  : 			XMLPrinter streamer( 0, true );

	push	1
	lea	ecx, DWORD PTR _streamer$206[ebp]
	call	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
	push	0
	push	1
	push	0
	lea	ecx, DWORD PTR _streamer$206[ebp]
	call	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
	mov	DWORD PTR __$EHRec$[ebp+8], 7

; 440  : 			doc->Print( &streamer );

	lea	eax, DWORD PTR _streamer$206[ebp]
	push	eax
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 441  : 			XMLTest( "Compact mode", "<element><sub attrib=\"1\"/><sub/></element>", streamer.CStr(), false );

	push	0
	push	0
	lea	ecx, DWORD PTR _streamer$206[ebp]
	call	?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLPrinter::CStr
	push	eax
	push	OFFSET ??_C@_0CL@GAOKPBOJ@?$DMelement?$DO?$DMsub?5attrib?$DN?$CC1?$CC?1?$DO?$DMsub?1?$DO@
	push	OFFSET ??_C@_0N@JIEHICMA@Compact?5mode?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 442  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _streamer$206[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter

; 443  : 		doc->SaveFile( "./resources/out/pretty.xml" );

	push	0
	push	OFFSET ??_C@_0BL@MKAHMKJP@?4?1resources?1out?1pretty?4xml?$AA@
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD_N@Z ; tinyxml2::XMLDocument::SaveFile

; 444  : 		doc->SaveFile( "./resources/out/compact.xml", true );

	push	1
	push	OFFSET ??_C@_0BM@HCFLCKCD@?4?1resources?1out?1compact?4xml?$AA@
	mov	ecx, DWORD PTR _doc$214[ebp]
	call	?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD_N@Z ; tinyxml2::XMLDocument::SaveFile

; 445  : 		delete doc;

	mov	eax, DWORD PTR _doc$214[ebp]
	mov	DWORD PTR $T13[ebp], eax
	mov	ecx, DWORD PTR $T13[ebp]
	mov	DWORD PTR $T12[ebp], ecx
	cmp	DWORD PTR $T12[ebp], 0
	je	SHORT $LN47@main
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T12[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T12[ebp]
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv614[ebp], eax
	jmp	SHORT $LN48@main
$LN47@main:
	mov	DWORD PTR tv614[ebp], 0
$LN48@main:

; 446  : 	}
; 447  : 	{
; 448  : 		// Test: Dream
; 449  : 		// XML1 : 1,187,569 bytes	in 31,209 allocations
; 450  : 		// XML2 :   469,073	bytes	in    323 allocations
; 451  : 		//int newStart = gNew;
; 452  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$205[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$205[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 8

; 453  : 		doc.LoadFile( "resources/dream.xml" );

	push	OFFSET ??_C@_0BE@MGFIECLE@resources?1dream?4xml?$AA@
	lea	ecx, DWORD PTR _doc$205[ebp]
	call	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile

; 454  : 
; 455  : 		doc.SaveFile( "resources/out/dreamout.xml" );

	push	0
	push	OFFSET ??_C@_0BL@FKPDPIFL@resources?1out?1dreamout?4xml?$AA@
	lea	ecx, DWORD PTR _doc$205[ebp]
	call	?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD_N@Z ; tinyxml2::XMLDocument::SaveFile

; 456  : 		doc.PrintError();

	lea	ecx, DWORD PTR _doc$205[ebp]
	call	?PrintError@XMLDocument@tinyxml2@@QBEXXZ ; tinyxml2::XMLDocument::PrintError

; 457  : 
; 458  : 		XMLTest( "Dream", "xml version=\"1.0\"",
; 459  : 						  doc.FirstChild()->ToDeclaration()->Value() );

	lea	ecx, DWORD PTR _doc$205[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR tv641[ebp], eax
	push	0
	push	1
	mov	esi, esp
	mov	eax, DWORD PTR tv641[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv641[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0BC@CIAMHNHO@xml?5version?$DN?$CC1?40?$CC?$AA@
	push	OFFSET ??_C@_05MMFIBGEF@Dream?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 460  : 		XMLTest( "Dream", true, doc.FirstChild()->NextSibling()->ToUnknown() ? true : false );

	lea	ecx, DWORD PTR _doc$205[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	ecx, eax
	call	?NextSibling@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::NextSibling
	mov	DWORD PTR tv661[ebp], eax
	mov	eax, DWORD PTR tv661[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv661[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN49@main
	mov	BYTE PTR tv666[ebp], 1
	jmp	SHORT $LN50@main
$LN49@main:
	mov	BYTE PTR tv666[ebp], 0
$LN50@main:
	push	1
	movzx	ecx, BYTE PTR tv666[ebp]
	push	ecx
	push	1
	push	OFFSET ??_C@_05MMFIBGEF@Dream?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 461  : 		XMLTest( "Dream", "DOCTYPE PLAY SYSTEM \"play.dtd\"",
; 462  : 						  doc.FirstChild()->NextSibling()->ToUnknown()->Value() );

	lea	ecx, DWORD PTR _doc$205[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	ecx, eax
	call	?NextSibling@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::NextSibling
	mov	DWORD PTR tv716[ebp], eax
	push	0
	push	1
	mov	esi, esp
	mov	eax, DWORD PTR tv716[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv716[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0BP@MHJCDDEA@DOCTYPE?5PLAY?5SYSTEM?5?$CCplay?4dtd?$CC?$AA@
	push	OFFSET ??_C@_05MMFIBGEF@Dream?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 463  : 		XMLTest( "Dream", "And Robin shall restore amends.",
; 464  : 						  doc.LastChild()->LastChild()->LastChild()->LastChild()->LastChildElement()->GetText() );

	push	0
	push	1
	push	0
	lea	ecx, DWORD PTR _doc$205[ebp]
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::LastChildElement
	mov	ecx, eax
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_0CA@JHNCBPHK@And?5Robin?5shall?5restore?5amends?4?$AA@
	push	OFFSET ??_C@_05MMFIBGEF@Dream?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 465  : 		XMLTest( "Dream", "And Robin shall restore amends.",
; 466  : 						  doc.LastChild()->LastChild()->LastChild()->LastChild()->LastChildElement()->GetText() );

	push	0
	push	1
	push	0
	lea	ecx, DWORD PTR _doc$205[ebp]
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::LastChildElement
	mov	ecx, eax
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_0CA@JHNCBPHK@And?5Robin?5shall?5restore?5amends?4?$AA@
	push	OFFSET ??_C@_05MMFIBGEF@Dream?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 467  : 
; 468  : 		XMLDocument doc2;

	push	1
	lea	ecx, DWORD PTR _doc2$204[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc2$204[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	BYTE PTR __$EHRec$[ebp+8], 9

; 469  : 		doc2.LoadFile( "resources/out/dreamout.xml" );

	push	OFFSET ??_C@_0BL@FKPDPIFL@resources?1out?1dreamout?4xml?$AA@
	lea	ecx, DWORD PTR _doc2$204[ebp]
	call	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile

; 470  : 		XMLTest( "Dream-out", "xml version=\"1.0\"",
; 471  : 						  doc2.FirstChild()->ToDeclaration()->Value() );

	lea	ecx, DWORD PTR _doc2$204[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR tv791[ebp], eax
	push	0
	push	1
	mov	esi, esp
	mov	eax, DWORD PTR tv791[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv791[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0BC@CIAMHNHO@xml?5version?$DN?$CC1?40?$CC?$AA@
	push	OFFSET ??_C@_09BHKMDEKD@Dream?9out?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 472  : 		XMLTest( "Dream-out", true, doc2.FirstChild()->NextSibling()->ToUnknown() ? true : false );

	lea	ecx, DWORD PTR _doc2$204[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	ecx, eax
	call	?NextSibling@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::NextSibling
	mov	DWORD PTR tv811[ebp], eax
	mov	eax, DWORD PTR tv811[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv811[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN51@main
	mov	BYTE PTR tv816[ebp], 1
	jmp	SHORT $LN52@main
$LN51@main:
	mov	BYTE PTR tv816[ebp], 0
$LN52@main:
	push	1
	movzx	ecx, BYTE PTR tv816[ebp]
	push	ecx
	push	1
	push	OFFSET ??_C@_09BHKMDEKD@Dream?9out?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 473  : 		XMLTest( "Dream-out", "DOCTYPE PLAY SYSTEM \"play.dtd\"",
; 474  : 						  doc2.FirstChild()->NextSibling()->ToUnknown()->Value() );

	lea	ecx, DWORD PTR _doc2$204[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	ecx, eax
	call	?NextSibling@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::NextSibling
	mov	DWORD PTR tv834[ebp], eax
	push	0
	push	1
	mov	esi, esp
	mov	eax, DWORD PTR tv834[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv834[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0BP@MHJCDDEA@DOCTYPE?5PLAY?5SYSTEM?5?$CCplay?4dtd?$CC?$AA@
	push	OFFSET ??_C@_09BHKMDEKD@Dream?9out?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 475  : 		XMLTest( "Dream-out", "And Robin shall restore amends.",
; 476  : 						  doc2.LastChild()->LastChild()->LastChild()->LastChild()->LastChildElement()->GetText() );

	push	0
	push	1
	push	0
	lea	ecx, DWORD PTR _doc2$204[ebp]
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	mov	ecx, eax
	call	?LastChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::LastChildElement
	mov	ecx, eax
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_0CA@JHNCBPHK@And?5Robin?5shall?5restore?5amends?4?$AA@
	push	OFFSET ??_C@_09BHKMDEKD@Dream?9out?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 477  : 
; 478  : 		//gNewTotal = gNew - newStart;
; 479  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _doc2$204[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$205[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 480  : 
; 481  : 
; 482  : 	{
; 483  : 		const char* error =	"<?xml version=\"1.0\" standalone=\"no\" ?>\n"
; 484  : 							"<passages count=\"006\" formatversion=\"20020620\">\n"
; 485  : 							"    <wrong error>\n"
; 486  : 							"</passages>";

	mov	DWORD PTR _error$203[ebp], OFFSET ??_C@_0HF@CCALMFNO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@

; 487  : 
; 488  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$202[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$202[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH

; 489  : 		doc.Parse( error );

	push	-1
	mov	eax, DWORD PTR _error$203[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$202[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 490  : 		XMLTest( "Bad XML", doc.ErrorID(), XML_ERROR_PARSING_ATTRIBUTE );

	push	1
	push	8
	lea	ecx, DWORD PTR _doc$202[ebp]
	call	?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ ; tinyxml2::XMLDocument::ErrorID
	push	eax
	push	OFFSET ??_C@_07KEDHPJMI@Bad?5XML?$AA@
	call	??$XMLTest@W4XMLError@tinyxml2@@@@YA_NPBDW4XMLError@tinyxml2@@1_N@Z ; XMLTest<enum tinyxml2::XMLError>
	add	esp, 16					; 00000010H

; 491  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$202[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 492  : 
; 493  : 	{
; 494  : 		const char* str = "<doc attr0='1' attr1='2.0' attr2='foo' />";

	mov	DWORD PTR _str$201[ebp], OFFSET ??_C@_0CK@POKHOPMA@?$DMdoc?5attr0?$DN?81?8?5attr1?$DN?82?40?8?5attr2@

; 495  : 
; 496  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$200[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$200[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH

; 497  : 		doc.Parse( str );

	push	-1
	mov	eax, DWORD PTR _str$201[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$200[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 498  : 
; 499  : 		XMLElement* ele = doc.FirstChildElement();

	push	0
	lea	ecx, DWORD PTR _doc$200[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _ele$199[ebp], eax

; 500  : 
; 501  : 		int iVal, result;
; 502  : 		double dVal;
; 503  : 
; 504  : 		result = ele->QueryDoubleAttribute( "attr0", &dVal );

	lea	eax, DWORD PTR _dVal$196[ebp]
	push	eax
	push	OFFSET ??_C@_05ONKJHJKK@attr0?$AA@
	mov	ecx, DWORD PTR _ele$199[ebp]
	call	?QueryDoubleAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAN@Z ; tinyxml2::XMLElement::QueryDoubleAttribute
	mov	DWORD PTR _result$197[ebp], eax

; 505  : 		XMLTest( "Query attribute: int as double", result, (int)XML_NO_ERROR );

	push	1
	push	0
	mov	eax, DWORD PTR _result$197[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@JOIIDGJG@Query?5attribute?3?5int?5as?5double?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 506  : 		XMLTest( "Query attribute: int as double", (int)dVal, 1 );

	push	1
	push	1
	cvttsd2si eax, QWORD PTR _dVal$196[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@JOIIDGJG@Query?5attribute?3?5int?5as?5double?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 507  : 		result = ele->QueryDoubleAttribute( "attr1", &dVal );

	lea	eax, DWORD PTR _dVal$196[ebp]
	push	eax
	push	OFFSET ??_C@_05PELCEIOL@attr1?$AA@
	mov	ecx, DWORD PTR _ele$199[ebp]
	call	?QueryDoubleAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAN@Z ; tinyxml2::XMLElement::QueryDoubleAttribute
	mov	DWORD PTR _result$197[ebp], eax

; 508  : 		XMLTest( "Query attribute: double as double", result, (int)XML_NO_ERROR );

	push	1
	push	0
	mov	eax, DWORD PTR _result$197[ebp]
	push	eax
	push	OFFSET ??_C@_0CC@GOMFGJFF@Query?5attribute?3?5double?5as?5doubl@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 509  : 		XMLTest( "Query attribute: double as double", (int)dVal, 2 );

	push	1
	push	2
	cvttsd2si eax, QWORD PTR _dVal$196[ebp]
	push	eax
	push	OFFSET ??_C@_0CC@GOMFGJFF@Query?5attribute?3?5double?5as?5doubl@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 510  : 		result = ele->QueryIntAttribute( "attr1", &iVal );

	lea	eax, DWORD PTR _iVal$198[ebp]
	push	eax
	push	OFFSET ??_C@_05PELCEIOL@attr1?$AA@
	mov	ecx, DWORD PTR _ele$199[ebp]
	call	?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
	mov	DWORD PTR _result$197[ebp], eax

; 511  : 		XMLTest( "Query attribute: double as int", result, (int)XML_NO_ERROR );

	push	1
	push	0
	mov	eax, DWORD PTR _result$197[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@JKMCBOMB@Query?5attribute?3?5double?5as?5int?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 512  : 		XMLTest( "Query attribute: double as int", iVal, 2 );

	push	1
	push	2
	mov	eax, DWORD PTR _iVal$198[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@JKMCBOMB@Query?5attribute?3?5double?5as?5int?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 513  : 		result = ele->QueryIntAttribute( "attr2", &iVal );

	lea	eax, DWORD PTR _iVal$198[ebp]
	push	eax
	push	OFFSET ??_C@_05NPJPBLCI@attr2?$AA@
	mov	ecx, DWORD PTR _ele$199[ebp]
	call	?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
	mov	DWORD PTR _result$197[ebp], eax

; 514  : 		XMLTest( "Query attribute: not a number", result, (int)XML_WRONG_ATTRIBUTE_TYPE );

	push	1
	push	2
	mov	eax, DWORD PTR _result$197[ebp]
	push	eax
	push	OFFSET ??_C@_0BO@FGLKNEME@Query?5attribute?3?5not?5a?5number?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 515  : 		result = ele->QueryIntAttribute( "bar", &iVal );

	lea	eax, DWORD PTR _iVal$198[ebp]
	push	eax
	push	OFFSET ??_C@_03BLIIKFAI@bar?$AA@
	mov	ecx, DWORD PTR _ele$199[ebp]
	call	?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
	mov	DWORD PTR _result$197[ebp], eax

; 516  : 		XMLTest( "Query attribute: does not exist", result, (int)XML_NO_ATTRIBUTE );

	push	1
	push	1
	mov	eax, DWORD PTR _result$197[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@BNGCPADO@Query?5attribute?3?5does?5not?5exist?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 517  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$200[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 518  : 
; 519  : 	{
; 520  : 		const char* str = "<doc/>";

	mov	DWORD PTR _str$195[ebp], OFFSET ??_C@_06NOBAAADK@?$DMdoc?1?$DO?$AA@

; 521  : 
; 522  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$194[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$194[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH

; 523  : 		doc.Parse( str );

	push	-1
	mov	eax, DWORD PTR _str$195[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$194[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 524  : 
; 525  : 		XMLElement* ele = doc.FirstChildElement();

	push	0
	lea	ecx, DWORD PTR _doc$194[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _ele$193[ebp], eax

; 526  : 
; 527  : 		int iVal, iVal2;
; 528  : 		double dVal, dVal2;
; 529  : 
; 530  : 		ele->SetAttribute( "str", "strValue" );

	push	OFFSET ??_C@_08MGPAICNM@strValue?$AA@
	push	OFFSET ??_C@_03OJMAPEGJ@str?$AA@
	mov	ecx, DWORD PTR _ele$193[ebp]
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBD0@Z ; tinyxml2::XMLElement::SetAttribute

; 531  : 		ele->SetAttribute( "int", 1 );

	push	1
	push	OFFSET ??_C@_03JBIPMCLC@int?$AA@
	mov	ecx, DWORD PTR _ele$193[ebp]
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDH@Z ; tinyxml2::XMLElement::SetAttribute

; 532  : 		ele->SetAttribute( "double", -1.0 );

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_06BNJCAIGJ@double?$AA@
	mov	ecx, DWORD PTR _ele$193[ebp]
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDN@Z ; tinyxml2::XMLElement::SetAttribute

; 533  : 
; 534  : 		const char* cStr = ele->Attribute( "str" );

	push	0
	push	OFFSET ??_C@_03OJMAPEGJ@str?$AA@
	mov	ecx, DWORD PTR _ele$193[ebp]
	call	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
	mov	DWORD PTR _cStr$188[ebp], eax

; 535  : 		ele->QueryIntAttribute( "int", &iVal );

	lea	eax, DWORD PTR _iVal$192[ebp]
	push	eax
	push	OFFSET ??_C@_03JBIPMCLC@int?$AA@
	mov	ecx, DWORD PTR _ele$193[ebp]
	call	?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute

; 536  : 		ele->QueryDoubleAttribute( "double", &dVal );

	lea	eax, DWORD PTR _dVal$190[ebp]
	push	eax
	push	OFFSET ??_C@_06BNJCAIGJ@double?$AA@
	mov	ecx, DWORD PTR _ele$193[ebp]
	call	?QueryDoubleAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAN@Z ; tinyxml2::XMLElement::QueryDoubleAttribute

; 537  : 
; 538  : 		ele->QueryAttribute( "int", &iVal2 );

	lea	eax, DWORD PTR _iVal2$191[ebp]
	push	eax
	push	OFFSET ??_C@_03JBIPMCLC@int?$AA@
	mov	ecx, DWORD PTR _ele$193[ebp]
	call	?QueryAttribute@XMLElement@tinyxml2@@QBEHPBDPAH@Z ; tinyxml2::XMLElement::QueryAttribute

; 539  : 		ele->QueryAttribute( "double", &dVal2 );

	lea	eax, DWORD PTR _dVal2$189[ebp]
	push	eax
	push	OFFSET ??_C@_06BNJCAIGJ@double?$AA@
	mov	ecx, DWORD PTR _ele$193[ebp]
	call	?QueryAttribute@XMLElement@tinyxml2@@QBEHPBDPAN@Z ; tinyxml2::XMLElement::QueryAttribute

; 540  : 
; 541  : 		XMLTest( "Attribute match test", ele->Attribute( "str", "strValue" ), "strValue" );

	push	0
	push	1
	push	OFFSET ??_C@_08MGPAICNM@strValue?$AA@
	push	OFFSET ??_C@_08MGPAICNM@strValue?$AA@
	push	OFFSET ??_C@_03OJMAPEGJ@str?$AA@
	mov	ecx, DWORD PTR _ele$193[ebp]
	call	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
	push	eax
	push	OFFSET ??_C@_0BF@JMEHCLBP@Attribute?5match?5test?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 542  : 		XMLTest( "Attribute round trip. c-string.", "strValue", cStr );

	push	0
	push	1
	mov	eax, DWORD PTR _cStr$188[ebp]
	push	eax
	push	OFFSET ??_C@_08MGPAICNM@strValue?$AA@
	push	OFFSET ??_C@_0CA@EAIDEFBO@Attribute?5round?5trip?4?5c?9string?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 543  : 		XMLTest( "Attribute round trip. int.", 1, iVal );

	push	1
	mov	eax, DWORD PTR _iVal$192[ebp]
	push	eax
	push	1
	push	OFFSET ??_C@_0BL@CEGNIGNP@Attribute?5round?5trip?4?5int?4?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 544  : 		XMLTest( "Attribute round trip. double.", -1, (int)dVal );

	push	1
	cvttsd2si eax, QWORD PTR _dVal$190[ebp]
	push	eax
	push	-1
	push	OFFSET ??_C@_0BO@IHMJGANF@Attribute?5round?5trip?4?5double?4?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 545  : 		XMLTest( "Alternate query", true, iVal == iVal2 );

	mov	eax, DWORD PTR _iVal$192[ebp]
	cmp	eax, DWORD PTR _iVal2$191[ebp]
	jne	SHORT $LN53@main
	mov	BYTE PTR tv1020[ebp], 1
	jmp	SHORT $LN54@main
$LN53@main:
	mov	BYTE PTR tv1020[ebp], 0
$LN54@main:
	push	1
	movzx	ecx, BYTE PTR tv1020[ebp]
	push	ecx
	push	1
	push	OFFSET ??_C@_0BA@COLFGKDP@Alternate?5query?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 546  : 		XMLTest( "Alternate query", true, dVal == dVal2 );

	movsd	xmm0, QWORD PTR _dVal$190[ebp]
	ucomisd	xmm0, QWORD PTR _dVal2$189[ebp]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN55@main
	mov	BYTE PTR tv1026[ebp], 1
	jmp	SHORT $LN56@main
$LN55@main:
	mov	BYTE PTR tv1026[ebp], 0
$LN56@main:
	push	1
	movzx	eax, BYTE PTR tv1026[ebp]
	push	eax
	push	1
	push	OFFSET ??_C@_0BA@COLFGKDP@Alternate?5query?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 547  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$194[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 548  : 
; 549  : 	{
; 550  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$187[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$187[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 13		; 0000000dH

; 551  : 		doc.LoadFile( "resources/utf8test.xml" );

	push	OFFSET ??_C@_0BH@GIFCGBMN@resources?1utf8test?4xml?$AA@
	lea	ecx, DWORD PTR _doc$187[ebp]
	call	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile

; 552  : 
; 553  : 		// Get the attribute "value" from the "Russian" element and check it.
; 554  : 		XMLElement* element = doc.FirstChildElement( "document" )->FirstChildElement( "Russian" );

	push	OFFSET ??_C@_07PEAPJBGG@Russian?$AA@
	push	OFFSET ??_C@_08JEEDKNPB@document?$AA@
	lea	ecx, DWORD PTR _doc$187[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _element$186[ebp], eax

; 555  : 		const unsigned char correctValue[] = {	0xd1U, 0x86U, 0xd0U, 0xb5U, 0xd0U, 0xbdU, 0xd0U, 0xbdU,

	mov	BYTE PTR _correctValue$185[ebp], 209	; 000000d1H
	mov	BYTE PTR _correctValue$185[ebp+1], 134	; 00000086H
	mov	BYTE PTR _correctValue$185[ebp+2], 208	; 000000d0H
	mov	BYTE PTR _correctValue$185[ebp+3], 181	; 000000b5H
	mov	BYTE PTR _correctValue$185[ebp+4], 208	; 000000d0H
	mov	BYTE PTR _correctValue$185[ebp+5], 189	; 000000bdH
	mov	BYTE PTR _correctValue$185[ebp+6], 208	; 000000d0H
	mov	BYTE PTR _correctValue$185[ebp+7], 189	; 000000bdH

; 556  : 												0xd0U, 0xbeU, 0xd1U, 0x81U, 0xd1U, 0x82U, 0xd1U, 0x8cU, 0 };

	mov	BYTE PTR _correctValue$185[ebp+8], 208	; 000000d0H
	mov	BYTE PTR _correctValue$185[ebp+9], 190	; 000000beH
	mov	BYTE PTR _correctValue$185[ebp+10], 209	; 000000d1H
	mov	BYTE PTR _correctValue$185[ebp+11], 129	; 00000081H
	mov	BYTE PTR _correctValue$185[ebp+12], 209	; 000000d1H
	mov	BYTE PTR _correctValue$185[ebp+13], 130	; 00000082H
	mov	BYTE PTR _correctValue$185[ebp+14], 209	; 000000d1H
	mov	BYTE PTR _correctValue$185[ebp+15], 140	; 0000008cH
	mov	BYTE PTR _correctValue$185[ebp+16], 0

; 557  : 
; 558  : 		XMLTest( "UTF-8: Russian value.", (const char*)correctValue, element->Attribute( "value" ) );

	push	0
	push	1
	push	0
	push	OFFSET ??_C@_05MFEJDJP@value?$AA@
	mov	ecx, DWORD PTR _element$186[ebp]
	call	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
	push	eax
	lea	eax, DWORD PTR _correctValue$185[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@GHEBNCCN@UTF?98?3?5Russian?5value?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 559  : 
; 560  : 		const unsigned char russianElementName[] = {	0xd0U, 0xa0U, 0xd1U, 0x83U,

	mov	BYTE PTR _russianElementName$184[ebp], 208 ; 000000d0H
	mov	BYTE PTR _russianElementName$184[ebp+1], 160 ; 000000a0H
	mov	BYTE PTR _russianElementName$184[ebp+2], 209 ; 000000d1H
	mov	BYTE PTR _russianElementName$184[ebp+3], 131 ; 00000083H

; 561  : 														0xd1U, 0x81U, 0xd1U, 0x81U,

	mov	BYTE PTR _russianElementName$184[ebp+4], 209 ; 000000d1H
	mov	BYTE PTR _russianElementName$184[ebp+5], 129 ; 00000081H
	mov	BYTE PTR _russianElementName$184[ebp+6], 209 ; 000000d1H
	mov	BYTE PTR _russianElementName$184[ebp+7], 129 ; 00000081H

; 562  : 														0xd0U, 0xbaU, 0xd0U, 0xb8U,

	mov	BYTE PTR _russianElementName$184[ebp+8], 208 ; 000000d0H
	mov	BYTE PTR _russianElementName$184[ebp+9], 186 ; 000000baH
	mov	BYTE PTR _russianElementName$184[ebp+10], 208 ; 000000d0H
	mov	BYTE PTR _russianElementName$184[ebp+11], 184 ; 000000b8H

; 563  : 														0xd0U, 0xb9U, 0 };

	mov	BYTE PTR _russianElementName$184[ebp+12], 208 ; 000000d0H
	mov	BYTE PTR _russianElementName$184[ebp+13], 185 ; 000000b9H
	mov	BYTE PTR _russianElementName$184[ebp+14], 0

; 564  : 		const char russianText[] = "<\xD0\xB8\xD0\xBC\xD0\xB5\xD0\xB5\xD1\x82>";

	mov	eax, DWORD PTR ??_C@_0N@KGCIHMHM@?$DM?P?$LI?P?$LM?P?$LF?P?$LF?Q?$IC?$DO?$AA@
	mov	DWORD PTR _russianText$183[ebp], eax
	mov	ecx, DWORD PTR ??_C@_0N@KGCIHMHM@?$DM?P?$LI?P?$LM?P?$LF?P?$LF?Q?$IC?$DO?$AA@+4
	mov	DWORD PTR _russianText$183[ebp+4], ecx
	mov	edx, DWORD PTR ??_C@_0N@KGCIHMHM@?$DM?P?$LI?P?$LM?P?$LF?P?$LF?Q?$IC?$DO?$AA@+8
	mov	DWORD PTR _russianText$183[ebp+8], edx
	mov	al, BYTE PTR ??_C@_0N@KGCIHMHM@?$DM?P?$LI?P?$LM?P?$LF?P?$LF?Q?$IC?$DO?$AA@+12
	mov	BYTE PTR _russianText$183[ebp+12], al

; 565  : 
; 566  : 		XMLText* text = doc.FirstChildElement( "document" )->FirstChildElement( (const char*) russianElementName )->FirstChild()->ToText();

	lea	eax, DWORD PTR _russianElementName$184[ebp]
	push	eax
	push	OFFSET ??_C@_08JEEDKNPB@document?$AA@
	lea	ecx, DWORD PTR _doc$187[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR tv1151[ebp], eax
	mov	ecx, DWORD PTR tv1151[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv1151[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _text$182[ebp], eax

; 567  : 		XMLTest( "UTF-8: Browsing russian element name.",
; 568  : 				 russianText,
; 569  : 				 text->Value() );

	push	0
	push	1
	mov	ecx, DWORD PTR _text$182[ebp]
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	lea	eax, DWORD PTR _russianText$183[ebp]
	push	eax
	push	OFFSET ??_C@_0CG@KNPGPFFM@UTF?98?3?5Browsing?5russian?5element?5@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 570  : 
; 571  : 		// Now try for a round trip.
; 572  : 		doc.SaveFile( "resources/out/utf8testout.xml" );

	push	0
	push	OFFSET ??_C@_0BO@NLDFJKGL@resources?1out?1utf8testout?4xml?$AA@
	lea	ecx, DWORD PTR _doc$187[ebp]
	call	?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD_N@Z ; tinyxml2::XMLDocument::SaveFile

; 573  : 
; 574  : 		// Check the round trip.
; 575  : 		int okay = 0;

	mov	DWORD PTR _okay$181[ebp], 0

; 576  : 
; 577  : 		FILE* saved  = fopen( "resources/out/utf8testout.xml", "r" );

	mov	esi, esp
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	OFFSET ??_C@_0BO@NLDFJKGL@resources?1out?1utf8testout?4xml?$AA@
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _saved$180[ebp], eax

; 578  : 		FILE* verify = fopen( "resources/utf8testverify.xml", "r" );

	mov	esi, esp
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	OFFSET ??_C@_0BN@JICGPLMD@resources?1utf8testverify?4xml?$AA@
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _verify$179[ebp], eax

; 579  : 
; 580  : 		if ( saved && verify )

	cmp	DWORD PTR _saved$180[ebp], 0
	je	$LN23@main
	cmp	DWORD PTR _verify$179[ebp], 0
	je	$LN23@main

; 581  : 		{
; 582  : 			okay = 1;

	mov	DWORD PTR _okay$181[ebp], 1
$LN24@main:

; 583  : 			char verifyBuf[256];
; 584  : 			while ( fgets( verifyBuf, 256, verify ) )

	mov	esi, esp
	mov	eax, DWORD PTR _verify$179[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _verifyBuf$178[ebp]
	push	ecx
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN23@main

; 585  : 			{
; 586  : 				char savedBuf[256];
; 587  : 				fgets( savedBuf, 256, saved );

	mov	esi, esp
	mov	eax, DWORD PTR _saved$180[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _savedBuf$177[ebp]
	push	ecx
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 588  : 				NullLineEndings( verifyBuf );

	lea	eax, DWORD PTR _verifyBuf$178[ebp]
	push	eax
	call	?NullLineEndings@@YAXPAD@Z		; NullLineEndings
	add	esp, 4

; 589  : 				NullLineEndings( savedBuf );

	lea	eax, DWORD PTR _savedBuf$177[ebp]
	push	eax
	call	?NullLineEndings@@YAXPAD@Z		; NullLineEndings
	add	esp, 4

; 590  : 
; 591  : 				if ( strcmp( verifyBuf, savedBuf ) )

	lea	eax, DWORD PTR _savedBuf$177[ebp]
	push	eax
	lea	ecx, DWORD PTR _verifyBuf$178[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN22@main

; 592  : 				{
; 593  : 					printf( "verify:%s<\n", verifyBuf );

	mov	esi, esp
	lea	eax, DWORD PTR _verifyBuf$178[ebp]
	push	eax
	push	OFFSET ??_C@_0M@BACAGND@verify?3?$CFs?$DM?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 594  : 					printf( "saved :%s<\n", savedBuf );

	mov	esi, esp
	lea	eax, DWORD PTR _savedBuf$177[ebp]
	push	eax
	push	OFFSET ??_C@_0M@DCMPPKDG@saved?5?3?$CFs?$DM?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 595  : 					okay = 0;

	mov	DWORD PTR _okay$181[ebp], 0

; 596  : 					break;

	jmp	SHORT $LN23@main
$LN22@main:

; 597  : 				}
; 598  : 			}

	jmp	$LN24@main
$LN23@main:

; 599  : 		}
; 600  : 		if ( saved )

	cmp	DWORD PTR _saved$180[ebp], 0
	je	SHORT $LN21@main

; 601  : 			fclose( saved );

	mov	esi, esp
	mov	eax, DWORD PTR _saved$180[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@main:

; 602  : 		if ( verify )

	cmp	DWORD PTR _verify$179[ebp], 0
	je	SHORT $LN20@main

; 603  : 			fclose( verify );

	mov	esi, esp
	mov	eax, DWORD PTR _verify$179[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@main:

; 604  : 		XMLTest( "UTF-8: Verified multi-language round trip.", 1, okay );

	push	1
	mov	eax, DWORD PTR _okay$181[ebp]
	push	eax
	push	1
	push	OFFSET ??_C@_0CL@FPCEDNNA@UTF?98?3?5Verified?5multi?9language?5r@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 605  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$187[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 606  : 
; 607  : 	// --------GetText()-----------
; 608  : 	{
; 609  : 		const char* str = "<foo>This is  text</foo>";

	mov	DWORD PTR _str$176[ebp], OFFSET ??_C@_0BJ@JKDBNMPF@?$DMfoo?$DOThis?5is?5?5text?$DM?1foo?$DO?$AA@

; 610  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$175[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$175[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH

; 611  : 		doc.Parse( str );

	push	-1
	mov	eax, DWORD PTR _str$176[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$175[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 612  : 		const XMLElement* element = doc.RootElement();

	lea	ecx, DWORD PTR _doc$175[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	DWORD PTR _element$174[ebp], eax

; 613  : 
; 614  : 		XMLTest( "GetText() normal use.", "This is  text", element->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _element$174[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_0O@NCGAPDDE@This?5is?5?5text?$AA@
	push	OFFSET ??_C@_0BG@DKADDCJD@GetText?$CI?$CJ?5normal?5use?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 615  : 
; 616  : 		str = "<foo><b>This is text</b></foo>";

	mov	DWORD PTR _str$176[ebp], OFFSET ??_C@_0BP@NPPGHFHL@?$DMfoo?$DO?$DMb?$DOThis?5is?5text?$DM?1b?$DO?$DM?1foo?$DO?$AA@

; 617  : 		doc.Parse( str );

	push	-1
	mov	eax, DWORD PTR _str$176[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$175[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 618  : 		element = doc.RootElement();

	lea	ecx, DWORD PTR _doc$175[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	DWORD PTR _element$174[ebp], eax

; 619  : 
; 620  : 		XMLTest( "GetText() contained element.", element->GetText() == 0, true );

	mov	ecx, DWORD PTR _element$174[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	test	eax, eax
	jne	SHORT $LN57@main
	mov	BYTE PTR tv1297[ebp], 1
	jmp	SHORT $LN58@main
$LN57@main:
	mov	BYTE PTR tv1297[ebp], 0
$LN58@main:
	push	1
	push	1
	movzx	eax, BYTE PTR tv1297[ebp]
	push	eax
	push	OFFSET ??_C@_0BN@JFKHBMCC@GetText?$CI?$CJ?5contained?5element?4?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 621  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$175[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 622  : 
; 623  : 
; 624  : 	// --------SetText()-----------
; 625  : 	{
; 626  : 		const char* str = "<foo></foo>";

	mov	DWORD PTR _str$173[ebp], OFFSET ??_C@_0M@PAFJMELE@?$DMfoo?$DO?$DM?1foo?$DO?$AA@

; 627  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$172[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$172[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH

; 628  : 		doc.Parse( str );

	push	-1
	mov	eax, DWORD PTR _str$173[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$172[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 629  : 		XMLElement* element = doc.RootElement();

	lea	ecx, DWORD PTR _doc$172[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	DWORD PTR _element$171[ebp], eax

; 630  : 
; 631  : 		element->SetText("darkness.");

	push	OFFSET ??_C@_09KPLDGONG@darkness?4?$AA@
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?SetText@XMLElement@tinyxml2@@QAEXPBD@Z	; tinyxml2::XMLElement::SetText

; 632  : 		XMLTest( "SetText() normal use (open/close).", "darkness.", element->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_09KPLDGONG@darkness?4?$AA@
	push	OFFSET ??_C@_0CD@LIEFECGF@SetText?$CI?$CJ?5normal?5use?5?$CIopen?1close@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 633  : 
; 634  : 		element->SetText("blue flame.");

	push	OFFSET ??_C@_0M@FKDKOAKD@blue?5flame?4?$AA@
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?SetText@XMLElement@tinyxml2@@QAEXPBD@Z	; tinyxml2::XMLElement::SetText

; 635  : 		XMLTest( "SetText() replace.", "blue flame.", element->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_0M@FKDKOAKD@blue?5flame?4?$AA@
	push	OFFSET ??_C@_0BD@LDKHKAAP@SetText?$CI?$CJ?5replace?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 636  : 
; 637  : 		str = "<foo/>";

	mov	DWORD PTR _str$173[ebp], OFFSET ??_C@_06NJAOBOIJ@?$DMfoo?1?$DO?$AA@

; 638  : 		doc.Parse( str );

	push	-1
	mov	eax, DWORD PTR _str$173[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$172[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 639  : 		element = doc.RootElement();

	lea	ecx, DWORD PTR _doc$172[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	DWORD PTR _element$171[ebp], eax

; 640  : 
; 641  : 		element->SetText("The driver");

	push	OFFSET ??_C@_0L@MBNNDOHD@The?5driver?$AA@
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?SetText@XMLElement@tinyxml2@@QAEXPBD@Z	; tinyxml2::XMLElement::SetText

; 642  : 		XMLTest( "SetText() normal use. (self-closing)", "The driver", element->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_0L@MBNNDOHD@The?5driver?$AA@
	push	OFFSET ??_C@_0CF@LAEHCCKM@SetText?$CI?$CJ?5normal?5use?4?5?$CIself?9clos@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 643  : 
; 644  : 		element->SetText("<b>horses</b>");

	push	OFFSET ??_C@_0O@MIIPHOPP@?$DMb?$DOhorses?$DM?1b?$DO?$AA@
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?SetText@XMLElement@tinyxml2@@QAEXPBD@Z	; tinyxml2::XMLElement::SetText

; 645  : 		XMLTest( "SetText() replace with tag-like text.", "<b>horses</b>", element->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_0O@MIIPHOPP@?$DMb?$DOhorses?$DM?1b?$DO?$AA@
	push	OFFSET ??_C@_0CG@CJOLAFFM@SetText?$CI?$CJ?5replace?5with?5tag?9like?5@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 646  : 		//doc.Print();
; 647  : 
; 648  : 		str = "<foo><bar>Text in nested element</bar></foo>";

	mov	DWORD PTR _str$173[ebp], OFFSET ??_C@_0CN@IPKKIGIC@?$DMfoo?$DO?$DMbar?$DOText?5in?5nested?5element@

; 649  : 		doc.Parse( str );

	push	-1
	mov	eax, DWORD PTR _str$173[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$172[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 650  : 		element = doc.RootElement();

	lea	ecx, DWORD PTR _doc$172[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	DWORD PTR _element$171[ebp], eax

; 651  : 		
; 652  : 		element->SetText("wolves");

	push	OFFSET ??_C@_06OKGGDFFJ@wolves?$AA@
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?SetText@XMLElement@tinyxml2@@QAEXPBD@Z	; tinyxml2::XMLElement::SetText

; 653  : 		XMLTest( "SetText() prefix to nested non-text children.", "wolves", element->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_06OKGGDFFJ@wolves?$AA@
	push	OFFSET ??_C@_0CO@IMDKLJDD@SetText?$CI?$CJ?5prefix?5to?5nested?5non?9t@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 654  : 
; 655  : 		str = "<foo/>";

	mov	DWORD PTR _str$173[ebp], OFFSET ??_C@_06NJAOBOIJ@?$DMfoo?1?$DO?$AA@

; 656  : 		doc.Parse( str );

	push	-1
	mov	eax, DWORD PTR _str$173[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$172[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 657  : 		element = doc.RootElement();

	lea	ecx, DWORD PTR _doc$172[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	DWORD PTR _element$171[ebp], eax

; 658  : 		
; 659  : 		element->SetText( "str" );

	push	OFFSET ??_C@_03OJMAPEGJ@str?$AA@
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?SetText@XMLElement@tinyxml2@@QAEXPBD@Z	; tinyxml2::XMLElement::SetText

; 660  : 		XMLTest( "SetText types", "str", element->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_03OJMAPEGJ@str?$AA@
	push	OFFSET ??_C@_0O@FHILFDBK@SetText?5types?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 661  : 
; 662  : 		element->SetText( 1 );

	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?SetText@XMLElement@tinyxml2@@QAEXH@Z	; tinyxml2::XMLElement::SetText

; 663  : 		XMLTest( "SetText types", "1", element->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	push	OFFSET ??_C@_0O@FHILFDBK@SetText?5types?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 664  : 
; 665  : 		element->SetText( 1U );

	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?SetText@XMLElement@tinyxml2@@QAEXI@Z	; tinyxml2::XMLElement::SetText

; 666  : 		XMLTest( "SetText types", "1", element->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	push	OFFSET ??_C@_0O@FHILFDBK@SetText?5types?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 667  : 
; 668  : 		element->SetText( true );

	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?SetText@XMLElement@tinyxml2@@QAEX_N@Z	; tinyxml2::XMLElement::SetText

; 669  : 		XMLTest( "SetText types", "1", element->GetText() ); // TODO: should be 'true'?

	push	0
	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	push	OFFSET ??_C@_0O@FHILFDBK@SetText?5types?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 670  : 
; 671  : 		element->SetText( 1.5f );

	push	ecx
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?SetText@XMLElement@tinyxml2@@QAEXM@Z	; tinyxml2::XMLElement::SetText

; 672  : 		XMLTest( "SetText types", "1.5", element->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_03GMOBGHL@1?45?$AA@
	push	OFFSET ??_C@_0O@FHILFDBK@SetText?5types?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 673  : 
; 674  : 		element->SetText( 1.5 );

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@3ff8000000000000
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?SetText@XMLElement@tinyxml2@@QAEXN@Z	; tinyxml2::XMLElement::SetText

; 675  : 		XMLTest( "SetText types", "1.5", element->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _element$171[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_03GMOBGHL@1?45?$AA@
	push	OFFSET ??_C@_0O@FHILFDBK@SetText?5types?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 676  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$172[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 677  : 
; 678  : 
; 679  : 	// ---------- CDATA ---------------
; 680  : 	{
; 681  : 		const char* str =	"<xmlElement>"
; 682  : 								"<![CDATA["
; 683  : 									"I am > the rules!\n"
; 684  : 									"...since I make symbolic puns"
; 685  : 								"]]>"
; 686  : 							"</xmlElement>";

	mov	DWORD PTR _str$170[ebp], OFFSET ??_C@_0FF@LNIBCIJH@?$DMxmlElement?$DO?$DM?$CB?$FLCDATA?$FLI?5am?5?$DO?5the?5@

; 687  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$169[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$169[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 16		; 00000010H

; 688  : 		doc.Parse( str );

	push	-1
	mov	eax, DWORD PTR _str$170[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$169[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 689  : 		doc.Print();

	push	0
	lea	ecx, DWORD PTR _doc$169[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 690  : 
; 691  : 		XMLTest( "CDATA parse.", doc.FirstChildElement()->FirstChild()->Value(),
; 692  : 								 "I am > the rules!\n...since I make symbolic puns",
; 693  : 								 false );

	push	0
	push	0
	push	OFFSET ??_C@_0DA@BKAEPNI@I?5am?5?$DO?5the?5rules?$CB?6?4?4?4since?5I?5mak@
	push	0
	lea	ecx, DWORD PTR _doc$169[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	ecx, eax
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0N@MEEMONHG@CDATA?5parse?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 694  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$169[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 695  : 
; 696  : 	// ----------- CDATA -------------
; 697  : 	{
; 698  : 		const char* str =	"<xmlElement>"
; 699  : 								"<![CDATA["
; 700  : 									"<b>I am > the rules!</b>\n"
; 701  : 									"...since I make symbolic puns"
; 702  : 								"]]>"
; 703  : 							"</xmlElement>";

	mov	DWORD PTR _str$168[ebp], OFFSET ??_C@_0FM@NJMMKIOK@?$DMxmlElement?$DO?$DM?$CB?$FLCDATA?$FL?$DMb?$DOI?5am?5?$DO?5t@

; 704  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$167[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$167[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 17		; 00000011H

; 705  : 		doc.Parse( str );

	push	-1
	mov	eax, DWORD PTR _str$168[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$167[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 706  : 		doc.Print();

	push	0
	lea	ecx, DWORD PTR _doc$167[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 707  : 
; 708  : 		XMLTest( "CDATA parse. [ tixml1:1480107 ]", doc.FirstChildElement()->FirstChild()->Value(),
; 709  : 								 "<b>I am > the rules!</b>\n...since I make symbolic puns",
; 710  : 								 false );

	push	0
	push	0
	push	OFFSET ??_C@_0DH@HHLGMDOJ@?$DMb?$DOI?5am?5?$DO?5the?5rules?$CB?$DM?1b?$DO?6?4?4?4sinc@
	push	0
	lea	ecx, DWORD PTR _doc$167[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	ecx, eax
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0CA@GMICGAMB@CDATA?5parse?4?5?$FL?5tixml1?31480107?5?$FN?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 711  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$167[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 712  : 
; 713  : 	// InsertAfterChild causes crash.
; 714  : 	{
; 715  : 		// InsertBeforeChild and InsertAfterChild causes crash.
; 716  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$166[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$166[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 18		; 00000012H

; 717  : 		XMLElement* parent = doc.NewElement( "Parent" );

	push	OFFSET ??_C@_06EBOPLIP@Parent?$AA@
	lea	ecx, DWORD PTR _doc$166[ebp]
	call	?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLDocument::NewElement
	mov	DWORD PTR _parent$165[ebp], eax

; 718  : 		doc.InsertFirstChild( parent );

	mov	eax, DWORD PTR _parent$165[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$166[ebp]
	call	?InsertFirstChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertFirstChild

; 719  : 
; 720  : 		XMLElement* childText0 = doc.NewElement( "childText0" );

	push	OFFSET ??_C@_0L@HDPLNMID@childText0?$AA@
	lea	ecx, DWORD PTR _doc$166[ebp]
	call	?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLDocument::NewElement
	mov	DWORD PTR _childText0$164[ebp], eax

; 721  : 		XMLElement* childText1 = doc.NewElement( "childText1" );

	push	OFFSET ??_C@_0L@GKOAONMC@childText1?$AA@
	lea	ecx, DWORD PTR _doc$166[ebp]
	call	?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLDocument::NewElement
	mov	DWORD PTR _childText1$163[ebp], eax

; 722  : 
; 723  : 		XMLNode* childNode0 = parent->InsertEndChild( childText0 );

	mov	eax, DWORD PTR _childText0$164[ebp]
	push	eax
	mov	ecx, DWORD PTR _parent$165[ebp]
	call	?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertEndChild
	mov	DWORD PTR _childNode0$162[ebp], eax

; 724  : 		XMLNode* childNode1 = parent->InsertAfterChild( childNode0, childText1 );

	mov	eax, DWORD PTR _childText1$163[ebp]
	push	eax
	mov	ecx, DWORD PTR _childNode0$162[ebp]
	push	ecx
	mov	ecx, DWORD PTR _parent$165[ebp]
	call	?InsertAfterChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@0@Z ; tinyxml2::XMLNode::InsertAfterChild
	mov	DWORD PTR _childNode1$161[ebp], eax

; 725  : 
; 726  : 		XMLTest( "Test InsertAfterChild on empty node. ", ( childNode1 == parent->LastChild() ), true );

	mov	ecx, DWORD PTR _parent$165[ebp]
	call	?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::LastChild
	cmp	DWORD PTR _childNode1$161[ebp], eax
	jne	SHORT $LN59@main
	mov	BYTE PTR tv1580[ebp], 1
	jmp	SHORT $LN60@main
$LN59@main:
	mov	BYTE PTR tv1580[ebp], 0
$LN60@main:
	push	1
	push	1
	movzx	eax, BYTE PTR tv1580[ebp]
	push	eax
	push	OFFSET ??_C@_0CG@MLGHGPCL@Test?5InsertAfterChild?5on?5empty?5n@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 727  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$166[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 728  : 
; 729  : 	{
; 730  : 		// Entities not being written correctly.
; 731  : 		// From Lynn Allen
; 732  : 
; 733  : 		const char* passages =
; 734  : 			"<?xml version=\"1.0\" standalone=\"no\" ?>"
; 735  : 			"<passages count=\"006\" formatversion=\"20020620\">"
; 736  : 				"<psg context=\"Line 5 has &quot;quotation marks&quot; and &apos;apostrophe marks&apos;."
; 737  : 				" It also has &lt;, &gt;, and &amp;, as well as a fake copyright &#xA9;.\"> </psg>"
; 738  : 			"</passages>";

	mov	DWORD PTR _passages$160[ebp], OFFSET ??_C@_0BAH@KKKMGCGH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@

; 739  : 
; 740  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$159[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$159[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 19		; 00000013H

; 741  : 		doc.Parse( passages );

	push	-1
	mov	eax, DWORD PTR _passages$160[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$159[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 742  : 		XMLElement* psg = doc.RootElement()->FirstChildElement();

	push	0
	lea	ecx, DWORD PTR _doc$159[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _psg$158[ebp], eax

; 743  : 		const char* context = psg->Attribute( "context" );

	push	0
	push	OFFSET ??_C@_07JKKCBBMM@context?$AA@
	mov	ecx, DWORD PTR _psg$158[ebp]
	call	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
	mov	DWORD PTR _context$157[ebp], eax

; 744  : 		const char* expected = "Line 5 has \"quotation marks\" and 'apostrophe marks'. It also has <, >, and &, as well as a fake copyright \xC2\xA9.";

	mov	DWORD PTR _expected$156[ebp], OFFSET ??_C@_0GO@IJIKLCCP@Line?55?5has?5?$CCquotation?5marks?$CC?5and@

; 745  : 
; 746  : 		XMLTest( "Entity transformation: read. ", expected, context, true );

	push	0
	push	1
	mov	eax, DWORD PTR _context$157[ebp]
	push	eax
	mov	ecx, DWORD PTR _expected$156[ebp]
	push	ecx
	push	OFFSET ??_C@_0BO@MCPEDDIC@Entity?5transformation?3?5read?4?5?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 747  : 
; 748  : 		FILE* textfile = fopen( "resources/out/textfile.txt", "w" );

	mov	esi, esp
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	OFFSET ??_C@_0BL@JOEHEAJB@resources?1out?1textfile?4txt?$AA@
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _textfile$155[ebp], eax

; 749  : 		if ( textfile )

	cmp	DWORD PTR _textfile$155[ebp], 0
	je	SHORT $LN19@main

; 750  : 		{
; 751  : 			XMLPrinter streamer( textfile );

	push	1
	lea	ecx, DWORD PTR _streamer$154[ebp]
	call	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
	push	0
	push	0
	mov	eax, DWORD PTR _textfile$155[ebp]
	push	eax
	lea	ecx, DWORD PTR _streamer$154[ebp]
	call	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H

; 752  : 			psg->Accept( &streamer );

	mov	esi, esp
	lea	eax, DWORD PTR _streamer$154[ebp]
	push	eax
	mov	ecx, DWORD PTR _psg$158[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _psg$158[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 753  : 			fclose( textfile );

	mov	esi, esp
	mov	eax, DWORD PTR _textfile$155[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 754  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR _streamer$154[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
$LN19@main:

; 755  : 
; 756  :         textfile = fopen( "resources/out/textfile.txt", "r" );

	mov	esi, esp
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	OFFSET ??_C@_0BL@JOEHEAJB@resources?1out?1textfile?4txt?$AA@
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _textfile$155[ebp], eax

; 757  : 		TIXMLASSERT( textfile );

	cmp	DWORD PTR _textfile$155[ebp], 0
	jne	SHORT $LN18@main
	int	3
$LN18@main:

; 758  : 		if ( textfile )

	cmp	DWORD PTR _textfile$155[ebp], 0
	je	SHORT $LN17@main

; 759  : 		{
; 760  : 			char buf[ 1024 ];
; 761  : 			fgets( buf, 1024, textfile );

	mov	esi, esp
	mov	eax, DWORD PTR _textfile$155[ebp]
	push	eax
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _buf$153[ebp]
	push	ecx
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 762  : 			XMLTest( "Entity transformation: write. ",
; 763  : 					 "<psg context=\"Line 5 has &quot;quotation marks&quot; and &apos;apostrophe marks&apos;."
; 764  : 					 " It also has &lt;, &gt;, and &amp;, as well as a fake copyright \xC2\xA9.\"/>\n",
; 765  : 					 buf, false );

	push	0
	push	0
	lea	eax, DWORD PTR _buf$153[ebp]
	push	eax
	push	OFFSET ??_C@_0JO@DGGKOKBD@?$DMpsg?5context?$DN?$CCLine?55?5has?5?$CGquot?$DLq@
	push	OFFSET ??_C@_0BP@LGFBHJGA@Entity?5transformation?3?5write?4?5?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 766  : 			fclose( textfile );

	mov	esi, esp
	mov	eax, DWORD PTR _textfile$155[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@main:

; 767  : 		}
; 768  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$159[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 769  : 
; 770  : 	{
; 771  : 		// Suppress entities.
; 772  : 		const char* passages =
; 773  : 			"<?xml version=\"1.0\" standalone=\"no\" ?>"
; 774  : 			"<passages count=\"006\" formatversion=\"20020620\">"
; 775  : 				"<psg context=\"Line 5 has &quot;quotation marks&quot; and &apos;apostrophe marks&apos;.\">Crazy &ttk;</psg>"
; 776  : 			"</passages>";

	mov	DWORD PTR _passages$152[ebp], OFFSET ??_C@_0MK@GGAOCKLE@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5standalone?$DN?$CC@

; 777  : 
; 778  : 		XMLDocument doc( false );

	push	1
	lea	ecx, DWORD PTR _doc$151[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	0
	lea	ecx, DWORD PTR _doc$151[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 21		; 00000015H

; 779  : 		doc.Parse( passages );

	push	-1
	mov	eax, DWORD PTR _passages$152[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$151[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 780  : 
; 781  : 		XMLTest( "No entity parsing.", doc.FirstChildElement()->FirstChildElement()->Attribute( "context" ),
; 782  : 				 "Line 5 has &quot;quotation marks&quot; and &apos;apostrophe marks&apos;." );

	push	0
	push	1
	push	OFFSET ??_C@_0EJ@ELOFOBAI@Line?55?5has?5?$CGquot?$DLquotation?5marks@
	push	0
	push	OFFSET ??_C@_07JKKCBBMM@context?$AA@
	push	0
	push	0
	lea	ecx, DWORD PTR _doc$151[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
	push	eax
	push	OFFSET ??_C@_0BD@KLPMDKDG@No?5entity?5parsing?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 783  : 		XMLTest( "No entity parsing.", doc.FirstChildElement()->FirstChildElement()->FirstChild()->Value(),
; 784  : 				 "Crazy &ttk;" );

	push	0
	push	1
	push	OFFSET ??_C@_0M@DFJHOJG@Crazy?5?$CGttk?$DL?$AA@
	push	0
	push	0
	lea	ecx, DWORD PTR _doc$151[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	ecx, eax
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0BD@KLPMDKDG@No?5entity?5parsing?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 785  : 		doc.Print();

	push	0
	lea	ecx, DWORD PTR _doc$151[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 786  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$151[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 787  : 
; 788  : 	{
; 789  : 		const char* test = "<?xml version='1.0'?><a.elem xmi.version='2.0'/>";

	mov	DWORD PTR _test$150[ebp], OFFSET ??_C@_0DB@OHKCIJPO@?$DM?$DPxml?5version?$DN?81?40?8?$DP?$DO?$DMa?4elem?5xmi@

; 790  : 
; 791  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$149[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$149[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 22		; 00000016H

; 792  : 		doc.Parse( test );

	push	-1
	mov	eax, DWORD PTR _test$150[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$149[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 793  : 		XMLTest( "dot in names", doc.Error(), false );

	push	1
	push	0
	lea	ecx, DWORD PTR _doc$149[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	OFFSET ??_C@_0N@IKFDFIHA@dot?5in?5names?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 794  : 		XMLTest( "dot in names", doc.FirstChildElement()->Name(), "a.elem" );

	push	0
	push	1
	push	OFFSET ??_C@_06MMJJKPDB@a?4elem?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$149[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?Name@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::Name
	push	eax
	push	OFFSET ??_C@_0N@IKFDFIHA@dot?5in?5names?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 795  : 		XMLTest( "dot in names", doc.FirstChildElement()->Attribute( "xmi.version" ), "2.0" );

	push	0
	push	1
	push	OFFSET ??_C@_03GJAMENNA@2?40?$AA@
	push	0
	push	OFFSET ??_C@_0M@OPBPNMBD@xmi?4version?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$149[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
	push	eax
	push	OFFSET ??_C@_0N@IKFDFIHA@dot?5in?5names?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 796  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$149[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 797  : 
; 798  : 	{
; 799  : 		const char* test = "<element><Name>1.1 Start easy ignore fin thickness&#xA;</Name></element>";

	mov	DWORD PTR _test$148[ebp], OFFSET ??_C@_0EJ@CPIHGBID@?$DMelement?$DO?$DMName?$DO1?41?5Start?5easy?5ig@

; 800  : 
; 801  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$147[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$147[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 23		; 00000017H

; 802  : 		doc.Parse( test );

	push	-1
	mov	eax, DWORD PTR _test$148[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$147[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 803  : 
; 804  : 		XMLText* text = doc.FirstChildElement()->FirstChildElement()->FirstChild()->ToText();

	push	0
	push	0
	lea	ecx, DWORD PTR _doc$147[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR tv1820[ebp], eax
	mov	eax, DWORD PTR tv1820[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv1820[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _text$146[ebp], eax

; 805  : 		XMLTest( "Entity with one digit.",
; 806  : 				 text->Value(), "1.1 Start easy ignore fin thickness\n",
; 807  : 				 false );

	push	0
	push	0
	push	OFFSET ??_C@_0CF@PDDEMPDP@1?41?5Start?5easy?5ignore?5fin?5thickn@
	mov	ecx, DWORD PTR _text$146[ebp]
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0BH@NGKLNOLB@Entity?5with?5one?5digit?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 808  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$147[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 809  : 
; 810  : 	{
; 811  : 		// DOCTYPE not preserved (950171)
; 812  : 		//
; 813  : 		const char* doctype =
; 814  : 			"<?xml version=\"1.0\" ?>"
; 815  : 			"<!DOCTYPE PLAY SYSTEM 'play.dtd'>"
; 816  : 			"<!ELEMENT title (#PCDATA)>"
; 817  : 			"<!ELEMENT books (title,authors)>"
; 818  : 			"<element />";

	mov	DWORD PTR _doctype$145[ebp], OFFSET ??_C@_0HN@OKHKIEOC@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DM?$CBDOCTYPE?5@

; 819  : 
; 820  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$144[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$144[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 24		; 00000018H

; 821  : 		doc.Parse( doctype );

	push	-1
	mov	eax, DWORD PTR _doctype$145[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$144[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 822  : 		doc.SaveFile( "resources/out/test7.xml" );

	push	0
	push	OFFSET ??_C@_0BI@NHIHPBDM@resources?1out?1test7?4xml?$AA@
	lea	ecx, DWORD PTR _doc$144[ebp]
	call	?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD_N@Z ; tinyxml2::XMLDocument::SaveFile

; 823  : 		doc.DeleteChild( doc.RootElement() );

	lea	ecx, DWORD PTR _doc$144[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	push	eax
	lea	ecx, DWORD PTR _doc$144[ebp]
	call	?DeleteChild@XMLNode@tinyxml2@@QAEXPAV12@@Z ; tinyxml2::XMLNode::DeleteChild

; 824  : 		doc.LoadFile( "resources/out/test7.xml" );

	push	OFFSET ??_C@_0BI@NHIHPBDM@resources?1out?1test7?4xml?$AA@
	lea	ecx, DWORD PTR _doc$144[ebp]
	call	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile

; 825  : 		doc.Print();

	push	0
	lea	ecx, DWORD PTR _doc$144[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 826  : 
; 827  : 		const XMLUnknown* decl = doc.FirstChild()->NextSibling()->ToUnknown();

	lea	ecx, DWORD PTR _doc$144[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	ecx, eax
	call	?NextSibling@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::NextSibling
	mov	DWORD PTR tv1873[ebp], eax
	mov	eax, DWORD PTR tv1873[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv1873[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _decl$143[ebp], eax

; 828  : 		XMLTest( "Correct value of unknown.", "DOCTYPE PLAY SYSTEM 'play.dtd'", decl->Value() );

	push	0
	push	1
	mov	ecx, DWORD PTR _decl$143[ebp]
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0BP@MLLCGLEH@DOCTYPE?5PLAY?5SYSTEM?5?8play?4dtd?8?$AA@
	push	OFFSET ??_C@_0BK@ECFILBLF@Correct?5value?5of?5unknown?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 829  : 
; 830  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$144[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 831  : 
; 832  : 	{
; 833  : 		// Comments do not stream out correctly.
; 834  : 		const char* doctype =
; 835  : 			"<!-- Somewhat<evil> -->";

	mov	DWORD PTR _doctype$142[ebp], OFFSET ??_C@_0BI@HBLJONDE@?$DM?$CB?9?9?5Somewhat?$DMevil?$DO?5?9?9?$DO?$AA@

; 836  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$141[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$141[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 25		; 00000019H

; 837  : 		doc.Parse( doctype );

	push	-1
	mov	eax, DWORD PTR _doctype$142[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$141[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 838  : 
; 839  : 		XMLComment* comment = doc.FirstChild()->ToComment();

	lea	ecx, DWORD PTR _doc$141[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR tv1905[ebp], eax
	mov	eax, DWORD PTR tv1905[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv1905[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _comment$140[ebp], eax

; 840  : 
; 841  : 		XMLTest( "Comment formatting.", " Somewhat<evil> ", comment->Value() );

	push	0
	push	1
	mov	ecx, DWORD PTR _comment$140[ebp]
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0BB@GGPEMION@?5Somewhat?$DMevil?$DO?5?$AA@
	push	OFFSET ??_C@_0BE@FNPJMOFI@Comment?5formatting?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 842  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$141[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 843  : 	{
; 844  : 		// Double attributes
; 845  : 		const char* doctype = "<element attr='red' attr='blue' />";

	mov	DWORD PTR _doctype$139[ebp], OFFSET ??_C@_0CD@DKALFOFA@?$DMelement?5attr?$DN?8red?8?5attr?$DN?8blue?8?5@

; 846  : 
; 847  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$138[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$138[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 26		; 0000001aH

; 848  : 		doc.Parse( doctype );

	push	-1
	mov	eax, DWORD PTR _doctype$139[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$138[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 849  : 
; 850  : 		XMLTest( "Parsing repeated attributes.", XML_ERROR_PARSING_ATTRIBUTE, doc.ErrorID() );	// is an  error to tinyxml (didn't use to be, but caused issues)

	push	1
	lea	ecx, DWORD PTR _doc$138[ebp]
	call	?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ ; tinyxml2::XMLDocument::ErrorID
	push	eax
	push	8
	push	OFFSET ??_C@_0BN@DGCJJCB@Parsing?5repeated?5attributes?4?$AA@
	call	??$XMLTest@W4XMLError@tinyxml2@@@@YA_NPBDW4XMLError@tinyxml2@@1_N@Z ; XMLTest<enum tinyxml2::XMLError>
	add	esp, 16					; 00000010H

; 851  : 		doc.PrintError();

	lea	ecx, DWORD PTR _doc$138[ebp]
	call	?PrintError@XMLDocument@tinyxml2@@QBEXXZ ; tinyxml2::XMLDocument::PrintError

; 852  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$138[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 853  : 
; 854  : 	{
; 855  : 		// Embedded null in stream.
; 856  : 		const char* doctype = "<element att\0r='red' attr='blue' />";

	mov	DWORD PTR _doctype$137[ebp], OFFSET ??_C@_0CE@NFMLDHKO@?$DMelement?5att?$AAr?$DN?8red?8?5attr?$DN?8blue?8@

; 857  : 
; 858  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$136[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$136[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 27		; 0000001bH

; 859  : 		doc.Parse( doctype );

	push	-1
	mov	eax, DWORD PTR _doctype$137[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$136[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 860  : 		XMLTest( "Embedded null throws error.", true, doc.Error() );

	push	1
	lea	ecx, DWORD PTR _doc$136[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	1
	push	OFFSET ??_C@_0BM@JADGBJGB@Embedded?5null?5throws?5error?4?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 861  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$136[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 862  : 
; 863  : 	{
; 864  : 		// Empty documents should return TIXML_XML_ERROR_PARSING_EMPTY, bug 1070717
; 865  : 		const char* str = "    ";

	mov	DWORD PTR _str$135[ebp], OFFSET ??_C@_04PFOHOKJK@?5?5?5?5?$AA@

; 866  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$134[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$134[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 28		; 0000001cH

; 867  : 		doc.Parse( str );

	push	-1
	mov	eax, DWORD PTR _str$135[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$134[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 868  : 		XMLTest( "Empty document error", XML_ERROR_EMPTY_DOCUMENT, doc.ErrorID() );

	push	1
	lea	ecx, DWORD PTR _doc$134[ebp]
	call	?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ ; tinyxml2::XMLDocument::ErrorID
	push	eax
	push	15					; 0000000fH
	push	OFFSET ??_C@_0BF@HAJDLEGD@Empty?5document?5error?$AA@
	call	??$XMLTest@W4XMLError@tinyxml2@@@@YA_NPBDW4XMLError@tinyxml2@@1_N@Z ; XMLTest<enum tinyxml2::XMLError>
	add	esp, 16					; 00000010H

; 869  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$134[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 870  : 
; 871  : 	{
; 872  : 		// Low entities
; 873  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$133[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$133[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 29		; 0000001dH

; 874  : 		doc.Parse( "<test>&#x0e;</test>" );

	push	-1
	push	OFFSET ??_C@_0BE@LNMJCBEP@?$DMtest?$DO?$CG?$CDx0e?$DL?$DM?1test?$DO?$AA@
	lea	ecx, DWORD PTR _doc$133[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 875  : 		const char result[] = { 0x0e, 0 };

	mov	BYTE PTR _result$132[ebp], 14		; 0000000eH
	mov	BYTE PTR _result$132[ebp+1], 0

; 876  : 		XMLTest( "Low entities.", doc.FirstChildElement()->GetText(), result );

	push	0
	push	1
	lea	eax, DWORD PTR _result$132[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _doc$133[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_0O@HKEHIJIC@Low?5entities?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 877  : 		doc.Print();

	push	0
	lea	ecx, DWORD PTR _doc$133[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 878  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$133[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 879  : 
; 880  : 	{
; 881  : 		// Attribute values with trailing quotes not handled correctly
; 882  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$131[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$131[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 30		; 0000001eH

; 883  : 		doc.Parse( "<foo attribute=bar\" />" );

	push	-1
	push	OFFSET ??_C@_0BH@JIACOPCA@?$DMfoo?5attribute?$DNbar?$CC?5?1?$DO?$AA@
	lea	ecx, DWORD PTR _doc$131[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 884  : 		XMLTest( "Throw error with bad end quotes.", doc.Error(), true );

	push	1
	push	1
	lea	ecx, DWORD PTR _doc$131[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	OFFSET ??_C@_0CB@MBJEHLNC@Throw?5error?5with?5bad?5end?5quotes?4@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 885  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$131[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 886  : 
; 887  : 	{
; 888  : 		// [ 1663758 ] Failure to report error on bad XML
; 889  : 		XMLDocument xml;

	push	1
	lea	ecx, DWORD PTR _xml$130[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _xml$130[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 31		; 0000001fH

; 890  : 		xml.Parse("<x>");

	push	-1
	push	OFFSET ??_C@_03HPGBEFGP@?$DMx?$DO?$AA@
	lea	ecx, DWORD PTR _xml$130[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 891  : 		XMLTest("Missing end tag at end of input", xml.Error(), true);

	push	1
	push	1
	lea	ecx, DWORD PTR _xml$130[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	OFFSET ??_C@_0CA@BHPABECP@Missing?5end?5tag?5at?5end?5of?5input?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 892  : 		xml.Parse("<x> ");

	push	-1
	push	OFFSET ??_C@_04EIPGDJCO@?$DMx?$DO?5?$AA@
	lea	ecx, DWORD PTR _xml$130[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 893  : 		XMLTest("Missing end tag with trailing whitespace", xml.Error(), true);

	push	1
	push	1
	lea	ecx, DWORD PTR _xml$130[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	OFFSET ??_C@_0CJ@HGJJNIAN@Missing?5end?5tag?5with?5trailing?5wh@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 894  : 		xml.Parse("<x></y>");

	push	-1
	push	OFFSET ??_C@_07CPCNDMHI@?$DMx?$DO?$DM?1y?$DO?$AA@
	lea	ecx, DWORD PTR _xml$130[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 895  : 		XMLTest("Mismatched tags", xml.ErrorID(), XML_ERROR_MISMATCHED_ELEMENT);

	push	1
	push	16					; 00000010H
	lea	ecx, DWORD PTR _xml$130[ebp]
	call	?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ ; tinyxml2::XMLDocument::ErrorID
	push	eax
	push	OFFSET ??_C@_0BA@NJJGABAE@Mismatched?5tags?$AA@
	call	??$XMLTest@W4XMLError@tinyxml2@@@@YA_NPBDW4XMLError@tinyxml2@@1_N@Z ; XMLTest<enum tinyxml2::XMLError>
	add	esp, 16					; 00000010H

; 896  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _xml$130[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 897  : 
; 898  : 
; 899  : 	{
; 900  : 		// [ 1475201 ] TinyXML parses entities in comments
; 901  : 		XMLDocument xml;

	push	1
	lea	ecx, DWORD PTR _xml$129[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _xml$129[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 32		; 00000020H

; 902  : 		xml.Parse("<!-- declarations for <head> & <body> -->"
; 903  : 				  "<!-- far &amp; away -->" );

	push	-1
	push	OFFSET ??_C@_0EB@ODKPIILK@?$DM?$CB?9?9?5declarations?5for?5?$DMhead?$DO?5?$CG?5?$DM@
	lea	ecx, DWORD PTR _xml$129[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 904  : 
; 905  : 		XMLNode* e0 = xml.FirstChild();

	lea	ecx, DWORD PTR _xml$129[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR _e0$128[ebp], eax

; 906  : 		XMLNode* e1 = e0->NextSibling();

	mov	ecx, DWORD PTR _e0$128[ebp]
	call	?NextSibling@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::NextSibling
	mov	DWORD PTR _e1$127[ebp], eax

; 907  : 		XMLComment* c0 = e0->ToComment();

	mov	eax, DWORD PTR _e0$128[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _e0$128[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c0$126[ebp], eax

; 908  : 		XMLComment* c1 = e1->ToComment();

	mov	eax, DWORD PTR _e1$127[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _e1$127[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _c1$125[ebp], eax

; 909  : 
; 910  : 		XMLTest( "Comments ignore entities.", " declarations for <head> & <body> ", c0->Value(), true );

	push	0
	push	1
	mov	ecx, DWORD PTR _c0$126[ebp]
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0CD@CODJEHCK@?5declarations?5for?5?$DMhead?$DO?5?$CG?5?$DMbody@
	push	OFFSET ??_C@_0BK@MALMLOLG@Comments?5ignore?5entities?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 911  : 		XMLTest( "Comments ignore entities.", " far &amp; away ", c1->Value(), true );

	push	0
	push	1
	mov	ecx, DWORD PTR _c1$125[ebp]
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0BB@FBELHALE@?5far?5?$CGamp?$DL?5away?5?$AA@
	push	OFFSET ??_C@_0BK@MALMLOLG@Comments?5ignore?5entities?4?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 912  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _xml$129[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 913  : 
; 914  : 	{
; 915  : 		XMLDocument xml;

	push	1
	lea	ecx, DWORD PTR _xml$124[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _xml$124[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 33		; 00000021H

; 916  : 		xml.Parse( "<Parent>"
; 917  : 						"<child1 att=''/>"
; 918  : 						"<!-- With this comment, child2 will not be parsed! -->"
; 919  : 						"<child2 att=''/>"
; 920  : 					"</Parent>" );

	push	-1
	push	OFFSET ??_C@_0GI@CMIIHJDO@?$DMParent?$DO?$DMchild1?5att?$DN?8?8?1?$DO?$DM?$CB?9?9?5Wit@
	lea	ecx, DWORD PTR _xml$124[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 921  : 		xml.Print();

	push	0
	lea	ecx, DWORD PTR _xml$124[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 922  : 
; 923  : 		int count = 0;

	mov	DWORD PTR _count$123[ebp], 0

; 924  : 
; 925  : 		for( XMLNode* ele = xml.FirstChildElement( "Parent" )->FirstChild();

	push	OFFSET ??_C@_06EBOPLIP@Parent?$AA@
	lea	ecx, DWORD PTR _xml$124[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR _ele$122[ebp], eax

; 926  : 			 ele;

	jmp	SHORT $LN16@main
$LN15@main:

; 927  : 			 ele = ele->NextSibling() )

	mov	ecx, DWORD PTR _ele$122[ebp]
	call	?NextSibling@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::NextSibling
	mov	DWORD PTR _ele$122[ebp], eax
$LN16@main:
	cmp	DWORD PTR _ele$122[ebp], 0
	je	SHORT $LN14@main

; 928  : 		{
; 929  : 			++count;

	mov	eax, DWORD PTR _count$123[ebp]
	add	eax, 1
	mov	DWORD PTR _count$123[ebp], eax

; 930  : 		}

	jmp	SHORT $LN15@main
$LN14@main:

; 931  : 
; 932  : 		XMLTest( "Comments iterate correctly.", 3, count );

	push	1
	mov	eax, DWORD PTR _count$123[ebp]
	push	eax
	push	3
	push	OFFSET ??_C@_0BM@JIIHAJNF@Comments?5iterate?5correctly?4?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 933  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _xml$124[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 934  : 
; 935  : 	{
; 936  : 		// trying to repro ]1874301]. If it doesn't go into an infinite loop, all is well.
; 937  : 		unsigned char buf[] = "<?xml version=\"1.0\" encoding=\"utf-8\"?><feed><![CDATA[Test XMLblablablalblbl";

	mov	ecx, 19					; 00000013H
	mov	esi, OFFSET ??_C@_0EM@CJMHAPLB@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCut@
	lea	edi, DWORD PTR _buf$121[ebp]
	rep movsd

; 938  : 		buf[60] = 239;

	mov	eax, 1
	imul	eax, 60					; 0000003cH
	mov	BYTE PTR _buf$121[ebp+eax], 239		; 000000efH

; 939  : 		buf[61] = 0;

	mov	eax, 1
	imul	eax, 61					; 0000003dH
	mov	DWORD PTR $T14[ebp], eax
	cmp	DWORD PTR $T14[ebp], 76			; 0000004cH
	jae	SHORT $LN61@main
	jmp	SHORT $LN62@main
$LN61@main:
	call	___report_rangecheckfailure
$LN62@main:
	mov	ecx, DWORD PTR $T14[ebp]
	mov	BYTE PTR _buf$121[ebp+ecx], 0

; 940  : 
; 941  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$120[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$120[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 34		; 00000022H

; 942  : 		doc.Parse( (const char*)buf);

	push	-1
	lea	eax, DWORD PTR _buf$121[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$120[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 943  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$120[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 944  : 
; 945  : 
; 946  : 	{
; 947  : 		// bug 1827248 Error while parsing a little bit malformed file
; 948  : 		// Actually not malformed - should work.
; 949  : 		XMLDocument xml;

	push	1
	lea	ecx, DWORD PTR _xml$119[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _xml$119[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 35		; 00000023H

; 950  : 		xml.Parse( "<attributelist> </attributelist >" );

	push	-1
	push	OFFSET ??_C@_0CC@GGDECDLF@?$DMattributelist?$DO?5?$DM?1attributelist?5@
	lea	ecx, DWORD PTR _xml$119[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 951  : 		XMLTest( "Handle end tag whitespace", false, xml.Error() );

	push	1
	lea	ecx, DWORD PTR _xml$119[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	0
	push	OFFSET ??_C@_0BK@HKANBGJD@Handle?5end?5tag?5whitespace?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 952  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _xml$119[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 953  : 
; 954  : 	{
; 955  : 		// This one must not result in an infinite loop
; 956  : 		XMLDocument xml;

	push	1
	lea	ecx, DWORD PTR _xml$118[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _xml$118[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 36		; 00000024H

; 957  : 		xml.Parse( "<infinite>loop" );

	push	-1
	push	OFFSET ??_C@_0P@DICPCCME@?$DMinfinite?$DOloop?$AA@
	lea	ecx, DWORD PTR _xml$118[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 958  : 		XMLTest( "Infinite loop test.", true, true );

	push	1
	push	1
	push	1
	push	OFFSET ??_C@_0BE@JGNLGJDE@Infinite?5loop?5test?4?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 959  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _xml$118[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 960  : #endif
; 961  : 	{
; 962  : 		const char* pub = "<?xml version='1.0'?> <element><sub/></element> <!--comment--> <!DOCTYPE>";

	mov	DWORD PTR _pub$117[ebp], OFFSET ??_C@_0EK@ONBFBPNK@?$DM?$DPxml?5version?$DN?81?40?8?$DP?$DO?5?$DMelement?$DO?$DM@

; 963  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$116[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$116[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 37		; 00000025H

; 964  : 		doc.Parse( pub );

	push	-1
	mov	eax, DWORD PTR _pub$117[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$116[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 965  : 
; 966  : 		XMLDocument clone;

	push	1
	lea	ecx, DWORD PTR _clone$115[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _clone$115[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H

; 967  : 		for( const XMLNode* node=doc.FirstChild(); node; node=node->NextSibling() ) {

	lea	ecx, DWORD PTR _doc$116[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR _node$114[ebp], eax
	jmp	SHORT $LN13@main
$LN12@main:
	mov	ecx, DWORD PTR _node$114[ebp]
	call	?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::NextSibling
	mov	DWORD PTR _node$114[ebp], eax
$LN13@main:
	cmp	DWORD PTR _node$114[ebp], 0
	je	SHORT $LN11@main

; 968  : 			XMLNode* copy = node->ShallowClone( &clone );

	mov	esi, esp
	lea	eax, DWORD PTR _clone$115[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$114[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _node$114[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _copy$113[ebp], eax

; 969  : 			clone.InsertEndChild( copy );

	mov	eax, DWORD PTR _copy$113[ebp]
	push	eax
	lea	ecx, DWORD PTR _clone$115[ebp]
	call	?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertEndChild

; 970  : 		}

	jmp	SHORT $LN12@main
$LN11@main:

; 971  : 
; 972  : 		clone.Print();

	push	0
	lea	ecx, DWORD PTR _clone$115[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 973  : 
; 974  : 		int count=0;

	mov	DWORD PTR _count$112[ebp], 0

; 975  : 		const XMLNode* a=clone.FirstChild();

	lea	ecx, DWORD PTR _clone$115[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR _a$111[ebp], eax

; 976  : 		const XMLNode* b=doc.FirstChild();

	lea	ecx, DWORD PTR _doc$116[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR _b$110[ebp], eax

; 977  : 		for( ; a && b; a=a->NextSibling(), b=b->NextSibling() ) {

	jmp	SHORT $LN10@main
$LN9@main:
	mov	ecx, DWORD PTR _a$111[ebp]
	call	?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::NextSibling
	mov	DWORD PTR _a$111[ebp], eax
	mov	ecx, DWORD PTR _b$110[ebp]
	call	?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::NextSibling
	mov	DWORD PTR _b$110[ebp], eax
$LN10@main:
	cmp	DWORD PTR _a$111[ebp], 0
	je	SHORT $LN8@main
	cmp	DWORD PTR _b$110[ebp], 0
	je	SHORT $LN8@main

; 978  : 			++count;

	mov	eax, DWORD PTR _count$112[ebp]
	add	eax, 1
	mov	DWORD PTR _count$112[ebp], eax

; 979  : 			XMLTest( "Clone and Equal", true, a->ShallowEqual( b ));

	push	1
	mov	esi, esp
	mov	eax, DWORD PTR _b$110[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$111[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _a$111[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	push	ecx
	push	1
	push	OFFSET ??_C@_0BA@HNALEGEM@Clone?5and?5Equal?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 980  : 		}

	jmp	SHORT $LN9@main
$LN8@main:

; 981  : 		XMLTest( "Clone and Equal", 4, count );

	push	1
	mov	eax, DWORD PTR _count$112[ebp]
	push	eax
	push	4
	push	OFFSET ??_C@_0BA@HNALEGEM@Clone?5and?5Equal?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 982  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	lea	ecx, DWORD PTR _clone$115[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$116[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 983  : 
; 984  : 	{
; 985  : 		// This shouldn't crash.
; 986  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$109[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$109[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 39		; 00000027H

; 987  : 		if(XML_NO_ERROR != doc.LoadFile( "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" ))

	push	OFFSET ??_C@_0DA@GFHCIFGH@aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@
	lea	ecx, DWORD PTR _doc$109[ebp]
	call	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile
	test	eax, eax
	je	SHORT $LN7@main

; 988  : 		{
; 989  : 			doc.PrintError();

	lea	ecx, DWORD PTR _doc$109[ebp]
	call	?PrintError@XMLDocument@tinyxml2@@QBEXXZ ; tinyxml2::XMLDocument::PrintError
$LN7@main:

; 990  : 		}
; 991  : 		XMLTest( "Error in snprinf handling.", true, doc.Error() );

	push	1
	lea	ecx, DWORD PTR _doc$109[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	1
	push	OFFSET ??_C@_0BL@FMIAMMDP@Error?5in?5snprinf?5handling?4?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 992  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$109[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 993  : 
; 994  : 	{
; 995  : 		// Attribute ordering.
; 996  : 		static const char* xml = "<element attrib1=\"1\" attrib2=\"2\" attrib3=\"3\" />";
; 997  : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$108[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$108[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 40		; 00000028H

; 998  : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR ?xml@?FC@??main@@9@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc$108[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 999  : 		XMLElement* ele = doc.FirstChildElement();

	push	0
	lea	ecx, DWORD PTR _doc$108[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _ele$107[ebp], eax

; 1000 : 
; 1001 : 		const XMLAttribute* a = ele->FirstAttribute();

	mov	ecx, DWORD PTR _ele$107[ebp]
	call	?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ ; tinyxml2::XMLElement::FirstAttribute
	mov	DWORD PTR _a$106[ebp], eax

; 1002 : 		XMLTest( "Attribute order", "1", a->Value() );

	push	0
	push	1
	mov	ecx, DWORD PTR _a$106[ebp]
	call	?Value@XMLAttribute@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLAttribute::Value
	push	eax
	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	push	OFFSET ??_C@_0BA@PMCCNHHC@Attribute?5order?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1003 : 		a = a->Next();

	mov	ecx, DWORD PTR _a$106[ebp]
	call	?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLAttribute::Next
	mov	DWORD PTR _a$106[ebp], eax

; 1004 : 		XMLTest( "Attribute order", "2", a->Value() );

	push	0
	push	1
	mov	ecx, DWORD PTR _a$106[ebp]
	call	?Value@XMLAttribute@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLAttribute::Value
	push	eax
	push	OFFSET ??_C@_01FDFGLJHB@2?$AA@
	push	OFFSET ??_C@_0BA@PMCCNHHC@Attribute?5order?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1005 : 		a = a->Next();

	mov	ecx, DWORD PTR _a$106[ebp]
	call	?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLAttribute::Next
	mov	DWORD PTR _a$106[ebp], eax

; 1006 : 		XMLTest( "Attribute order", "3", a->Value() );

	push	0
	push	1
	mov	ecx, DWORD PTR _a$106[ebp]
	call	?Value@XMLAttribute@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLAttribute::Value
	push	eax
	push	OFFSET ??_C@_01EKENIIDA@3?$AA@
	push	OFFSET ??_C@_0BA@PMCCNHHC@Attribute?5order?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1007 : 		XMLTest( "Attribute order", "attrib3", a->Name() );

	push	0
	push	1
	mov	ecx, DWORD PTR _a$106[ebp]
	call	?Name@XMLAttribute@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLAttribute::Name
	push	eax
	push	OFFSET ??_C@_07HEAMEKAE@attrib3?$AA@
	push	OFFSET ??_C@_0BA@PMCCNHHC@Attribute?5order?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1008 : 
; 1009 : 		ele->DeleteAttribute( "attrib2" );

	push	OFFSET ??_C@_07GNBHHLEF@attrib2?$AA@
	mov	ecx, DWORD PTR _ele$107[ebp]
	call	?DeleteAttribute@XMLElement@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLElement::DeleteAttribute

; 1010 : 		a = ele->FirstAttribute();

	mov	ecx, DWORD PTR _ele$107[ebp]
	call	?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ ; tinyxml2::XMLElement::FirstAttribute
	mov	DWORD PTR _a$106[ebp], eax

; 1011 : 		XMLTest( "Attribute order", "1", a->Value() );

	push	0
	push	1
	mov	ecx, DWORD PTR _a$106[ebp]
	call	?Value@XMLAttribute@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLAttribute::Value
	push	eax
	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	push	OFFSET ??_C@_0BA@PMCCNHHC@Attribute?5order?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1012 : 		a = a->Next();

	mov	ecx, DWORD PTR _a$106[ebp]
	call	?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLAttribute::Next
	mov	DWORD PTR _a$106[ebp], eax

; 1013 : 		XMLTest( "Attribute order", "3", a->Value() );

	push	0
	push	1
	mov	ecx, DWORD PTR _a$106[ebp]
	call	?Value@XMLAttribute@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLAttribute::Value
	push	eax
	push	OFFSET ??_C@_01EKENIIDA@3?$AA@
	push	OFFSET ??_C@_0BA@PMCCNHHC@Attribute?5order?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1014 : 
; 1015 : 		ele->DeleteAttribute( "attrib1" );

	push	OFFSET ??_C@_07EGDKCIIG@attrib1?$AA@
	mov	ecx, DWORD PTR _ele$107[ebp]
	call	?DeleteAttribute@XMLElement@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLElement::DeleteAttribute

; 1016 : 		ele->DeleteAttribute( "attrib3" );

	push	OFFSET ??_C@_07HEAMEKAE@attrib3?$AA@
	mov	ecx, DWORD PTR _ele$107[ebp]
	call	?DeleteAttribute@XMLElement@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLElement::DeleteAttribute

; 1017 : 		XMLTest( "Attribute order (empty)", false, ele->FirstAttribute() ? true : false );

	mov	ecx, DWORD PTR _ele$107[ebp]
	call	?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ ; tinyxml2::XMLElement::FirstAttribute
	test	eax, eax
	je	SHORT $LN63@main
	mov	BYTE PTR tv2441[ebp], 1
	jmp	SHORT $LN64@main
$LN63@main:
	mov	BYTE PTR tv2441[ebp], 0
$LN64@main:
	push	1
	movzx	eax, BYTE PTR tv2441[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_0BI@IANOCNPB@Attribute?5order?5?$CIempty?$CJ?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1018 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$108[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1019 : 
; 1020 : 	{
; 1021 : 		// Make sure an attribute with a space in it succeeds.
; 1022 : 		static const char* xml0 = "<element attribute1= \"Test Attribute\"/>";
; 1023 : 		static const char* xml1 = "<element attribute1 =\"Test Attribute\"/>";
; 1024 : 		static const char* xml2 = "<element attribute1 = \"Test Attribute\"/>";
; 1025 : 		XMLDocument doc0;

	push	1
	lea	ecx, DWORD PTR _doc0$105[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc0$105[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 41		; 00000029H

; 1026 : 		doc0.Parse( xml0 );

	push	-1
	mov	eax, DWORD PTR ?xml0@?FD@??main@@9@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc0$105[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1027 : 		XMLDocument doc1;

	push	1
	lea	ecx, DWORD PTR _doc1$104[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc1$104[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH

; 1028 : 		doc1.Parse( xml1 );

	push	-1
	mov	eax, DWORD PTR ?xml1@?FD@??main@@9@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc1$104[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1029 : 		XMLDocument doc2;

	push	1
	lea	ecx, DWORD PTR _doc2$103[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc2$103[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH

; 1030 : 		doc2.Parse( xml2 );

	push	-1
	mov	eax, DWORD PTR ?xml2@?FD@??main@@9@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc2$103[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1031 : 
; 1032 : 		XMLElement* ele = 0;

	mov	DWORD PTR _ele$102[ebp], 0

; 1033 : 		ele = doc0.FirstChildElement();

	push	0
	lea	ecx, DWORD PTR _doc0$105[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _ele$102[ebp], eax

; 1034 : 		XMLTest( "Attribute with space #1", "Test Attribute", ele->Attribute( "attribute1" ) );

	push	0
	push	1
	push	0
	push	OFFSET ??_C@_0L@LPIGNHFH@attribute1?$AA@
	mov	ecx, DWORD PTR _ele$102[ebp]
	call	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
	push	eax
	push	OFFSET ??_C@_0P@NGBJGMEL@Test?5Attribute?$AA@
	push	OFFSET ??_C@_0BI@PAJAIDMH@Attribute?5with?5space?5?$CD1?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1035 : 		ele = doc1.FirstChildElement();

	push	0
	lea	ecx, DWORD PTR _doc1$104[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _ele$102[ebp], eax

; 1036 : 		XMLTest( "Attribute with space #2", "Test Attribute", ele->Attribute( "attribute1" ) );

	push	0
	push	1
	push	0
	push	OFFSET ??_C@_0L@LPIGNHFH@attribute1?$AA@
	mov	ecx, DWORD PTR _ele$102[ebp]
	call	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
	push	eax
	push	OFFSET ??_C@_0P@NGBJGMEL@Test?5Attribute?$AA@
	push	OFFSET ??_C@_0BI@NLLNNAAE@Attribute?5with?5space?5?$CD2?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1037 : 		ele = doc2.FirstChildElement();

	push	0
	lea	ecx, DWORD PTR _doc2$103[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _ele$102[ebp], eax

; 1038 : 		XMLTest( "Attribute with space #3", "Test Attribute", ele->Attribute( "attribute1" ) );

	push	0
	push	1
	push	0
	push	OFFSET ??_C@_0L@LPIGNHFH@attribute1?$AA@
	mov	ecx, DWORD PTR _ele$102[ebp]
	call	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
	push	eax
	push	OFFSET ??_C@_0P@NGBJGMEL@Test?5Attribute?$AA@
	push	OFFSET ??_C@_0BI@MCKGOBEF@Attribute?5with?5space?5?$CD3?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1039 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	lea	ecx, DWORD PTR _doc2$103[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	lea	ecx, DWORD PTR _doc1$104[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc0$105[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1040 : 
; 1041 : 	{
; 1042 : 		// Make sure we don't go into an infinite loop.
; 1043 : 		static const char* xml = "<doc><element attribute='attribute'/><element attribute='attribute'/></doc>";
; 1044 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$101[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$101[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 44		; 0000002cH

; 1045 : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR ?xml@?FE@??main@@9@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc$101[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1046 : 		XMLElement* ele0 = doc.FirstChildElement()->FirstChildElement();

	push	0
	push	0
	lea	ecx, DWORD PTR _doc$101[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _ele0$100[ebp], eax

; 1047 : 		XMLElement* ele1 = ele0->NextSiblingElement();

	push	0
	mov	ecx, DWORD PTR _ele0$100[ebp]
	call	?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
	mov	DWORD PTR _ele1$99[ebp], eax

; 1048 : 		bool equal = ele0->ShallowEqual( ele1 );

	mov	esi, esp
	mov	eax, DWORD PTR _ele1$99[ebp]
	push	eax
	mov	ecx, DWORD PTR _ele0$100[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ele0$100[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _equal$98[ebp], al

; 1049 : 
; 1050 : 		XMLTest( "Infinite loop in shallow equal.", true, equal );

	push	1
	movzx	eax, BYTE PTR _equal$98[ebp]
	push	eax
	push	1
	push	OFFSET ??_C@_0CA@IBJIGOGD@Infinite?5loop?5in?5shallow?5equal?4?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1051 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$101[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1052 : 
; 1053 : 	// -------- Handles ------------
; 1054 : 	{
; 1055 : 		static const char* xml = "<element attrib='bar'><sub>Text</sub></element>";
; 1056 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$97[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$97[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 45		; 0000002dH

; 1057 : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR ?xml@?FF@??main@@9@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc$97[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1058 : 
; 1059 : 		XMLElement* ele = XMLHandle( doc ).FirstChildElement( "element" ).FirstChild().ToElement();

	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	push	OFFSET ??_C@_07HCLJNICE@element?$AA@
	lea	ecx, DWORD PTR $T16[ebp]
	push	ecx
	lea	edx, DWORD PTR _doc$97[ebp]
	push	edx
	lea	ecx, DWORD PTR $T15[ebp]
	call	??0XMLHandle@tinyxml2@@QAE@AAVXMLNode@1@@Z ; tinyxml2::XMLHandle::XMLHandle
	mov	ecx, eax
	call	?FirstChildElement@XMLHandle@tinyxml2@@QAE?AV12@PBD@Z ; tinyxml2::XMLHandle::FirstChildElement
	mov	ecx, eax
	call	?FirstChild@XMLHandle@tinyxml2@@QAE?AV12@XZ ; tinyxml2::XMLHandle::FirstChild
	mov	ecx, eax
	call	?ToElement@XMLHandle@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLHandle::ToElement
	mov	DWORD PTR _ele$96[ebp], eax

; 1060 : 		XMLTest( "Handle, success, mutable", ele->Value(), "sub" );

	push	0
	push	1
	push	OFFSET ??_C@_03KCMAIMAP@sub?$AA@
	mov	ecx, DWORD PTR _ele$96[ebp]
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0BJ@CPDDNNLH@Handle?0?5success?0?5mutable?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1061 : 
; 1062 : 		XMLHandle docH( doc );

	push	1
	lea	ecx, DWORD PTR _docH$95[ebp]
	call	?__autoclassinit@XMLHandle@tinyxml2@@QAEXI@Z
	lea	eax, DWORD PTR _doc$97[ebp]
	push	eax
	lea	ecx, DWORD PTR _docH$95[ebp]
	call	??0XMLHandle@tinyxml2@@QAE@AAVXMLNode@1@@Z ; tinyxml2::XMLHandle::XMLHandle

; 1063 : 		ele = docH.FirstChildElement( "none" ).FirstChildElement( "element" ).ToElement();

	push	OFFSET ??_C@_07HCLJNICE@element?$AA@
	lea	eax, DWORD PTR $T19[ebp]
	push	eax
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	lea	ecx, DWORD PTR $T18[ebp]
	push	ecx
	lea	ecx, DWORD PTR _docH$95[ebp]
	call	?FirstChildElement@XMLHandle@tinyxml2@@QAE?AV12@PBD@Z ; tinyxml2::XMLHandle::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLHandle@tinyxml2@@QAE?AV12@PBD@Z ; tinyxml2::XMLHandle::FirstChildElement
	mov	ecx, eax
	call	?ToElement@XMLHandle@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLHandle::ToElement
	mov	DWORD PTR _ele$96[ebp], eax

; 1064 : 		XMLTest( "Handle, dne, mutable", false, ele != 0 );

	cmp	DWORD PTR _ele$96[ebp], 0
	je	SHORT $LN65@main
	mov	BYTE PTR tv2660[ebp], 1
	jmp	SHORT $LN66@main
$LN65@main:
	mov	BYTE PTR tv2660[ebp], 0
$LN66@main:
	push	1
	movzx	eax, BYTE PTR tv2660[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_0BF@GDKFDLID@Handle?0?5dne?0?5mutable?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1065 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$97[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1066 : 
; 1067 : 	{
; 1068 : 		static const char* xml = "<element attrib='bar'><sub>Text</sub></element>";
; 1069 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$94[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$94[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 46		; 0000002eH

; 1070 : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR ?xml@?FG@??main@@9@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc$94[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1071 : 		XMLConstHandle docH( doc );

	push	1
	lea	ecx, DWORD PTR _docH$93[ebp]
	call	?__autoclassinit@XMLConstHandle@tinyxml2@@QAEXI@Z
	lea	eax, DWORD PTR _doc$94[ebp]
	push	eax
	lea	ecx, DWORD PTR _docH$93[ebp]
	call	??0XMLConstHandle@tinyxml2@@QAE@ABVXMLNode@1@@Z ; tinyxml2::XMLConstHandle::XMLConstHandle

; 1072 : 
; 1073 : 		const XMLElement* ele = docH.FirstChildElement( "element" ).FirstChild().ToElement();

	lea	eax, DWORD PTR $T21[ebp]
	push	eax
	push	OFFSET ??_C@_07HCLJNICE@element?$AA@
	lea	ecx, DWORD PTR $T20[ebp]
	push	ecx
	lea	ecx, DWORD PTR _docH$93[ebp]
	call	?FirstChildElement@XMLConstHandle@tinyxml2@@QBE?BV12@PBD@Z ; tinyxml2::XMLConstHandle::FirstChildElement
	mov	ecx, eax
	call	?FirstChild@XMLConstHandle@tinyxml2@@QBE?BV12@XZ ; tinyxml2::XMLConstHandle::FirstChild
	mov	ecx, eax
	call	?ToElement@XMLConstHandle@tinyxml2@@QBEPBVXMLElement@2@XZ ; tinyxml2::XMLConstHandle::ToElement
	mov	DWORD PTR _ele$92[ebp], eax

; 1074 : 		XMLTest( "Handle, success, const", ele->Value(), "sub" );

	push	0
	push	1
	push	OFFSET ??_C@_03KCMAIMAP@sub?$AA@
	mov	ecx, DWORD PTR _ele$92[ebp]
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	push	eax
	push	OFFSET ??_C@_0BH@HKJKIOMM@Handle?0?5success?0?5const?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1075 : 
; 1076 : 		ele = docH.FirstChildElement( "none" ).FirstChildElement( "element" ).ToElement();

	push	OFFSET ??_C@_07HCLJNICE@element?$AA@
	lea	eax, DWORD PTR $T23[ebp]
	push	eax
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	lea	ecx, DWORD PTR $T22[ebp]
	push	ecx
	lea	ecx, DWORD PTR _docH$93[ebp]
	call	?FirstChildElement@XMLConstHandle@tinyxml2@@QBE?BV12@PBD@Z ; tinyxml2::XMLConstHandle::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLConstHandle@tinyxml2@@QBE?BV12@PBD@Z ; tinyxml2::XMLConstHandle::FirstChildElement
	mov	ecx, eax
	call	?ToElement@XMLConstHandle@tinyxml2@@QBEPBVXMLElement@2@XZ ; tinyxml2::XMLConstHandle::ToElement
	mov	DWORD PTR _ele$92[ebp], eax

; 1077 : 		XMLTest( "Handle, dne, const", false, ele != 0 );

	cmp	DWORD PTR _ele$92[ebp], 0
	je	SHORT $LN67@main
	mov	BYTE PTR tv2714[ebp], 1
	jmp	SHORT $LN68@main
$LN67@main:
	mov	BYTE PTR tv2714[ebp], 0
$LN68@main:
	push	1
	movzx	eax, BYTE PTR tv2714[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_0BD@IDJKNPBF@Handle?0?5dne?0?5const?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1078 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$94[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1079 : 	{
; 1080 : 		// Default Declaration & BOM
; 1081 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$91[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$91[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 47		; 0000002fH

; 1082 : 		doc.InsertEndChild( doc.NewDeclaration() );

	push	0
	lea	ecx, DWORD PTR _doc$91[ebp]
	call	?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z ; tinyxml2::XMLDocument::NewDeclaration
	push	eax
	lea	ecx, DWORD PTR _doc$91[ebp]
	call	?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertEndChild

; 1083 : 		doc.SetBOM( true );

	push	1
	lea	ecx, DWORD PTR _doc$91[ebp]
	call	?SetBOM@XMLDocument@tinyxml2@@QAEX_N@Z	; tinyxml2::XMLDocument::SetBOM

; 1084 : 
; 1085 : 		XMLPrinter printer;

	push	1
	lea	ecx, DWORD PTR _printer$90[ebp]
	call	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _printer$90[ebp]
	call	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H

; 1086 : 		doc.Print( &printer );

	lea	eax, DWORD PTR _printer$90[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$91[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 1087 : 
; 1088 : 		static const char* result  = "\xef\xbb\xbf<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
; 1089 : 		XMLTest( "BOM and default declaration", printer.CStr(), result, false );

	push	0
	push	0
	mov	eax, DWORD PTR ?result@?FH@??main@@9@4PBDB
	push	eax
	lea	ecx, DWORD PTR _printer$90[ebp]
	call	?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLPrinter::CStr
	push	eax
	push	OFFSET ??_C@_0BM@GCGFEAOC@BOM?5and?5default?5declaration?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1090 : 		XMLTest( "CStrSize", printer.CStrSize(), 42, false );

	push	0
	push	42					; 0000002aH
	lea	ecx, DWORD PTR _printer$90[ebp]
	call	?CStrSize@XMLPrinter@tinyxml2@@QBEHXZ	; tinyxml2::XMLPrinter::CStrSize
	push	eax
	push	OFFSET ??_C@_08DPMAHLC@CStrSize?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 1091 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	lea	ecx, DWORD PTR _printer$90[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$91[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1092 : 	{
; 1093 : 		const char* xml = "<ipxml ws='1'><info bla=' /></ipxml>";

	mov	DWORD PTR _xml$89[ebp], OFFSET ??_C@_0CF@GPHHENIA@?$DMipxml?5ws?$DN?81?8?$DO?$DMinfo?5bla?$DN?8?5?1?$DO?$DM?1ip@

; 1094 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$88[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$88[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 49		; 00000031H

; 1095 : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR _xml$89[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$88[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1096 : 		XMLTest( "Ill formed XML", true, doc.Error() );

	push	1
	lea	ecx, DWORD PTR _doc$88[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	1
	push	OFFSET ??_C@_0P@BCNOFDDB@Ill?5formed?5XML?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1097 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$88[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1098 : 
; 1099 : 	// QueryXYZText
; 1100 : 	{
; 1101 : 		const char* xml = "<point> <x>1.2</x> <y>1</y> <z>38</z> <valid>true</valid> </point>";

	mov	DWORD PTR _xml$87[ebp], OFFSET ??_C@_0ED@LDGKNEHM@?$DMpoint?$DO?5?$DMx?$DO1?42?$DM?1x?$DO?5?$DMy?$DO1?$DM?1y?$DO?5?$DMz?$DO3@

; 1102 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$86[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$86[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 50		; 00000032H

; 1103 : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR _xml$87[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$86[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1104 : 
; 1105 : 		const XMLElement* pointElement = doc.RootElement();

	lea	ecx, DWORD PTR _doc$86[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	DWORD PTR _pointElement$85[ebp], eax

; 1106 : 
; 1107 : 		int intValue = 0;

	mov	DWORD PTR _intValue$84[ebp], 0

; 1108 : 		unsigned unsignedValue = 0;

	mov	DWORD PTR _unsignedValue$83[ebp], 0

; 1109 : 		float floatValue = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _floatValue$82[ebp], xmm0

; 1110 : 		double doubleValue = 0;

	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR _doubleValue$81[ebp], xmm0

; 1111 : 		bool boolValue = false;

	mov	BYTE PTR _boolValue$80[ebp], 0

; 1112 : 
; 1113 : 		pointElement->FirstChildElement( "y" )->QueryIntText( &intValue );

	lea	eax, DWORD PTR _intValue$84[ebp]
	push	eax
	push	OFFSET ??_C@_01EANLCPLP@y?$AA@
	mov	ecx, DWORD PTR _pointElement$85[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?QueryIntText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAH@Z ; tinyxml2::XMLElement::QueryIntText

; 1114 : 		pointElement->FirstChildElement( "y" )->QueryUnsignedText( &unsignedValue );

	lea	eax, DWORD PTR _unsignedValue$83[ebp]
	push	eax
	push	OFFSET ??_C@_01EANLCPLP@y?$AA@
	mov	ecx, DWORD PTR _pointElement$85[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?QueryUnsignedText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAI@Z ; tinyxml2::XMLElement::QueryUnsignedText

; 1115 : 		pointElement->FirstChildElement( "x" )->QueryFloatText( &floatValue );

	lea	eax, DWORD PTR _floatValue$82[ebp]
	push	eax
	push	OFFSET ??_C@_01FJMABOPO@x?$AA@
	mov	ecx, DWORD PTR _pointElement$85[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?QueryFloatText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAM@Z ; tinyxml2::XMLElement::QueryFloatText

; 1116 : 		pointElement->FirstChildElement( "x" )->QueryDoubleText( &doubleValue );

	lea	eax, DWORD PTR _doubleValue$81[ebp]
	push	eax
	push	OFFSET ??_C@_01FJMABOPO@x?$AA@
	mov	ecx, DWORD PTR _pointElement$85[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?QueryDoubleText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAN@Z ; tinyxml2::XMLElement::QueryDoubleText

; 1117 : 		pointElement->FirstChildElement( "valid" )->QueryBoolText( &boolValue );

	lea	eax, DWORD PTR _boolValue$80[ebp]
	push	eax
	push	OFFSET ??_C@_05HDPIMK@valid?$AA@
	mov	ecx, DWORD PTR _pointElement$85[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?QueryBoolText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z ; tinyxml2::XMLElement::QueryBoolText

; 1118 : 
; 1119 : 
; 1120 : 		XMLTest( "QueryIntText", intValue, 1,						false );

	push	0
	push	1
	mov	eax, DWORD PTR _intValue$84[ebp]
	push	eax
	push	OFFSET ??_C@_0N@LKHDPBLF@QueryIntText?$AA@
	call	??$XMLTest@H@@YA_NPBDHH_N@Z		; XMLTest<int>
	add	esp, 16					; 00000010H

; 1121 : 		XMLTest( "QueryUnsignedText", unsignedValue, (unsigned)1,	false );

	push	0
	push	1
	mov	eax, DWORD PTR _unsignedValue$83[ebp]
	push	eax
	push	OFFSET ??_C@_0BC@CCNPEEIL@QueryUnsignedText?$AA@
	call	??$XMLTest@I@@YA_NPBDII_N@Z		; XMLTest<unsigned int>
	add	esp, 16					; 00000010H

; 1122 : 		XMLTest( "QueryFloatText", floatValue, 1.2f,				false );

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f99999a
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _floatValue$82[ebp]
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0P@GCNAFAFM@QueryFloatText?$AA@
	call	??$XMLTest@M@@YA_NPBDMM_N@Z		; XMLTest<float>
	add	esp, 16					; 00000010H

; 1123 : 		XMLTest( "QueryDoubleText", doubleValue, 1.2,				false );

	push	0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@3ff3333333333333
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR _doubleValue$81[ebp]
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BA@IBOJFNAC@QueryDoubleText?$AA@
	call	??$XMLTest@N@@YA_NPBDNN_N@Z		; XMLTest<double>
	add	esp, 24					; 00000018H

; 1124 : 		XMLTest( "QueryBoolText", boolValue, true,					false );

	push	0
	push	1
	movzx	eax, BYTE PTR _boolValue$80[ebp]
	push	eax
	push	OFFSET ??_C@_0O@EMFLMKH@QueryBoolText?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1125 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$86[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1126 : 
; 1127 : 	{
; 1128 : 		const char* xml = "<element><_sub/><:sub/><sub:sub/><sub-sub/></element>";

	mov	DWORD PTR _xml$79[ebp], OFFSET ??_C@_0DG@KHOIEEBA@?$DMelement?$DO?$DM_sub?1?$DO?$DM?3sub?1?$DO?$DMsub?3sub?1@

; 1129 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$78[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$78[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 51		; 00000033H

; 1130 : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR _xml$79[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$78[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1131 : 		XMLTest( "Non-alpha element lead letter parses.", doc.Error(), false );

	push	1
	push	0
	lea	ecx, DWORD PTR _doc$78[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	OFFSET ??_C@_0CG@LOCDHJFB@Non?9alpha?5element?5lead?5letter?5pa@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1132 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$78[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1133 :     
; 1134 :     {
; 1135 :         const char* xml = "<element _attr1=\"foo\" :attr2=\"bar\"></element>";

	mov	DWORD PTR _xml$77[ebp], OFFSET ??_C@_0CO@ELGOLBEM@?$DMelement?5_attr1?$DN?$CCfoo?$CC?5?3attr2?$DN?$CCba@

; 1136 :         XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$76[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$76[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 52		; 00000034H

; 1137 :         doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR _xml$77[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$76[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1138 :         XMLTest("Non-alpha attribute lead character parses.", doc.Error(), false);

	push	1
	push	0
	lea	ecx, DWORD PTR _doc$76[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	OFFSET ??_C@_0CL@EMHFCFPM@Non?9alpha?5attribute?5lead?5charact@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1139 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$76[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1140 :     
; 1141 :     {
; 1142 :         const char* xml = "<3lement></3lement>";

	mov	DWORD PTR _xml$75[ebp], OFFSET ??_C@_0BE@ELECGKJA@?$DM3lement?$DO?$DM?13lement?$DO?$AA@

; 1143 :         XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$74[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$74[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 53		; 00000035H

; 1144 :         doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR _xml$75[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$74[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1145 :         XMLTest("Element names with lead digit fail to parse.", doc.Error(), true);

	push	1
	push	1
	lea	ecx, DWORD PTR _doc$74[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	OFFSET ??_C@_0CN@MHFPJKIO@Element?5names?5with?5lead?5digit?5fa@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1146 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$74[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1147 : 
; 1148 : 	{
; 1149 : 		const char* xml = "<element/>WOA THIS ISN'T GOING TO PARSE";

	mov	DWORD PTR _xml$73[ebp], OFFSET ??_C@_0CI@FIBMGFCP@?$DMelement?1?$DOWOA?5THIS?5ISN?8T?5GOING?5T@

; 1150 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$72[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$72[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 54		; 00000036H

; 1151 : 		doc.Parse( xml, 10 );

	push	10					; 0000000aH
	mov	eax, DWORD PTR _xml$73[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$72[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1152 : 		XMLTest( "Set length of incoming data", doc.Error(), false );

	push	1
	push	0
	lea	ecx, DWORD PTR _doc$72[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	push	eax
	push	OFFSET ??_C@_0BM@CGMGPGOD@Set?5length?5of?5incoming?5data?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1153 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$72[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1154 : 
; 1155 :     {
; 1156 :         XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$71[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$71[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 55		; 00000037H

; 1157 :         doc.LoadFile( "resources/dream.xml" );

	push	OFFSET ??_C@_0BE@MGFIECLE@resources?1dream?4xml?$AA@
	lea	ecx, DWORD PTR _doc$71[ebp]
	call	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile

; 1158 :         doc.Clear();

	lea	ecx, DWORD PTR _doc$71[ebp]
	call	?Clear@XMLDocument@tinyxml2@@QAEXXZ	; tinyxml2::XMLDocument::Clear

; 1159 :         XMLTest( "Document Clear()'s", doc.NoChildren(), true );

	push	1
	push	1
	lea	ecx, DWORD PTR _doc$71[ebp]
	call	?NoChildren@XMLNode@tinyxml2@@QBE_NXZ	; tinyxml2::XMLNode::NoChildren
	movzx	eax, al
	push	eax
	push	OFFSET ??_C@_0BD@NPIJJJII@Document?5Clear?$CI?$CJ?8s?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1160 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$71[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1161 :     
; 1162 : 	// ----------- Whitespace ------------
; 1163 : 	{
; 1164 : 		const char* xml = "<element>"
; 1165 : 							"<a> This \nis &apos;  text  &apos; </a>"
; 1166 : 							"<b>  This is &apos; text &apos;  \n</b>"
; 1167 : 							"<c>This  is  &apos;  \n\n text &apos;</c>"
; 1168 : 						  "</element>";

	mov	DWORD PTR _xml$70[ebp], OFFSET ??_C@_0IH@HJKJGCIC@?$DMelement?$DO?$DMa?$DO?5This?5?6is?5?$CGapos?$DL?5?5te@

; 1169 : 		XMLDocument doc( true, COLLAPSE_WHITESPACE );

	push	1
	lea	ecx, DWORD PTR _doc$69[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	1
	push	1
	lea	ecx, DWORD PTR _doc$69[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 56		; 00000038H

; 1170 : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR _xml$70[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$69[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1171 : 
; 1172 : 		const XMLElement* element = doc.FirstChildElement();

	push	0
	lea	ecx, DWORD PTR _doc$69[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _element$68[ebp], eax

; 1173 : 		for( const XMLElement* parent = element->FirstChildElement();

	push	0
	mov	ecx, DWORD PTR _element$68[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _parent$67[ebp], eax

; 1174 : 			 parent;

	jmp	SHORT $LN6@main
$LN5@main:

; 1175 : 			 parent = parent->NextSiblingElement() )

	push	0
	mov	ecx, DWORD PTR _parent$67[ebp]
	call	?NextSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
	mov	DWORD PTR _parent$67[ebp], eax
$LN6@main:
	cmp	DWORD PTR _parent$67[ebp], 0
	je	SHORT $LN4@main

; 1176 : 		{
; 1177 : 			XMLTest( "Whitespace collapse", "This is ' text '", parent->GetText() );

	push	0
	push	1
	mov	ecx, DWORD PTR _parent$67[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	push	eax
	push	OFFSET ??_C@_0BB@FJIIKGDN@This?5is?5?8?5text?5?8?$AA@
	push	OFFSET ??_C@_0BE@CMHNPBKO@Whitespace?5collapse?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1178 : 		}

	jmp	SHORT $LN5@main
$LN4@main:

; 1179 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$69[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1180 : 
; 1181 : #if 0
; 1182 : 	{
; 1183 : 		// Passes if assert doesn't fire.
; 1184 : 		XMLDocument xmlDoc;
; 1185 : 
; 1186 : 	    xmlDoc.NewDeclaration();
; 1187 : 	    xmlDoc.NewComment("Configuration file");
; 1188 : 
; 1189 : 	    XMLElement *root = xmlDoc.NewElement("settings");
; 1190 : 	    root->SetAttribute("version", 2);
; 1191 : 	}
; 1192 : #endif
; 1193 : 
; 1194 : 	{
; 1195 : 		const char* xml = "<element>    </element>";

	mov	DWORD PTR _xml$66[ebp], OFFSET ??_C@_0BI@FBKIDIGN@?$DMelement?$DO?5?5?5?5?$DM?1element?$DO?$AA@

; 1196 : 		XMLDocument doc( true, COLLAPSE_WHITESPACE );

	push	1
	lea	ecx, DWORD PTR _doc$65[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	1
	push	1
	lea	ecx, DWORD PTR _doc$65[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 57		; 00000039H

; 1197 : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR _xml$66[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$65[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1198 : 		XMLTest( "Whitespace  all space", true, 0 == doc.FirstChildElement()->FirstChild() );

	push	0
	lea	ecx, DWORD PTR _doc$65[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	test	eax, eax
	jne	SHORT $LN69@main
	mov	BYTE PTR tv3068[ebp], 1
	jmp	SHORT $LN70@main
$LN69@main:
	mov	BYTE PTR tv3068[ebp], 0
$LN70@main:
	push	1
	movzx	eax, BYTE PTR tv3068[ebp]
	push	eax
	push	1
	push	OFFSET ??_C@_0BG@FFGMDLLC@Whitespace?5?5all?5space?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1199 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$65[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1200 : 
; 1201 : 	{
; 1202 : 		// An assert should not fire.
; 1203 : 		const char* xml = "<element/>";

	mov	DWORD PTR _xml$64[ebp], OFFSET ??_C@_0L@KBEJNDBI@?$DMelement?1?$DO?$AA@

; 1204 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$63[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$63[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 58		; 0000003aH

; 1205 : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR _xml$64[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$63[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1206 : 		XMLElement* ele = doc.NewElement( "unused" );		// This will get cleaned up with the 'doc' going out of scope.

	push	OFFSET ??_C@_06OJAIHGIC@unused?$AA@
	lea	ecx, DWORD PTR _doc$63[ebp]
	call	?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLDocument::NewElement
	mov	DWORD PTR _ele$62[ebp], eax

; 1207 : 		XMLTest( "Tracking unused elements", true, ele != 0, false );

	cmp	DWORD PTR _ele$62[ebp], 0
	je	SHORT $LN71@main
	mov	BYTE PTR tv3087[ebp], 1
	jmp	SHORT $LN72@main
$LN71@main:
	mov	BYTE PTR tv3087[ebp], 0
$LN72@main:
	push	0
	movzx	eax, BYTE PTR tv3087[ebp]
	push	eax
	push	1
	push	OFFSET ??_C@_0BJ@PHGGEOAM@Tracking?5unused?5elements?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1208 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$63[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1209 : 
; 1210 : 
; 1211 : 	{
; 1212 : 		const char* xml = "<parent><child>abc</child></parent>";

	mov	DWORD PTR _xml$61[ebp], OFFSET ??_C@_0CE@KBPIICGI@?$DMparent?$DO?$DMchild?$DOabc?$DM?1child?$DO?$DM?1pare@

; 1213 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$60[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$60[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 59		; 0000003bH

; 1214 : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR _xml$61[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$60[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1215 : 		XMLElement* ele = doc.FirstChildElement( "parent")->FirstChildElement( "child");

	push	OFFSET ??_C@_05GPGNDLEK@child?$AA@
	push	OFFSET ??_C@_06MLKDMCBD@parent?$AA@
	lea	ecx, DWORD PTR _doc$60[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _ele$59[ebp], eax

; 1216 : 
; 1217 : 		XMLPrinter printer;

	push	1
	lea	ecx, DWORD PTR _printer$58[ebp]
	call	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _printer$58[ebp]
	call	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH

; 1218 : 		ele->Accept( &printer );

	mov	esi, esp
	lea	eax, DWORD PTR _printer$58[ebp]
	push	eax
	mov	ecx, DWORD PTR _ele$59[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ele$59[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1219 : 		XMLTest( "Printing of sub-element", "<child>abc</child>\n", printer.CStr(), false );

	push	0
	push	0
	lea	ecx, DWORD PTR _printer$58[ebp]
	call	?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLPrinter::CStr
	push	eax
	push	OFFSET ??_C@_0BE@MBLOGLKH@?$DMchild?$DOabc?$DM?1child?$DO?6?$AA@
	push	OFFSET ??_C@_0BI@HPOOLHMM@Printing?5of?5sub?9element?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1220 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	lea	ecx, DWORD PTR _printer$58[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$60[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1221 : 
; 1222 : 
; 1223 : 	{
; 1224 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$57[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$57[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 61		; 0000003dH

; 1225 : 		XMLError error = doc.LoadFile( "resources/empty.xml" );

	push	OFFSET ??_C@_0BE@MDBJGIIB@resources?1empty?4xml?$AA@
	lea	ecx, DWORD PTR _doc$57[ebp]
	call	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile
	mov	DWORD PTR _error$56[ebp], eax

; 1226 : 		XMLTest( "Loading an empty file", XML_ERROR_EMPTY_DOCUMENT, error );

	push	1
	mov	eax, DWORD PTR _error$56[ebp]
	push	eax
	push	15					; 0000000fH
	push	OFFSET ??_C@_0BG@KJCHNKFD@Loading?5an?5empty?5file?$AA@
	call	??$XMLTest@W4XMLError@tinyxml2@@@@YA_NPBDW4XMLError@tinyxml2@@1_N@Z ; XMLTest<enum tinyxml2::XMLError>
	add	esp, 16					; 00000010H

; 1227 : 		XMLTest( "Loading an empty file and ErrorName as string", "XML_ERROR_EMPTY_DOCUMENT", doc.ErrorName() );

	push	0
	push	1
	lea	ecx, DWORD PTR _doc$57[ebp]
	call	?ErrorName@XMLDocument@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLDocument::ErrorName
	push	eax
	push	OFFSET ??_C@_0BJ@CHGEEKHN@XML_ERROR_EMPTY_DOCUMENT?$AA@
	push	OFFSET ??_C@_0CO@PCABNGG@Loading?5an?5empty?5file?5and?5ErrorN@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1228 : 		doc.PrintError();

	lea	ecx, DWORD PTR _doc$57[ebp]
	call	?PrintError@XMLDocument@tinyxml2@@QBEXXZ ; tinyxml2::XMLDocument::PrintError

; 1229 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$57[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1230 : 
; 1231 : 	{
; 1232 :         // BOM preservation
; 1233 :         static const char* xml_bom_preservation  = "\xef\xbb\xbf<element/>\n";
; 1234 :         {
; 1235 : 			XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$55[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$55[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 62		; 0000003eH

; 1236 : 			XMLTest( "BOM preservation (parse)", XML_NO_ERROR, doc.Parse( xml_bom_preservation ), false );

	push	0
	push	-1
	mov	eax, DWORD PTR ?xml_bom_preservation@?GG@??main@@9@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc$55[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse
	push	eax
	push	0
	push	OFFSET ??_C@_0BJ@OLHFLBMB@BOM?5preservation?5?$CIparse?$CJ?$AA@
	call	??$XMLTest@W4XMLError@tinyxml2@@@@YA_NPBDW4XMLError@tinyxml2@@1_N@Z ; XMLTest<enum tinyxml2::XMLError>
	add	esp, 16					; 00000010H

; 1237 :             XMLPrinter printer;

	push	1
	lea	ecx, DWORD PTR _printer$54[ebp]
	call	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _printer$54[ebp]
	call	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH

; 1238 :             doc.Print( &printer );

	lea	eax, DWORD PTR _printer$54[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$55[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 1239 : 
; 1240 :             XMLTest( "BOM preservation (compare)", xml_bom_preservation, printer.CStr(), false, true );

	push	1
	push	0
	lea	ecx, DWORD PTR _printer$54[ebp]
	call	?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLPrinter::CStr
	push	eax
	mov	eax, DWORD PTR ?xml_bom_preservation@?GG@??main@@9@4PBDB
	push	eax
	push	OFFSET ??_C@_0BL@BKJEMECM@BOM?5preservation?5?$CIcompare?$CJ?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1241 : 			doc.SaveFile( "resources/bomtest.xml" );

	push	0
	push	OFFSET ??_C@_0BG@MIOOCLIO@resources?1bomtest?4xml?$AA@
	lea	ecx, DWORD PTR _doc$55[ebp]
	call	?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD_N@Z ; tinyxml2::XMLDocument::SaveFile

; 1242 :         }

	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	lea	ecx, DWORD PTR _printer$54[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$55[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1243 : 		{
; 1244 : 			XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$53[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$53[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 64		; 00000040H

; 1245 : 			doc.LoadFile( "resources/bomtest.xml" );

	push	OFFSET ??_C@_0BG@MIOOCLIO@resources?1bomtest?4xml?$AA@
	lea	ecx, DWORD PTR _doc$53[ebp]
	call	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile

; 1246 : 			XMLTest( "BOM preservation (load)", true, doc.HasBOM(), false );

	push	0
	lea	ecx, DWORD PTR _doc$53[ebp]
	call	?HasBOM@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::HasBOM
	movzx	eax, al
	push	eax
	push	1
	push	OFFSET ??_C@_0BI@PFBIFHKF@BOM?5preservation?5?$CIload?$CJ?$AA@
	call	??$XMLTest@_N@@YA_NPBD_N11@Z		; XMLTest<bool>
	add	esp, 16					; 00000010H

; 1247 : 
; 1248 :             XMLPrinter printer;

	push	1
	lea	ecx, DWORD PTR _printer$52[ebp]
	call	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _printer$52[ebp]
	call	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H

; 1249 :             doc.Print( &printer );

	lea	eax, DWORD PTR _printer$52[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$53[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 1250 :             XMLTest( "BOM preservation (compare)", xml_bom_preservation, printer.CStr(), false, true );

	push	1
	push	0
	lea	ecx, DWORD PTR _printer$52[ebp]
	call	?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLPrinter::CStr
	push	eax
	mov	eax, DWORD PTR ?xml_bom_preservation@?GG@??main@@9@4PBDB
	push	eax
	push	OFFSET ??_C@_0BL@BKJEMECM@BOM?5preservation?5?$CIcompare?$CJ?$AA@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1251 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	lea	ecx, DWORD PTR _printer$52[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$53[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1252 : 	}
; 1253 : 
; 1254 : 	{
; 1255 : 		// Insertion with Removal
; 1256 : 		const char* xml = "<?xml version=\"1.0\" ?>"
; 1257 : 			"<root>"
; 1258 : 			"<one>"
; 1259 : 			"<subtree>"
; 1260 : 			"<elem>element 1</elem>text<!-- comment -->"
; 1261 : 			"</subtree>"
; 1262 : 			"</one>"
; 1263 : 			"<two/>"
; 1264 : 			"</root>";

	mov	DWORD PTR _xml$51[ebp], OFFSET ??_C@_0HC@CBOIMHMF@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@

; 1265 : 		const char* xmlInsideTwo = "<?xml version=\"1.0\" ?>"
; 1266 : 			"<root>"
; 1267 : 			"<one/>"
; 1268 : 			"<two>"
; 1269 : 			"<subtree>"
; 1270 : 			"<elem>element 1</elem>text<!-- comment -->"
; 1271 : 			"</subtree>"
; 1272 : 			"</two>"
; 1273 : 			"</root>";

	mov	DWORD PTR _xmlInsideTwo$50[ebp], OFFSET ??_C@_0HC@IOIHEOFF@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@

; 1274 : 		const char* xmlAfterOne = "<?xml version=\"1.0\" ?>"
; 1275 : 			"<root>"
; 1276 : 			"<one/>"
; 1277 : 			"<subtree>"
; 1278 : 			"<elem>element 1</elem>text<!-- comment -->"
; 1279 : 			"</subtree>"
; 1280 : 			"<two/>"
; 1281 : 			"</root>";

	mov	DWORD PTR _xmlAfterOne$49[ebp], OFFSET ??_C@_0GN@KIBDBHHO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@

; 1282 : 		const char* xmlAfterTwo = "<?xml version=\"1.0\" ?>"
; 1283 : 			"<root>"
; 1284 : 			"<one/>"
; 1285 : 			"<two/>"
; 1286 : 			"<subtree>"
; 1287 : 			"<elem>element 1</elem>text<!-- comment -->"
; 1288 : 			"</subtree>"
; 1289 : 			"</root>";

	mov	DWORD PTR _xmlAfterTwo$48[ebp], OFFSET ??_C@_0GN@FCBOADCO@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5?$DP?$DO?$DMroot?$DO?$DMone@

; 1290 : 
; 1291 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 66		; 00000042H

; 1292 : 		doc.Parse(xml);

	push	-1
	mov	eax, DWORD PTR _xml$51[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1293 : 		XMLElement* subtree = doc.RootElement()->FirstChildElement("one")->FirstChildElement("subtree");

	push	OFFSET ??_C@_07NIJMFPAJ@subtree?$AA@
	push	OFFSET ??_C@_03OHDNLOHO@one?$AA@
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _subtree$46[ebp], eax

; 1294 : 		XMLElement* two = doc.RootElement()->FirstChildElement("two");

	push	OFFSET ??_C@_03IJDNBOJF@two?$AA@
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _two$45[ebp], eax

; 1295 : 		two->InsertFirstChild(subtree);

	mov	eax, DWORD PTR _subtree$46[ebp]
	push	eax
	mov	ecx, DWORD PTR _two$45[ebp]
	call	?InsertFirstChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertFirstChild

; 1296 : 		XMLPrinter printer1(0, true);

	push	1
	lea	ecx, DWORD PTR _printer1$44[ebp]
	call	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
	push	0
	push	1
	push	0
	lea	ecx, DWORD PTR _printer1$44[ebp]
	call	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H

; 1297 : 		doc.Accept(&printer1);

	lea	eax, DWORD PTR _printer1$44[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?Accept@XMLDocument@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ; tinyxml2::XMLDocument::Accept

; 1298 : 		XMLTest("Move node from within <one> to <two>", xmlInsideTwo, printer1.CStr());

	push	0
	push	1
	lea	ecx, DWORD PTR _printer1$44[ebp]
	call	?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLPrinter::CStr
	push	eax
	mov	eax, DWORD PTR _xmlInsideTwo$50[ebp]
	push	eax
	push	OFFSET ??_C@_0CF@EMCHKENB@Move?5node?5from?5within?5?$DMone?$DO?5to?5?$DM@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1299 : 
; 1300 : 		doc.Parse(xml);

	push	-1
	mov	eax, DWORD PTR _xml$51[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1301 : 		subtree = doc.RootElement()->FirstChildElement("one")->FirstChildElement("subtree");

	push	OFFSET ??_C@_07NIJMFPAJ@subtree?$AA@
	push	OFFSET ??_C@_03OHDNLOHO@one?$AA@
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _subtree$46[ebp], eax

; 1302 : 		two = doc.RootElement()->FirstChildElement("two");

	push	OFFSET ??_C@_03IJDNBOJF@two?$AA@
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _two$45[ebp], eax

; 1303 : 		doc.RootElement()->InsertAfterChild(two, subtree);

	mov	eax, DWORD PTR _subtree$46[ebp]
	push	eax
	mov	ecx, DWORD PTR _two$45[ebp]
	push	ecx
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	ecx, eax
	call	?InsertAfterChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@0@Z ; tinyxml2::XMLNode::InsertAfterChild

; 1304 : 		XMLPrinter printer2(0, true);

	push	1
	lea	ecx, DWORD PTR _printer2$43[ebp]
	call	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
	push	0
	push	1
	push	0
	lea	ecx, DWORD PTR _printer2$43[ebp]
	call	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H

; 1305 : 		doc.Accept(&printer2);

	lea	eax, DWORD PTR _printer2$43[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?Accept@XMLDocument@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ; tinyxml2::XMLDocument::Accept

; 1306 : 		XMLTest("Move node from within <one> after <two>", xmlAfterTwo, printer2.CStr(), false);

	push	0
	push	0
	lea	ecx, DWORD PTR _printer2$43[ebp]
	call	?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLPrinter::CStr
	push	eax
	mov	eax, DWORD PTR _xmlAfterTwo$48[ebp]
	push	eax
	push	OFFSET ??_C@_0CI@CODAANPB@Move?5node?5from?5within?5?$DMone?$DO?5afte@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1307 : 
; 1308 : 		doc.Parse(xml);

	push	-1
	mov	eax, DWORD PTR _xml$51[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1309 : 		XMLNode* one = doc.RootElement()->FirstChildElement("one");

	push	OFFSET ??_C@_03OHDNLOHO@one?$AA@
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _one$42[ebp], eax

; 1310 : 		subtree = one->FirstChildElement("subtree");

	push	OFFSET ??_C@_07NIJMFPAJ@subtree?$AA@
	mov	ecx, DWORD PTR _one$42[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _subtree$46[ebp], eax

; 1311 : 		doc.RootElement()->InsertAfterChild(one, subtree);

	mov	eax, DWORD PTR _subtree$46[ebp]
	push	eax
	mov	ecx, DWORD PTR _one$42[ebp]
	push	ecx
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	ecx, eax
	call	?InsertAfterChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@0@Z ; tinyxml2::XMLNode::InsertAfterChild

; 1312 : 		XMLPrinter printer3(0, true);

	push	1
	lea	ecx, DWORD PTR _printer3$41[ebp]
	call	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
	push	0
	push	1
	push	0
	lea	ecx, DWORD PTR _printer3$41[ebp]
	call	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H

; 1313 : 		doc.Accept(&printer3);

	lea	eax, DWORD PTR _printer3$41[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?Accept@XMLDocument@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ; tinyxml2::XMLDocument::Accept

; 1314 : 		XMLTest("Move node from within <one> after <one>", xmlAfterOne, printer3.CStr(), false);

	push	0
	push	0
	lea	ecx, DWORD PTR _printer3$41[ebp]
	call	?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLPrinter::CStr
	push	eax
	mov	eax, DWORD PTR _xmlAfterOne$49[ebp]
	push	eax
	push	OFFSET ??_C@_0CI@BJIGDGKB@Move?5node?5from?5within?5?$DMone?$DO?5afte@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1315 : 
; 1316 : 		doc.Parse(xml);

	push	-1
	mov	eax, DWORD PTR _xml$51[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1317 : 		subtree = doc.RootElement()->FirstChildElement("one")->FirstChildElement("subtree");

	push	OFFSET ??_C@_07NIJMFPAJ@subtree?$AA@
	push	OFFSET ??_C@_03OHDNLOHO@one?$AA@
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _subtree$46[ebp], eax

; 1318 : 		two = doc.RootElement()->FirstChildElement("two");

	push	OFFSET ??_C@_03IJDNBOJF@two?$AA@
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _two$45[ebp], eax

; 1319 : 		doc.RootElement()->InsertEndChild(subtree);

	mov	eax, DWORD PTR _subtree$46[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ; tinyxml2::XMLDocument::RootElement
	mov	ecx, eax
	call	?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertEndChild

; 1320 : 		XMLPrinter printer4(0, true);

	push	1
	lea	ecx, DWORD PTR _printer4$40[ebp]
	call	?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
	push	0
	push	1
	push	0
	lea	ecx, DWORD PTR _printer4$40[ebp]
	call	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H

; 1321 : 		doc.Accept(&printer4);

	lea	eax, DWORD PTR _printer4$40[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	?Accept@XMLDocument@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ; tinyxml2::XMLDocument::Accept

; 1322 : 		XMLTest("Move node from within <one> after <two>", xmlAfterTwo, printer4.CStr(), false);

	push	0
	push	0
	lea	ecx, DWORD PTR _printer4$40[ebp]
	call	?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLPrinter::CStr
	push	eax
	mov	eax, DWORD PTR _xmlAfterTwo$48[ebp]
	push	eax
	push	OFFSET ??_C@_0CI@CODAANPB@Move?5node?5from?5within?5?$DMone?$DO?5afte@
	call	?XMLTest@@YA_NPBD00_N1@Z		; XMLTest
	add	esp, 20					; 00000014H

; 1323 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	lea	ecx, DWORD PTR _printer4$40[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	lea	ecx, DWORD PTR _printer3$41[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	lea	ecx, DWORD PTR _printer2$43[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	lea	ecx, DWORD PTR _printer1$44[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$47[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1324 : 
; 1325 : 	{
; 1326 : 		const char* xml = "<svg width = \"128\" height = \"128\">"
; 1327 : 			"	<text> </text>"
; 1328 : 			"</svg>";

	mov	DWORD PTR _xml$39[ebp], OFFSET ??_C@_0DI@HAIDNGPC@?$DMsvg?5width?5?$DN?5?$CC128?$CC?5height?5?$DN?5?$CC128@

; 1329 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$38[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$38[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 71		; 00000047H

; 1330 : 		doc.Parse(xml);

	push	-1
	mov	eax, DWORD PTR _xml$39[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$38[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1331 : 		doc.Print();

	push	0
	lea	ecx, DWORD PTR _doc$38[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 1332 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$38[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1333 : 
; 1334 : #if 1
; 1335 : 		// the question being explored is what kind of print to use: 
; 1336 : 		// https://github.com/leethomason/tinyxml2/issues/63
; 1337 : 	{
; 1338 : 		//const char* xml = "<element attrA='123456789.123456789' attrB='1.001e9' attrC='1.0e-10' attrD='1001000000.000000' attrE='0.1234567890123456789'/>";
; 1339 : 		const char* xml = "<element/>";

	mov	DWORD PTR _xml$37[ebp], OFFSET ??_C@_0L@KBEJNDBI@?$DMelement?1?$DO?$AA@

; 1340 : 		XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 72		; 00000048H

; 1341 : 		doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR _xml$37[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1342 : 		doc.FirstChildElement()->SetAttribute( "attrA-f64", 123456789.123456789 );

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@419d6f34547e6b75
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09KECGMEAA@attrA?9f64?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDN@Z ; tinyxml2::XMLElement::SetAttribute

; 1343 : 		doc.FirstChildElement()->SetAttribute( "attrB-f64", 1.001e9 );

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@41cdd50620000000
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09CCLCLGKO@attrB?9f64?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDN@Z ; tinyxml2::XMLElement::SetAttribute

; 1344 : 		doc.FirstChildElement()->SetAttribute( "attrC-f64", 1.0e9 );

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@41cdcd6500000000
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09OJOOGFAL@attrC?9f64?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDN@Z ; tinyxml2::XMLElement::SetAttribute

; 1345 : 		doc.FirstChildElement()->SetAttribute( "attrC-f64", 1.0e20 );

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@4415af1d78b58c40
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09OJOOGFAL@attrC?9f64?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDN@Z ; tinyxml2::XMLElement::SetAttribute

; 1346 : 		doc.FirstChildElement()->SetAttribute( "attrD-f64", 1.0e-10 );

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@3ddb7cdfd9d7bdbb
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09PEOLFFLD@attrD?9f64?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDN@Z ; tinyxml2::XMLElement::SetAttribute

; 1347 : 		doc.FirstChildElement()->SetAttribute( "attrD-f64", 0.123456789 );

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@3fbf9add3739635f
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09PEOLFFLD@attrD?9f64?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDN@Z ; tinyxml2::XMLElement::SetAttribute

; 1348 : 
; 1349 : 		doc.FirstChildElement()->SetAttribute( "attrA-f32", 123456789.123456789f );

	push	ecx
	movss	xmm0, DWORD PTR __real@4ceb79a3
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09PELHKBGN@attrA?9f32?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDM@Z ; tinyxml2::XMLElement::SetAttribute

; 1350 : 		doc.FirstChildElement()->SetAttribute( "attrB-f32", 1.001e9f );

	push	ecx
	movss	xmm0, DWORD PTR __real@4e6ea831
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09HCCDNDMD@attrB?9f32?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDM@Z ; tinyxml2::XMLElement::SetAttribute

; 1351 : 		doc.FirstChildElement()->SetAttribute( "attrC-f32", 1.0e9f );

	push	ecx
	movss	xmm0, DWORD PTR __real@4e6e6b28
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09LJHPAAGG@attrC?9f32?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDM@Z ; tinyxml2::XMLElement::SetAttribute

; 1352 : 		doc.FirstChildElement()->SetAttribute( "attrC-f32", 1.0e20f );

	push	ecx
	movss	xmm0, DWORD PTR __real@60ad78ec
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09LJHPAAGG@attrC?9f32?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDM@Z ; tinyxml2::XMLElement::SetAttribute

; 1353 : 		doc.FirstChildElement()->SetAttribute( "attrD-f32", 1.0e-10f );

	push	ecx
	movss	xmm0, DWORD PTR __real@2edbe6ff
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09KEHKDANO@attrD?9f32?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDM@Z ; tinyxml2::XMLElement::SetAttribute

; 1354 : 		doc.FirstChildElement()->SetAttribute( "attrD-f32", 0.123456789f );

	push	ecx
	movss	xmm0, DWORD PTR __real@3dfcd6ea
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_09KEHKDANO@attrD?9f32?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?SetAttribute@XMLElement@tinyxml2@@QAEXPBDM@Z ; tinyxml2::XMLElement::SetAttribute

; 1355 : 
; 1356 : 		doc.Print();

	push	0
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print

; 1357 : 
; 1358 : 		/* The result of this test is platform, compiler, and library version dependent. :("
; 1359 : 		XMLPrinter printer;
; 1360 : 		doc.Print( &printer );
; 1361 : 		XMLTest( "Float and double formatting.", 
; 1362 : 			"<element attrA-f64=\"123456789.12345679\" attrB-f64=\"1001000000\" attrC-f64=\"1e+20\" attrD-f64=\"0.123456789\" attrA-f32=\"1.2345679e+08\" attrB-f32=\"1.001e+09\" attrC-f32=\"1e+20\" attrD-f32=\"0.12345679\"/>\n",
; 1363 : 			printer.CStr(), 
; 1364 : 			true );
; 1365 : 		*/
; 1366 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$36[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1367 : #endif
; 1368 :     
; 1369 :     {
; 1370 :         // Issue #184
; 1371 :         // If it doesn't assert, it passes. Caused by objects
; 1372 :         // getting created during parsing which are then
; 1373 :         // inaccessible in the memory pools.
; 1374 :         {
; 1375 :             XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$35[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$35[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 73		; 00000049H

; 1376 :             doc.Parse("<?xml version=\"1.0\" encoding=\"UTF-8\"?><test>");

	push	-1
	push	OFFSET ??_C@_0CN@OLALBDAH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCUT@
	lea	ecx, DWORD PTR _doc$35[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1377 :         }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$35[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1378 :         {
; 1379 :             XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$34[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$34[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 74		; 0000004aH

; 1380 :             doc.Parse("<?xml version=\"1.0\" encoding=\"UTF-8\"?><test>");

	push	-1
	push	OFFSET ??_C@_0CN@OLALBDAH@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCUT@
	lea	ecx, DWORD PTR _doc$34[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1381 :             doc.Clear();

	lea	ecx, DWORD PTR _doc$34[ebp]
	call	?Clear@XMLDocument@tinyxml2@@QAEXXZ	; tinyxml2::XMLDocument::Clear

; 1382 :         }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$34[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument

; 1383 :     }
; 1384 : 
; 1385 : 
; 1386 : 	// ----------- Performance tracking --------------
; 1387 : 	{
; 1388 : #if defined( _MSC_VER )
; 1389 : 		__int64 start, end, freq;
; 1390 : 		QueryPerformanceFrequency( (LARGE_INTEGER*) &freq );

	mov	esi, esp
	lea	eax, DWORD PTR _freq$31[ebp]
	push	eax
	call	DWORD PTR __imp__QueryPerformanceFrequency@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1391 : #endif
; 1392 : 
; 1393 : 		FILE* fp  = fopen( "resources/dream.xml", "r" );

	mov	esi, esp
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	OFFSET ??_C@_0BE@MGFIECLE@resources?1dream?4xml?$AA@
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _fp$30[ebp], eax

; 1394 : 		fseek( fp, 0, SEEK_END );

	mov	esi, esp
	push	2
	push	0
	mov	eax, DWORD PTR _fp$30[ebp]
	push	eax
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1395 : 		long size = ftell( fp );

	mov	esi, esp
	mov	eax, DWORD PTR _fp$30[ebp]
	push	eax
	call	DWORD PTR __imp__ftell
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _size$29[ebp], eax

; 1396 : 		fseek( fp, 0, SEEK_SET );

	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _fp$30[ebp]
	push	eax
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1397 : 
; 1398 : 		char* mem = new char[size+1];

	mov	eax, DWORD PTR _size$29[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T24[ebp], eax
	mov	ecx, DWORD PTR $T24[ebp]
	mov	DWORD PTR _mem$28[ebp], ecx

; 1399 : 		fread( mem, size, 1, fp );

	mov	esi, esp
	mov	eax, DWORD PTR _fp$30[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _size$29[ebp]
	push	ecx
	mov	edx, DWORD PTR _mem$28[ebp]
	push	edx
	call	DWORD PTR __imp__fread
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1400 : 		fclose( fp );

	mov	esi, esp
	mov	eax, DWORD PTR _fp$30[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1401 : 		mem[size] = 0;

	mov	eax, DWORD PTR _mem$28[ebp]
	add	eax, DWORD PTR _size$29[ebp]
	mov	BYTE PTR [eax], 0

; 1402 : 
; 1403 : #if defined( _MSC_VER )
; 1404 : 		QueryPerformanceCounter( (LARGE_INTEGER*) &start );

	mov	esi, esp
	lea	eax, DWORD PTR _start$33[ebp]
	push	eax
	call	DWORD PTR __imp__QueryPerformanceCounter@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1405 : #else
; 1406 : 		clock_t cstart = clock();
; 1407 : #endif
; 1408 : 		static const int COUNT = 10;
; 1409 : 		for( int i=0; i<COUNT; ++i ) {

	mov	DWORD PTR _i$27[ebp], 0
	jmp	SHORT $LN3@main
$LN2@main:
	mov	eax, DWORD PTR _i$27[ebp]
	add	eax, 1
	mov	DWORD PTR _i$27[ebp], eax
$LN3@main:
	cmp	DWORD PTR _i$27[ebp], 10		; 0000000aH
	jge	SHORT $LN1@main

; 1410 : 			XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$26[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$26[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 75		; 0000004bH

; 1411 : 			doc.Parse( mem );

	push	-1
	mov	eax, DWORD PTR _mem$28[ebp]
	push	eax
	lea	ecx, DWORD PTR _doc$26[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 1412 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$26[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
	jmp	SHORT $LN2@main
$LN1@main:

; 1413 : #if defined( _MSC_VER )
; 1414 : 		QueryPerformanceCounter( (LARGE_INTEGER*) &end );

	mov	esi, esp
	lea	eax, DWORD PTR _end$32[ebp]
	push	eax
	call	DWORD PTR __imp__QueryPerformanceCounter@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1415 : #else
; 1416 : 		clock_t cend = clock();
; 1417 : #endif
; 1418 : 
; 1419 : 		delete [] mem;

	mov	eax, DWORD PTR _mem$28[ebp]
	mov	DWORD PTR $T25[ebp], eax
	mov	ecx, DWORD PTR $T25[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	cmp	DWORD PTR $T25[ebp], 0
	jne	SHORT $LN73@main
	mov	DWORD PTR tv3743[ebp], 0
	jmp	SHORT $LN74@main
$LN73@main:
	mov	DWORD PTR _mem$28[ebp], 33059		; 00008123H
	mov	edx, DWORD PTR _mem$28[ebp]
	mov	DWORD PTR tv3743[ebp], edx
$LN74@main:

; 1420 : 
; 1421 : 		static const char* note =
; 1422 : #ifdef DEBUG
; 1423 : 			"DEBUG";
; 1424 : #else
; 1425 : 			"Release";
; 1426 : #endif
; 1427 : 
; 1428 : #if defined( _MSC_VER )
; 1429 : 		printf( "\nParsing %s of dream.xml: %.3f milli-seconds\n", note, 1000.0 * (double)(end-start) / ( (double)freq * (double)COUNT) );

	mov	eax, DWORD PTR _end$32[ebp]
	sub	eax, DWORD PTR _start$33[ebp]
	mov	ecx, DWORD PTR _end$32[ebp+4]
	sbb	ecx, DWORD PTR _start$33[ebp+4]
	mov	DWORD PTR tv4618[ebp], eax
	mov	DWORD PTR tv4618[ebp+4], ecx
	fild	QWORD PTR tv4618[ebp]
	fstp	QWORD PTR tv4621[ebp]
	fld	QWORD PTR tv4621[ebp]
	fstp	QWORD PTR tv4624[ebp]
	movsd	xmm0, QWORD PTR tv4624[ebp]
	mulsd	xmm0, QWORD PTR __real@408f400000000000
	fild	QWORD PTR _freq$31[ebp]
	fstp	QWORD PTR tv4627[ebp]
	fld	QWORD PTR tv4627[ebp]
	fstp	QWORD PTR tv4630[ebp]
	movsd	xmm1, QWORD PTR tv4630[ebp]
	mulsd	xmm1, QWORD PTR __real@4024000000000000
	divsd	xmm0, xmm1
	mov	esi, esp
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR ?note@?HB@??main@@9@4PBDB
	push	edx
	push	OFFSET ??_C@_0CO@POACOABE@?6Parsing?5?$CFs?5of?5dream?4xml?3?5?$CF?43f?5m@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1430 : #else
; 1431 : 		printf( "\nParsing %s of dream.xml: %.3f milli-seconds\n", note, (double)(cend - cstart)/(double)COUNT );
; 1432 : #endif
; 1433 : 	}
; 1434 : 
; 1435 : 	#if defined( _MSC_VER ) &&  defined( DEBUG )
; 1436 : 		_CrtMemCheckpoint( &endMemState );

	mov	esi, esp
	push	OFFSET ?endMemState@@3U_CrtMemState@@A	; endMemState
	call	DWORD PTR __imp___CrtMemCheckpoint
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1437 : 		//_CrtMemDumpStatistics( &endMemState );
; 1438 : 
; 1439 : 		_CrtMemState diffMemState;
; 1440 : 		_CrtMemDifference( &diffMemState, &startMemState, &endMemState );

	mov	esi, esp
	push	OFFSET ?endMemState@@3U_CrtMemState@@A	; endMemState
	push	OFFSET ?startMemState@@3U_CrtMemState@@A ; startMemState
	lea	eax, DWORD PTR _diffMemState$[ebp]
	push	eax
	call	DWORD PTR __imp___CrtMemDifference
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1441 : 		_CrtMemDumpStatistics( &diffMemState );

	mov	esi, esp
	lea	eax, DWORD PTR _diffMemState$[ebp]
	push	eax
	call	DWORD PTR __imp___CrtMemDumpStatistics
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1442 : 		//printf( "new total=%d\n", gNewTotal );
; 1443 : 	#endif
; 1444 : 
; 1445 : 	printf ("\nPass %d, Fail %d\n", gPass, gFail);

	mov	esi, esp
	mov	eax, DWORD PTR ?gFail@@3HA		; gFail
	push	eax
	mov	ecx, DWORD PTR ?gPass@@3HA		; gPass
	push	ecx
	push	OFFSET ??_C@_0BD@GBHHAEKH@?6Pass?5?$CFd?0?5Fail?5?$CFd?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1446 : 
; 1447 : 	return gFail;

	mov	eax, DWORD PTR ?gFail@@3HA		; gFail
$LN35@main:

; 1448 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN253@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 30104				; 00007598H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN253@main:
	DD	100					; 00000064H
	DD	$LN252@main
$LN252@main:
	DD	-476					; fffffe24H
	DD	372					; 00000174H
	DD	$LN151@main
	DD	-856					; fffffca8H
	DD	372					; 00000174H
	DD	$LN152@main
	DD	-1236					; fffffb2cH
	DD	372					; 00000174H
	DD	$LN153@main
	DD	-1316					; fffffadcH
	DD	12					; 0000000cH
	DD	$LN154@main
	DD	-1352					; fffffab8H
	DD	4
	DD	$LN155@main
	DD	-1612					; fffff9b4H
	DD	240					; 000000f0H
	DD	$LN156@main
	DD	-1860					; fffff8bcH
	DD	240					; 000000f0H
	DD	$LN157@main
	DD	-2240					; fffff740H
	DD	372					; 00000174H
	DD	$LN158@main
	DD	-2620					; fffff5c4H
	DD	372					; 00000174H
	DD	$LN159@main
	DD	-3012					; fffff43cH
	DD	372					; 00000174H
	DD	$LN160@main
	DD	-3404					; fffff2b4H
	DD	372					; 00000174H
	DD	$LN161@main
	DD	-3428					; fffff29cH
	DD	4
	DD	$LN162@main
	DD	-3456					; fffff280H
	DD	8
	DD	$LN163@main
	DD	-3848					; fffff0f8H
	DD	372					; 00000174H
	DD	$LN164@main
	DD	-3872					; fffff0e0H
	DD	4
	DD	$LN165@main
	DD	-3884					; fffff0d4H
	DD	4
	DD	$LN166@main
	DD	-3900					; fffff0c4H
	DD	8
	DD	$LN167@main
	DD	-3916					; fffff0b4H
	DD	8
	DD	$LN168@main
	DD	-4308					; ffffef2cH
	DD	372					; 00000174H
	DD	$LN169@main
	DD	-4348					; ffffef04H
	DD	17					; 00000011H
	DD	$LN170@main
	DD	-4372					; ffffeeecH
	DD	15					; 0000000fH
	DD	$LN171@main
	DD	-4396					; ffffeed4H
	DD	13					; 0000000dH
	DD	$LN172@main
	DD	-4708					; ffffed9cH
	DD	256					; 00000100H
	DD	$LN173@main
	DD	-4972					; ffffec94H
	DD	256					; 00000100H
	DD	$LN174@main
	DD	-5364					; ffffeb0cH
	DD	372					; 00000174H
	DD	$LN175@main
	DD	-5768					; ffffe978H
	DD	372					; 00000174H
	DD	$LN176@main
	DD	-6172					; ffffe7e4H
	DD	372					; 00000174H
	DD	$LN177@main
	DD	-6564					; ffffe65cH
	DD	372					; 00000174H
	DD	$LN178@main
	DD	-6944					; ffffe4e0H
	DD	372					; 00000174H
	DD	$LN179@main
	DD	-7396					; ffffe31cH
	DD	372					; 00000174H
	DD	$LN180@main
	DD	-7692					; ffffe1f4H
	DD	240					; 000000f0H
	DD	$LN181@main
	DD	-8724					; ffffddecH
	DD	1024					; 00000400H
	DD	$LN182@main
	DD	-9116					; ffffdc64H
	DD	372					; 00000174H
	DD	$LN183@main
	DD	-9508					; ffffdadcH
	DD	372					; 00000174H
	DD	$LN184@main
	DD	-9900					; ffffd954H
	DD	372					; 00000174H
	DD	$LN185@main
	DD	-10304					; ffffd7c0H
	DD	372					; 00000174H
	DD	$LN186@main
	DD	-10708					; ffffd62cH
	DD	372					; 00000174H
	DD	$LN187@main
	DD	-11112					; ffffd498H
	DD	372					; 00000174H
	DD	$LN188@main
	DD	-11504					; ffffd310H
	DD	372					; 00000174H
	DD	$LN189@main
	DD	-11896					; ffffd188H
	DD	372					; 00000174H
	DD	$LN190@main
	DD	-12276					; ffffd00cH
	DD	372					; 00000174H
	DD	$LN191@main
	DD	-12288					; ffffd000H
	DD	2
	DD	$LN192@main
	DD	-12668					; ffffce84H
	DD	372					; 00000174H
	DD	$LN193@main
	DD	-13048					; ffffcd08H
	DD	372					; 00000174H
	DD	$LN194@main
	DD	-13428					; ffffcb8cH
	DD	372					; 00000174H
	DD	$LN195@main
	DD	-13856					; ffffc9e0H
	DD	372					; 00000174H
	DD	$LN196@main
	DD	-13964					; ffffc974H
	DD	76					; 0000004cH
	DD	$LN197@main
	DD	-14344					; ffffc7f8H
	DD	372					; 00000174H
	DD	$LN198@main
	DD	-14724					; ffffc67cH
	DD	372					; 00000174H
	DD	$LN199@main
	DD	-15104					; ffffc500H
	DD	372					; 00000174H
	DD	$LN200@main
	DD	-15496					; ffffc378H
	DD	372					; 00000174H
	DD	$LN201@main
	DD	-15876					; ffffc1fcH
	DD	372					; 00000174H
	DD	$LN202@main
	DD	-16316					; ffffc044H
	DD	372					; 00000174H
	DD	$LN203@main
	DD	-16696					; ffffbec8H
	DD	372					; 00000174H
	DD	$LN204@main
	DD	-17100					; ffffbd34H
	DD	372					; 00000174H
	DD	$LN205@main
	DD	-17480					; ffffbbb8H
	DD	372					; 00000174H
	DD	$LN206@main
	DD	-17860					; ffffba3cH
	DD	372					; 00000174H
	DD	$LN207@main
	DD	-18252					; ffffb8b4H
	DD	372					; 00000174H
	DD	$LN208@main
	DD	-18668					; ffffb714H
	DD	372					; 00000174H
	DD	$LN209@main
	DD	-18692					; ffffb6fcH
	DD	4
	DD	$LN210@main
	DD	-19072					; ffffb580H
	DD	372					; 00000174H
	DD	$LN211@main
	DD	-19084					; ffffb574H
	DD	4
	DD	$LN212@main
	DD	-19476					; ffffb3ecH
	DD	372					; 00000174H
	DD	$LN213@main
	DD	-19724					; ffffb2f4H
	DD	240					; 000000f0H
	DD	$LN214@main
	DD	-20116					; ffffb16cH
	DD	372					; 00000174H
	DD	$LN215@main
	DD	-20508					; ffffafe4H
	DD	372					; 00000174H
	DD	$LN216@main
	DD	-20532					; ffffafccH
	DD	4
	DD	$LN217@main
	DD	-20544					; ffffafc0H
	DD	4
	DD	$LN218@main
	DD	-20556					; ffffafb4H
	DD	4
	DD	$LN219@main
	DD	-20572					; ffffafa4H
	DD	8
	DD	$LN220@main
	DD	-20581					; ffffaf9bH
	DD	1
	DD	$LN221@main
	DD	-20976					; ffffae10H
	DD	372					; 00000174H
	DD	$LN222@main
	DD	-21368					; ffffac88H
	DD	372					; 00000174H
	DD	$LN223@main
	DD	-21760					; ffffab00H
	DD	372					; 00000174H
	DD	$LN224@main
	DD	-22152					; ffffa978H
	DD	372					; 00000174H
	DD	$LN225@main
	DD	-22532					; ffffa7fcH
	DD	372					; 00000174H
	DD	$LN226@main
	DD	-22924					; ffffa674H
	DD	372					; 00000174H
	DD	$LN227@main
	DD	-23340					; ffffa4d4H
	DD	372					; 00000174H
	DD	$LN228@main
	DD	-23732					; ffffa34cH
	DD	372					; 00000174H
	DD	$LN229@main
	DD	-24136					; ffffa1b8H
	DD	372					; 00000174H
	DD	$LN230@main
	DD	-24396					; ffffa0b4H
	DD	240					; 000000f0H
	DD	$LN231@main
	DD	-24776					; ffff9f38H
	DD	372					; 00000174H
	DD	$LN232@main
	DD	-25168					; ffff9db0H
	DD	372					; 00000174H
	DD	$LN233@main
	DD	-25416					; ffff9cb8H
	DD	240					; 000000f0H
	DD	$LN234@main
	DD	-25796					; ffff9b3cH
	DD	372					; 00000174H
	DD	$LN235@main
	DD	-26044					; ffff9a44H
	DD	240					; 000000f0H
	DD	$LN236@main
	DD	-26472					; ffff9898H
	DD	372					; 00000174H
	DD	$LN237@main
	DD	-26744					; ffff9788H
	DD	240					; 000000f0H
	DD	$LN238@main
	DD	-26992					; ffff9690H
	DD	240					; 000000f0H
	DD	$LN239@main
	DD	-27252					; ffff958cH
	DD	240					; 000000f0H
	DD	$LN240@main
	DD	-27500					; ffff9494H
	DD	240					; 000000f0H
	DD	$LN241@main
	DD	-27892					; ffff930cH
	DD	372					; 00000174H
	DD	$LN242@main
	DD	-28284					; ffff9184H
	DD	372					; 00000174H
	DD	$LN243@main
	DD	-28664					; ffff9008H
	DD	372					; 00000174H
	DD	$LN244@main
	DD	-29044					; ffff8e8cH
	DD	372					; 00000174H
	DD	$LN245@main
	DD	-29060					; ffff8e7cH
	DD	8
	DD	$LN246@main
	DD	-29076					; ffff8e6cH
	DD	8
	DD	$LN247@main
	DD	-29092					; ffff8e5cH
	DD	8
	DD	$LN248@main
	DD	-29520					; ffff8cb0H
	DD	372					; 00000174H
	DD	$LN249@main
	DD	-29580					; ffff8c74H
	DD	52					; 00000034H
	DD	$LN250@main
$LN250@main:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN249@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN248@main:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	0
$LN247@main:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN246@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN245@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN244@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN243@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN242@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN241@main:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	52					; 00000034H
	DB	0
$LN240@main:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	51					; 00000033H
	DB	0
$LN239@main:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN238@main:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN237@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN236@main:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN235@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN234@main:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN233@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN232@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN231@main:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN230@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN229@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN228@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN227@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN226@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN225@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN224@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN223@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN222@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN221@main:
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN220@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN219@main:
	DB	102					; 00000066H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN218@main:
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN217@main:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN216@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN215@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN214@main:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN213@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN212@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	72					; 00000048H
	DB	0
$LN211@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN210@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	72					; 00000048H
	DB	0
$LN209@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN208@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN207@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN206@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	49					; 00000031H
	DB	0
$LN205@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	48					; 00000030H
	DB	0
$LN204@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN203@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN202@main:
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN201@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN200@main:
	DB	120					; 00000078H
	DB	109					; 0000006dH
	DB	108					; 0000006cH
	DB	0
$LN199@main:
	DB	120					; 00000078H
	DB	109					; 0000006dH
	DB	108					; 0000006cH
	DB	0
$LN198@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN197@main:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN196@main:
	DB	120					; 00000078H
	DB	109					; 0000006dH
	DB	108					; 0000006cH
	DB	0
$LN195@main:
	DB	120					; 00000078H
	DB	109					; 0000006dH
	DB	108					; 0000006cH
	DB	0
$LN194@main:
	DB	120					; 00000078H
	DB	109					; 0000006dH
	DB	108					; 0000006cH
	DB	0
$LN193@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN192@main:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN191@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN190@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN189@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN188@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN187@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN186@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN185@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN184@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN183@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN182@main:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN181@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN180@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN179@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN178@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN177@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN176@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN175@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN174@main:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN173@main:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	102					; 00000066H
	DB	121					; 00000079H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN172@main:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN171@main:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	69					; 00000045H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN170@main:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN169@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN168@main:
	DB	100					; 00000064H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN167@main:
	DB	100					; 00000064H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN166@main:
	DB	105					; 00000069H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN165@main:
	DB	105					; 00000069H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN164@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN163@main:
	DB	100					; 00000064H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN162@main:
	DB	105					; 00000069H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN161@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN160@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN159@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	0
$LN158@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN157@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN156@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN155@main:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN154@main:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	0
$LN153@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN152@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN151@main:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$_main$1:
	lea	ecx, DWORD PTR _doc$220[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$2:
	lea	ecx, DWORD PTR _doc$219[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$3:
	lea	ecx, DWORD PTR _doc$218[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$4:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$_main$5:
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$_main$6:
	lea	ecx, DWORD PTR _streamer$207[ebp]
	jmp	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
__unwindfunclet$_main$7:
	lea	ecx, DWORD PTR _streamer$206[ebp]
	jmp	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
__unwindfunclet$_main$8:
	lea	ecx, DWORD PTR _doc$205[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$9:
	lea	ecx, DWORD PTR _doc2$204[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$10:
	lea	ecx, DWORD PTR _doc$202[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$11:
	lea	ecx, DWORD PTR _doc$200[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$12:
	lea	ecx, DWORD PTR _doc$194[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$13:
	lea	ecx, DWORD PTR _doc$187[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$14:
	lea	ecx, DWORD PTR _doc$175[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$15:
	lea	ecx, DWORD PTR _doc$172[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$16:
	lea	ecx, DWORD PTR _doc$169[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$17:
	lea	ecx, DWORD PTR _doc$167[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$18:
	lea	ecx, DWORD PTR _doc$166[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$19:
	lea	ecx, DWORD PTR _doc$159[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$20:
	lea	ecx, DWORD PTR _streamer$154[ebp]
	jmp	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
__unwindfunclet$_main$21:
	lea	ecx, DWORD PTR _doc$151[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$22:
	lea	ecx, DWORD PTR _doc$149[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$23:
	lea	ecx, DWORD PTR _doc$147[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$24:
	lea	ecx, DWORD PTR _doc$144[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$25:
	lea	ecx, DWORD PTR _doc$141[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$26:
	lea	ecx, DWORD PTR _doc$138[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$27:
	lea	ecx, DWORD PTR _doc$136[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$28:
	lea	ecx, DWORD PTR _doc$134[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$29:
	lea	ecx, DWORD PTR _doc$133[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$30:
	lea	ecx, DWORD PTR _doc$131[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$31:
	lea	ecx, DWORD PTR _xml$130[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$32:
	lea	ecx, DWORD PTR _xml$129[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$33:
	lea	ecx, DWORD PTR _xml$124[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$34:
	lea	ecx, DWORD PTR _doc$120[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$35:
	lea	ecx, DWORD PTR _xml$119[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$36:
	lea	ecx, DWORD PTR _xml$118[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$37:
	lea	ecx, DWORD PTR _doc$116[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$38:
	lea	ecx, DWORD PTR _clone$115[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$39:
	lea	ecx, DWORD PTR _doc$109[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$40:
	lea	ecx, DWORD PTR _doc$108[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$41:
	lea	ecx, DWORD PTR _doc0$105[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$42:
	lea	ecx, DWORD PTR _doc1$104[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$43:
	lea	ecx, DWORD PTR _doc2$103[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$44:
	lea	ecx, DWORD PTR _doc$101[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$45:
	lea	ecx, DWORD PTR _doc$97[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$46:
	lea	ecx, DWORD PTR _doc$94[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$47:
	lea	ecx, DWORD PTR _doc$91[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$48:
	lea	ecx, DWORD PTR _printer$90[ebp]
	jmp	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
__unwindfunclet$_main$49:
	lea	ecx, DWORD PTR _doc$88[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$50:
	lea	ecx, DWORD PTR _doc$86[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$51:
	lea	ecx, DWORD PTR _doc$78[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$52:
	lea	ecx, DWORD PTR _doc$76[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$53:
	lea	ecx, DWORD PTR _doc$74[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$54:
	lea	ecx, DWORD PTR _doc$72[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$55:
	lea	ecx, DWORD PTR _doc$71[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$56:
	lea	ecx, DWORD PTR _doc$69[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$57:
	lea	ecx, DWORD PTR _doc$65[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$58:
	lea	ecx, DWORD PTR _doc$63[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$59:
	lea	ecx, DWORD PTR _doc$60[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$60:
	lea	ecx, DWORD PTR _printer$58[ebp]
	jmp	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
__unwindfunclet$_main$61:
	lea	ecx, DWORD PTR _doc$57[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$62:
	lea	ecx, DWORD PTR _doc$55[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$63:
	lea	ecx, DWORD PTR _printer$54[ebp]
	jmp	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
__unwindfunclet$_main$64:
	lea	ecx, DWORD PTR _doc$53[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$65:
	lea	ecx, DWORD PTR _printer$52[ebp]
	jmp	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
__unwindfunclet$_main$66:
	lea	ecx, DWORD PTR _doc$47[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$67:
	lea	ecx, DWORD PTR _printer1$44[ebp]
	jmp	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
__unwindfunclet$_main$68:
	lea	ecx, DWORD PTR _printer2$43[ebp]
	jmp	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
__unwindfunclet$_main$69:
	lea	ecx, DWORD PTR _printer3$41[ebp]
	jmp	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
__unwindfunclet$_main$70:
	lea	ecx, DWORD PTR _printer4$40[ebp]
	jmp	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
__unwindfunclet$_main$71:
	lea	ecx, DWORD PTR _doc$38[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$72:
	lea	ecx, DWORD PTR _doc$36[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$73:
	lea	ecx, DWORD PTR _doc$35[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$74:
	lea	ecx, DWORD PTR _doc$34[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$_main$75:
	lea	ecx, DWORD PTR _doc$26[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-30108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ?example_4@@YA_NXZ
_TEXT	SEGMENT
tv154 = -652						; size = 4
$T2 = -641						; size = 1
_textApproachElement$ = -440				; size = 4
_attributeApproachElement$ = -428			; size = 4
_v1$ = -416						; size = 4
_v0$ = -404						; size = 4
_doc$ = -392						; size = 372
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?example_4@@YA_NXZ PROC					; example_4, COMDAT

; 218  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?example_4@@YA_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 640				; 00000280H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-652]
	mov	ecx, 160				; 000000a0H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 219  : 	static const char* xml =
; 220  : 		"<information>"
; 221  : 		"	<attributeApproach v='2' />"
; 222  : 		"	<textApproach>"
; 223  : 		"		<v>2</v>"
; 224  : 		"	</textApproach>"
; 225  : 		"</information>";
; 226  : 
; 227  : 	XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 228  : 	doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR ?xml@?1??example_4@@YA_NXZ@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc$[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 229  : 
; 230  : 	int v0 = 0;

	mov	DWORD PTR _v0$[ebp], 0

; 231  : 	int v1 = 0;

	mov	DWORD PTR _v1$[ebp], 0

; 232  : 
; 233  : 	XMLElement* attributeApproachElement = doc.FirstChildElement()->FirstChildElement( "attributeApproach" );

	push	OFFSET ??_C@_0BC@BLMCCKNI@attributeApproach?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _attributeApproachElement$[ebp], eax

; 234  : 	attributeApproachElement->QueryIntAttribute( "v", &v0 );

	lea	eax, DWORD PTR _v0$[ebp]
	push	eax
	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	ecx, DWORD PTR _attributeApproachElement$[ebp]
	call	?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute

; 235  : 
; 236  : 	XMLElement* textApproachElement = doc.FirstChildElement()->FirstChildElement( "textApproach" );

	push	OFFSET ??_C@_0N@DBACDMDK@textApproach?$AA@
	push	0
	lea	ecx, DWORD PTR _doc$[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _textApproachElement$[ebp], eax

; 237  : 	textApproachElement->FirstChildElement( "v" )->QueryIntText( &v1 );

	lea	eax, DWORD PTR _v1$[ebp]
	push	eax
	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	ecx, DWORD PTR _textApproachElement$[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?QueryIntText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAH@Z ; tinyxml2::XMLElement::QueryIntText

; 238  : 
; 239  : 	printf( "Both values are the same: %d and %d\n", v0, v1 );

	mov	esi, esp
	mov	eax, DWORD PTR _v1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v0$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CF@NAELEFGH@Both?5values?5are?5the?5same?3?5?$CFd?5and@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 240  : 
; 241  : 	return !doc.Error() && ( v0 == v1 );

	lea	ecx, DWORD PTR _doc$[ebp]
	call	?Error@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::Error
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@example_4
	mov	ecx, DWORD PTR _v0$[ebp]
	cmp	ecx, DWORD PTR _v1$[ebp]
	jne	SHORT $LN3@example_4
	mov	DWORD PTR tv154[ebp], 1
	jmp	SHORT $LN4@example_4
$LN3@example_4:
	mov	DWORD PTR tv154[ebp], 0
$LN4@example_4:
	mov	dl, BYTE PTR tv154[ebp]
	mov	BYTE PTR $T2[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
	mov	al, BYTE PTR $T2[ebp]

; 242  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@example_4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 652				; 0000028cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@example_4:
	DD	3
	DD	$LN10@example_4
$LN10@example_4:
	DD	-392					; fffffe78H
	DD	372					; 00000174H
	DD	$LN6@example_4
	DD	-404					; fffffe6cH
	DD	4
	DD	$LN7@example_4
	DD	-416					; fffffe60H
	DD	4
	DD	$LN8@example_4
$LN8@example_4:
	DB	118					; 00000076H
	DB	49					; 00000031H
	DB	0
$LN7@example_4:
	DB	118					; 00000076H
	DB	48					; 00000030H
	DB	0
$LN6@example_4:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?example_4@@YA_NXZ$0:
	lea	ecx, DWORD PTR _doc$[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__ehhandler$?example_4@@YA_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-656]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?example_4@@YA_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?example_4@@YA_NXZ ENDP					; example_4
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ?example_3@@YAHXZ
_TEXT	SEGMENT
tv131 = -640						; size = 4
$T2 = -632						; size = 4
_textNode$ = -428					; size = 4
_title$ = -416						; size = 4
_titleElement$ = -404					; size = 4
_doc$ = -392						; size = 372
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?example_3@@YAHXZ PROC					; example_3, COMDAT

; 131  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?example_3@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 628				; 00000274H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-640]
	mov	ecx, 157				; 0000009dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 132  : 	static const char* xml =
; 133  : 		"<?xml version=\"1.0\"?>"
; 134  : 		"<!DOCTYPE PLAY SYSTEM \"play.dtd\">"
; 135  : 		"<PLAY>"
; 136  : 		"<TITLE>A Midsummer Night's Dream</TITLE>"
; 137  : 		"</PLAY>";
; 138  : 
; 139  : 	XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 140  : 	doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR ?xml@?1??example_3@@YAHXZ@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc$[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 141  : 
; 142  : 	XMLElement* titleElement = doc.FirstChildElement( "PLAY" )->FirstChildElement( "TITLE" );

	push	OFFSET ??_C@_05DMCAHJJE@TITLE?$AA@
	push	OFFSET ??_C@_04MKCNCBEG@PLAY?$AA@
	lea	ecx, DWORD PTR _doc$[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	ecx, eax
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR _titleElement$[ebp], eax

; 143  : 	const char* title = titleElement->GetText();

	mov	ecx, DWORD PTR _titleElement$[ebp]
	call	?GetText@XMLElement@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLElement::GetText
	mov	DWORD PTR _title$[ebp], eax

; 144  : 	printf( "Name of play (1): %s\n", title );

	mov	esi, esp
	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@BOKCOHLJ@Name?5of?5play?5?$CI1?$CJ?3?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 145  : 
; 146  : 	XMLText* textNode = titleElement->FirstChild()->ToText();

	mov	ecx, DWORD PTR _titleElement$[ebp]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR tv131[ebp], eax
	mov	eax, DWORD PTR tv131[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv131[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _textNode$[ebp], eax

; 147  : 	title = textNode->Value();

	mov	ecx, DWORD PTR _textNode$[ebp]
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value
	mov	DWORD PTR _title$[ebp], eax

; 148  : 	printf( "Name of play (2): %s\n", title );

	mov	esi, esp
	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@JACNOAFK@Name?5of?5play?5?$CI2?$CJ?3?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 149  : 
; 150  : 	return doc.ErrorID();

	lea	ecx, DWORD PTR _doc$[ebp]
	call	?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ ; tinyxml2::XMLDocument::ErrorID
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
	mov	eax, DWORD PTR $T2[ebp]

; 151  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@example_3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 640				; 00000280H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@example_3:
	DD	1
	DD	$LN6@example_3
$LN6@example_3:
	DD	-392					; fffffe78H
	DD	372					; 00000174H
	DD	$LN4@example_3
$LN4@example_3:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?example_3@@YAHXZ$0:
	lea	ecx, DWORD PTR _doc$[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__ehhandler$?example_3@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-644]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?example_3@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?example_3@@YAHXZ ENDP					; example_3
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ?example_2@@YAHXZ
_TEXT	SEGMENT
$T2 = -596						; size = 4
_doc$ = -392						; size = 372
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?example_2@@YAHXZ PROC					; example_2, COMDAT

; 112  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?example_2@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 588				; 0000024cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-600]
	mov	ecx, 147				; 00000093H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 113  : 	static const char* xml = "<element/>";
; 114  : 	XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 115  : 	doc.Parse( xml );

	push	-1
	mov	eax, DWORD PTR ?xml@?1??example_2@@YAHXZ@4PBDB
	push	eax
	lea	ecx, DWORD PTR _doc$[ebp]
	call	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse

; 116  : 
; 117  : 	return doc.ErrorID();

	lea	ecx, DWORD PTR _doc$[ebp]
	call	?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ ; tinyxml2::XMLDocument::ErrorID
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
	mov	eax, DWORD PTR $T2[ebp]

; 118  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@example_2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 600				; 00000258H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@example_2:
	DD	1
	DD	$LN6@example_2
$LN6@example_2:
	DD	-392					; fffffe78H
	DD	372					; 00000174H
	DD	$LN4@example_2
$LN4@example_2:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?example_2@@YAHXZ$0:
	lea	ecx, DWORD PTR _doc$[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__ehhandler$?example_2@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-604]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?example_2@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?example_2@@YAHXZ ENDP					; example_2
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ?example_1@@YAHXZ
_TEXT	SEGMENT
$T2 = -596						; size = 4
_doc$ = -392						; size = 372
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?example_1@@YAHXZ PROC					; example_1, COMDAT

; 94   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?example_1@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 588				; 0000024cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-600]
	mov	ecx, 147				; 00000093H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 95   : 	XMLDocument doc;

	push	1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
	push	0
	push	1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 96   : 	doc.LoadFile( "resources/dream.xml" );

	push	OFFSET ??_C@_0BE@MGFIECLE@resources?1dream?4xml?$AA@
	lea	ecx, DWORD PTR _doc$[ebp]
	call	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile

; 97   : 
; 98   : 	return doc.ErrorID();

	lea	ecx, DWORD PTR _doc$[ebp]
	call	?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ ; tinyxml2::XMLDocument::ErrorID
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _doc$[ebp]
	call	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
	mov	eax, DWORD PTR $T2[ebp]

; 99   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@example_1
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 600				; 00000258H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@example_1:
	DD	1
	DD	$LN6@example_1
$LN6@example_1:
	DD	-392					; fffffe78H
	DD	372					; 00000174H
	DD	$LN4@example_1
$LN4@example_1:
	DB	100					; 00000064H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?example_1@@YAHXZ$0:
	lea	ecx, DWORD PTR _doc$[ebp]
	jmp	??1XMLDocument@tinyxml2@@UAE@XZ		; tinyxml2::XMLDocument::~XMLDocument
__ehhandler$?example_1@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-604]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?example_1@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?example_1@@YAHXZ ENDP					; example_1
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ?NullLineEndings@@YAXPAD@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?NullLineEndings@@YAXPAD@Z PROC				; NullLineEndings, COMDAT

; 82   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN4@NullLineEn:

; 83   : 	while( p && *p ) {

	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN5@NullLineEn
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN5@NullLineEn

; 84   : 		if ( *p == '\n' || *p == '\r' ) {

	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN1@NullLineEn
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 13					; 0000000dH
	jne	SHORT $LN2@NullLineEn
$LN1@NullLineEn:

; 85   : 			*p = 0;

	mov	eax, DWORD PTR _p$[ebp]
	mov	BYTE PTR [eax], 0

; 86   : 			return;

	jmp	SHORT $LN5@NullLineEn
$LN2@NullLineEn:

; 87   : 		}
; 88   : 		++p;

	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax

; 89   : 	}

	jmp	SHORT $LN4@NullLineEn
$LN5@NullLineEn:

; 90   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NullLineEndings@@YAXPAD@Z ENDP				; NullLineEndings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\xmltest.cpp
;	COMDAT ?XMLTest@@YA_NPBD00_N1@Z
_TEXT	SEGMENT
tv68 = -208						; size = 4
_pass$ = -5						; size = 1
_testString$ = 8					; size = 4
_expected$ = 12						; size = 4
_found$ = 16						; size = 4
_echo$ = 20						; size = 1
_extraNL$ = 24						; size = 1
?XMLTest@@YA_NPBD00_N1@Z PROC				; XMLTest, COMDAT

; 31   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 32   : 	bool pass = !strcmp( expected, found );

	mov	eax, DWORD PTR _found$[ebp]
	push	eax
	mov	ecx, DWORD PTR _expected$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN11@XMLTest
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN12@XMLTest
$LN11@XMLTest:
	mov	DWORD PTR tv68[ebp], 0
$LN12@XMLTest:
	mov	dl, BYTE PTR tv68[ebp]
	mov	BYTE PTR _pass$[ebp], dl

; 33   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN8@XMLTest

; 34   : 		printf ("[pass]");

	mov	esi, esp
	push	OFFSET ??_C@_06MMBJDEJC@?$FLpass?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 35   : 	else

	jmp	SHORT $LN7@XMLTest
$LN8@XMLTest:

; 36   : 		printf ("[fail]");

	mov	esi, esp
	push	OFFSET ??_C@_06DBEIIGKC@?$FLfail?$FN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@XMLTest:

; 37   : 
; 38   : 	if ( !echo ) {

	movzx	eax, BYTE PTR _echo$[ebp]
	test	eax, eax
	jne	SHORT $LN6@XMLTest

; 39   : 		printf (" %s\n", testString);

	mov	esi, esp
	mov	eax, DWORD PTR _testString$[ebp]
	push	eax
	push	OFFSET ??_C@_04MDKIEGGJ@?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 40   : 	}
; 41   : 	else {

	jmp	SHORT $LN5@XMLTest
$LN6@XMLTest:

; 42   : 		if ( extraNL ) {

	movzx	eax, BYTE PTR _extraNL$[ebp]
	test	eax, eax
	je	SHORT $LN4@XMLTest

; 43   : 			printf( " %s\n", testString );

	mov	esi, esp
	mov	eax, DWORD PTR _testString$[ebp]
	push	eax
	push	OFFSET ??_C@_04MDKIEGGJ@?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 44   : 			printf( "%s\n", expected );

	mov	esi, esp
	mov	eax, DWORD PTR _expected$[ebp]
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 45   : 			printf( "%s\n", found );

	mov	esi, esp
	mov	eax, DWORD PTR _found$[ebp]
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 46   : 		}
; 47   : 		else {

	jmp	SHORT $LN5@XMLTest
$LN4@XMLTest:

; 48   : 			printf (" %s [%s][%s]\n", testString, expected, found);

	mov	esi, esp
	mov	eax, DWORD PTR _found$[ebp]
	push	eax
	mov	ecx, DWORD PTR _expected$[ebp]
	push	ecx
	mov	edx, DWORD PTR _testString$[ebp]
	push	edx
	push	OFFSET ??_C@_0O@PJBPHMNJ@?5?$CFs?5?$FL?$CFs?$FN?$FL?$CFs?$FN?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@XMLTest:

; 49   : 		}
; 50   : 	}
; 51   : 
; 52   : 	if ( pass )

	movzx	eax, BYTE PTR _pass$[ebp]
	test	eax, eax
	je	SHORT $LN2@XMLTest

; 53   : 		++gPass;

	mov	eax, DWORD PTR ?gPass@@3HA		; gPass
	add	eax, 1
	mov	DWORD PTR ?gPass@@3HA, eax		; gPass

; 54   : 	else

	jmp	SHORT $LN1@XMLTest
$LN2@XMLTest:

; 55   : 		++gFail;

	mov	eax, DWORD PTR ?gFail@@3HA		; gFail
	add	eax, 1
	mov	DWORD PTR ?gFail@@3HA, eax		; gFail
$LN1@XMLTest:

; 56   : 	return pass;

	mov	al, BYTE PTR _pass$[ebp]

; 57   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?XMLTest@@YA_NPBD00_N1@Z ENDP				; XMLTest
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLPrinter@tinyxml2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLPrinter@tinyxml2@@UAEPAXI@Z PROC			; tinyxml2::XMLPrinter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1XMLPrinter@tinyxml2@@UAE@XZ		; tinyxml2::XMLPrinter::~XMLPrinter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GXMLPrinter@tinyxml2@@UAEPAXI@Z ENDP			; tinyxml2::XMLPrinter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z PROC	; tinyxml2::XMLPrinter::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?__autoclassinit@?$DynArray@PBD$09@tinyxml2@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?__autoclassinit@?$DynArray@D$0BE@@tinyxml2@@QAEXI@Z
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@XMLPrinter@tinyxml2@@QAEXI@Z ENDP	; tinyxml2::XMLPrinter::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@?$DynArray@D$0BE@@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@?$DynArray@D$0BE@@tinyxml2@@QAEXI@Z PROC ; tinyxml2::DynArray<char,20>::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@?$DynArray@D$0BE@@tinyxml2@@QAEXI@Z ENDP ; tinyxml2::DynArray<char,20>::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?Mem@?$DynArray@D$0BE@@tinyxml2@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Mem@?$DynArray@D$0BE@@tinyxml2@@QBEPBDXZ PROC		; tinyxml2::DynArray<char,20>::Mem, COMDAT
; _this$ = ecx

; 276  :     const T* Mem() const				{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 277  :         return _mem;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 278  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Mem@?$DynArray@D$0BE@@tinyxml2@@QBEPBDXZ ENDP		; tinyxml2::DynArray<char,20>::Mem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?Size@?$DynArray@D$0BE@@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$DynArray@D$0BE@@tinyxml2@@QBEHXZ PROC		; tinyxml2::DynArray<char,20>::Size, COMDAT
; _this$ = ecx

; 268  :     int Size() const					{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 269  :         return _size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]

; 270  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$DynArray@D$0BE@@tinyxml2@@QBEHXZ ENDP		; tinyxml2::DynArray<char,20>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ??1?$DynArray@D$0BE@@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$DynArray@D$0BE@@tinyxml2@@QAE@XZ PROC		; tinyxml2::DynArray<char,20>::~DynArray<char,20>, COMDAT
; _this$ = ecx

; 218  :     ~DynArray() {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 219  :         if ( _mem != _pool ) {

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN2@DynArray

; 220  :             delete [] _mem;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@DynArray:

; 221  :         }
; 222  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$DynArray@D$0BE@@tinyxml2@@QAE@XZ ENDP		; tinyxml2::DynArray<char,20>::~DynArray<char,20>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@?$DynArray@PBD$09@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@?$DynArray@PBD$09@tinyxml2@@QAEXI@Z PROC ; tinyxml2::DynArray<char const *,10>::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@?$DynArray@PBD$09@tinyxml2@@QAEXI@Z ENDP ; tinyxml2::DynArray<char const *,10>::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ PROC		; tinyxml2::DynArray<char const *,10>::~DynArray<char const *,10>, COMDAT
; _this$ = ecx

; 218  :     ~DynArray() {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 219  :         if ( _mem != _pool ) {

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN2@DynArray

; 220  :             delete [] _mem;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@DynArray:

; 221  :         }
; 222  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ ENDP		; tinyxml2::DynArray<char const *,10>::~DynArray<char const *,10>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?CompactMode@XMLPrinter@tinyxml2@@MAE_NABVXMLElement@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?CompactMode@XMLPrinter@tinyxml2@@MAE_NABVXMLElement@2@@Z PROC ; tinyxml2::XMLPrinter::CompactMode, COMDAT
; _this$ = ecx

; 2052 : 	virtual bool CompactMode( const XMLElement& )	{ return _compactMode; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+77]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?CompactMode@XMLPrinter@tinyxml2@@MAE_NABVXMLElement@2@@Z ENDP ; tinyxml2::XMLPrinter::CompactMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?CStrSize@XMLPrinter@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?CStrSize@XMLPrinter@tinyxml2@@QBEHXZ PROC		; tinyxml2::XMLPrinter::CStrSize, COMDAT
; _this$ = ecx

; 2039 :     int CStrSize() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2040 :         return _buffer.Size();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?Size@?$DynArray@D$0BE@@tinyxml2@@QBEHXZ ; tinyxml2::DynArray<char,20>::Size

; 2041 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CStrSize@XMLPrinter@tinyxml2@@QBEHXZ ENDP		; tinyxml2::XMLPrinter::CStrSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ PROC		; tinyxml2::XMLPrinter::CStr, COMDAT
; _this$ = ecx

; 2031 :     const char* CStr() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2032 :         return _buffer.Mem();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?Mem@?$DynArray@D$0BE@@tinyxml2@@QBEPBDXZ ; tinyxml2::DynArray<char,20>::Mem

; 2033 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CStr@XMLPrinter@tinyxml2@@QBEPBDXZ ENDP		; tinyxml2::XMLPrinter::CStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z PROC ; tinyxml2::XMLPrinter::VisitExit, COMDAT
; _this$ = ecx

; 2015 :     virtual bool VisitExit( const XMLDocument& /*doc*/ )			{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2016 :         return true;

	mov	al, 1

; 2017 :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z ENDP ; tinyxml2::XMLPrinter::VisitExit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ??1XMLPrinter@tinyxml2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1XMLPrinter@tinyxml2@@UAE@XZ PROC			; tinyxml2::XMLPrinter::~XMLPrinter, COMDAT
; _this$ = ecx

; 1978 :     virtual ~XMLPrinter()	{}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1XMLPrinter@tinyxml2@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7XMLPrinter@tinyxml2@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??1?$DynArray@D$0BE@@tinyxml2@@QAE@XZ	; tinyxml2::DynArray<char,20>::~DynArray<char,20>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ	; tinyxml2::DynArray<char const *,10>::~DynArray<char const *,10>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1XMLVisitor@tinyxml2@@UAE@XZ		; tinyxml2::XMLVisitor::~XMLVisitor
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1XMLPrinter@tinyxml2@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1XMLVisitor@tinyxml2@@UAE@XZ		; tinyxml2::XMLVisitor::~XMLVisitor
__unwindfunclet$??1XMLPrinter@tinyxml2@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ	; tinyxml2::DynArray<char const *,10>::~DynArray<char const *,10>
__ehhandler$??1XMLPrinter@tinyxml2@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1XMLPrinter@tinyxml2@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1XMLPrinter@tinyxml2@@UAE@XZ ENDP			; tinyxml2::XMLPrinter::~XMLPrinter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@XMLConstHandle@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@XMLConstHandle@tinyxml2@@QAEXI@Z PROC	; tinyxml2::XMLConstHandle::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@XMLConstHandle@tinyxml2@@QAEXI@Z ENDP	; tinyxml2::XMLConstHandle::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?ToElement@XMLConstHandle@tinyxml2@@QBEPBVXMLElement@2@XZ
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
?ToElement@XMLConstHandle@tinyxml2@@QBEPBVXMLElement@2@XZ PROC ; tinyxml2::XMLConstHandle::ToElement, COMDAT
; _this$ = ecx

; 1908 :     const XMLElement* ToElement() const			{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1909 :         return ( ( _node == 0 ) ? 0 : _node->ToElement() );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@ToElement
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN4@ToElement
$LN3@ToElement:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
$LN4@ToElement:
	mov	eax, DWORD PTR tv74[ebp]

; 1910 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ToElement@XMLConstHandle@tinyxml2@@QBEPBVXMLElement@2@XZ ENDP ; tinyxml2::XMLConstHandle::ToElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?FirstChildElement@XMLConstHandle@tinyxml2@@QBE?BV12@PBD@Z
_TEXT	SEGMENT
tv75 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_value$ = 12						; size = 4
?FirstChildElement@XMLConstHandle@tinyxml2@@QBE?BV12@PBD@Z PROC ; tinyxml2::XMLConstHandle::FirstChildElement, COMDAT
; _this$ = ecx

; 1882 :     const XMLConstHandle FirstChildElement( const char* value=0 ) const				{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1883 :         return XMLConstHandle( _node ? _node->FirstChildElement( value ) : 0 );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@FirstChild
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@FirstChild
$LN3@FirstChild:
	mov	DWORD PTR tv75[ebp], 0
$LN4@FirstChild:
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0XMLConstHandle@tinyxml2@@QAE@PBVXMLNode@1@@Z ; tinyxml2::XMLConstHandle::XMLConstHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1884 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?FirstChildElement@XMLConstHandle@tinyxml2@@QBE?BV12@PBD@Z ENDP ; tinyxml2::XMLConstHandle::FirstChildElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?FirstChild@XMLConstHandle@tinyxml2@@QBE?BV12@XZ
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?FirstChild@XMLConstHandle@tinyxml2@@QBE?BV12@XZ PROC	; tinyxml2::XMLConstHandle::FirstChild, COMDAT
; _this$ = ecx

; 1879 :     const XMLConstHandle FirstChild() const											{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1880 :         return XMLConstHandle( _node ? _node->FirstChild() : 0 );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@FirstChild
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@FirstChild
$LN3@FirstChild:
	mov	DWORD PTR tv71[ebp], 0
$LN4@FirstChild:
	mov	edx, DWORD PTR tv71[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0XMLConstHandle@tinyxml2@@QAE@PBVXMLNode@1@@Z ; tinyxml2::XMLConstHandle::XMLConstHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1881 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FirstChild@XMLConstHandle@tinyxml2@@QBE?BV12@XZ ENDP	; tinyxml2::XMLConstHandle::FirstChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ??0XMLConstHandle@tinyxml2@@QAE@ABVXMLNode@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_node$ = 8						; size = 4
??0XMLConstHandle@tinyxml2@@QAE@ABVXMLNode@1@@Z PROC	; tinyxml2::XMLConstHandle::XMLConstHandle, COMDAT
; _this$ = ecx

; 1867 :     XMLConstHandle( const XMLNode& node )											{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1868 :         _node = &node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax], ecx

; 1869 :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0XMLConstHandle@tinyxml2@@QAE@ABVXMLNode@1@@Z ENDP	; tinyxml2::XMLConstHandle::XMLConstHandle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ??0XMLConstHandle@tinyxml2@@QAE@PBVXMLNode@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_node$ = 8						; size = 4
??0XMLConstHandle@tinyxml2@@QAE@PBVXMLNode@1@@Z PROC	; tinyxml2::XMLConstHandle::XMLConstHandle, COMDAT
; _this$ = ecx

; 1864 :     XMLConstHandle( const XMLNode* node )											{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1865 :         _node = node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax], ecx

; 1866 :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0XMLConstHandle@tinyxml2@@QAE@PBVXMLNode@1@@Z ENDP	; tinyxml2::XMLConstHandle::XMLConstHandle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@XMLHandle@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@XMLHandle@tinyxml2@@QAEXI@Z PROC	; tinyxml2::XMLHandle::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@XMLHandle@tinyxml2@@QAEXI@Z ENDP	; tinyxml2::XMLHandle::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?ToElement@XMLHandle@tinyxml2@@QAEPAVXMLElement@2@XZ
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
?ToElement@XMLHandle@tinyxml2@@QAEPAVXMLElement@2@XZ PROC ; tinyxml2::XMLHandle::ToElement, COMDAT
; _this$ = ecx

; 1836 :     XMLElement* ToElement() 					{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1837 :         return ( ( _node == 0 ) ? 0 : _node->ToElement() );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@ToElement
	mov	DWORD PTR tv74[ebp], 0
	jmp	SHORT $LN4@ToElement
$LN3@ToElement:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
$LN4@ToElement:
	mov	eax, DWORD PTR tv74[ebp]

; 1838 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ToElement@XMLHandle@tinyxml2@@QAEPAVXMLElement@2@XZ ENDP ; tinyxml2::XMLHandle::ToElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?FirstChildElement@XMLHandle@tinyxml2@@QAE?AV12@PBD@Z
_TEXT	SEGMENT
tv75 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_value$ = 12						; size = 4
?FirstChildElement@XMLHandle@tinyxml2@@QAE?AV12@PBD@Z PROC ; tinyxml2::XMLHandle::FirstChildElement, COMDAT
; _this$ = ecx

; 1803 :     XMLHandle FirstChildElement( const char* value=0 )						{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1804 :         return XMLHandle( _node ? _node->FirstChildElement( value ) : 0 );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@FirstChild
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@FirstChild
$LN3@FirstChild:
	mov	DWORD PTR tv75[ebp], 0
$LN4@FirstChild:
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0XMLHandle@tinyxml2@@QAE@PAVXMLNode@1@@Z ; tinyxml2::XMLHandle::XMLHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1805 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?FirstChildElement@XMLHandle@tinyxml2@@QAE?AV12@PBD@Z ENDP ; tinyxml2::XMLHandle::FirstChildElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?FirstChild@XMLHandle@tinyxml2@@QAE?AV12@XZ
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?FirstChild@XMLHandle@tinyxml2@@QAE?AV12@XZ PROC	; tinyxml2::XMLHandle::FirstChild, COMDAT
; _this$ = ecx

; 1799 :     XMLHandle FirstChild() 													{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1800 :         return XMLHandle( _node ? _node->FirstChild() : 0 );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@FirstChild
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@FirstChild
$LN3@FirstChild:
	mov	DWORD PTR tv71[ebp], 0
$LN4@FirstChild:
	mov	edx, DWORD PTR tv71[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0XMLHandle@tinyxml2@@QAE@PAVXMLNode@1@@Z ; tinyxml2::XMLHandle::XMLHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1801 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FirstChild@XMLHandle@tinyxml2@@QAE?AV12@XZ ENDP	; tinyxml2::XMLHandle::FirstChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ??0XMLHandle@tinyxml2@@QAE@AAVXMLNode@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_node$ = 8						; size = 4
??0XMLHandle@tinyxml2@@QAE@AAVXMLNode@1@@Z PROC		; tinyxml2::XMLHandle::XMLHandle, COMDAT
; _this$ = ecx

; 1785 :     XMLHandle( XMLNode& node )												{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1786 :         _node = &node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax], ecx

; 1787 :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0XMLHandle@tinyxml2@@QAE@AAVXMLNode@1@@Z ENDP		; tinyxml2::XMLHandle::XMLHandle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ??0XMLHandle@tinyxml2@@QAE@PAVXMLNode@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_node$ = 8						; size = 4
??0XMLHandle@tinyxml2@@QAE@PAVXMLNode@1@@Z PROC		; tinyxml2::XMLHandle::XMLHandle, COMDAT
; _this$ = ecx

; 1781 :     XMLHandle( XMLNode* node )												{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1782 :         _node = node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax], ecx

; 1783 :     }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0XMLHandle@tinyxml2@@QAE@PAVXMLNode@1@@Z ENDP		; tinyxml2::XMLHandle::XMLHandle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z PROC	; tinyxml2::XMLDocument::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?__autoclassinit@XMLNode@tinyxml2@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?__autoclassinit@?$MemPoolT@$0DE@@tinyxml2@@QAEXI@Z
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	?__autoclassinit@?$MemPoolT@$0CE@@tinyxml2@@QAEXI@Z
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	call	?__autoclassinit@?$MemPoolT@$0DA@@tinyxml2@@QAEXI@Z
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 296				; 00000128H
	call	?__autoclassinit@?$MemPoolT@$0CM@@tinyxml2@@QAEXI@Z
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@XMLDocument@tinyxml2@@QAEXI@Z ENDP	; tinyxml2::XMLDocument::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@?$MemPoolT@$0CM@@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@?$MemPoolT@$0CM@@tinyxml2@@QAEXI@Z PROC ; tinyxml2::MemPoolT<44>::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@?$MemPoolT@$0CM@@tinyxml2@@QAEXI@Z ENDP ; tinyxml2::MemPoolT<44>::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEXI@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEXI@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@?$MemPoolT@$0DA@@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@?$MemPoolT@$0DA@@tinyxml2@@QAEXI@Z PROC ; tinyxml2::MemPoolT<48>::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@?$MemPoolT@$0DA@@tinyxml2@@QAEXI@Z ENDP ; tinyxml2::MemPoolT<48>::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEXI@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEXI@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@?$MemPoolT@$0CE@@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@?$MemPoolT@$0CE@@tinyxml2@@QAEXI@Z PROC ; tinyxml2::MemPoolT<36>::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@?$MemPoolT@$0CE@@tinyxml2@@QAEXI@Z ENDP ; tinyxml2::MemPoolT<36>::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEXI@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEXI@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@?$MemPoolT@$0DE@@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@?$MemPoolT@$0DE@@tinyxml2@@QAEXI@Z PROC ; tinyxml2::MemPoolT<52>::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@?$MemPoolT@$0DE@@tinyxml2@@QAEXI@Z ENDP ; tinyxml2::MemPoolT<52>::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEXI@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEXI@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ PROC ; tinyxml2::XMLDocument::ErrorID, COMDAT
; _this$ = ecx

; 1672 :     XMLError  ErrorID() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1673 :         return _errorID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+48]

; 1674 :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ErrorID@XMLDocument@tinyxml2@@QBE?AW4XMLError@2@XZ ENDP ; tinyxml2::XMLDocument::ErrorID
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?Error@XMLDocument@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?Error@XMLDocument@tinyxml2@@QBE_NXZ PROC		; tinyxml2::XMLDocument::Error, COMDAT
; _this$ = ecx

; 1668 :     bool Error() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1669 :         return _errorID != XML_NO_ERROR;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN3@Error
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Error
$LN3@Error:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Error:
	mov	al, BYTE PTR tv66[ebp]

; 1670 :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Error@XMLDocument@tinyxml2@@QBE_NXZ ENDP		; tinyxml2::XMLDocument::Error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?DeleteNode@XMLDocument@tinyxml2@@QAEXPAVXMLNode@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_node$ = 8						; size = 4
?DeleteNode@XMLDocument@tinyxml2@@QAEXPAVXMLNode@2@@Z PROC ; tinyxml2::XMLDocument::DeleteNode, COMDAT
; _this$ = ecx

; 1661 :     void DeleteNode( XMLNode* node )	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1662 :         node->_parent->DeleteChild( node );

	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?DeleteChild@XMLNode@tinyxml2@@QAEXPAV12@@Z ; tinyxml2::XMLNode::DeleteChild

; 1663 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DeleteNode@XMLDocument@tinyxml2@@QAEXPAVXMLNode@2@@Z ENDP ; tinyxml2::XMLDocument::DeleteNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ PROC ; tinyxml2::XMLDocument::RootElement, COMDAT
; _this$ = ecx

; 1596 :     XMLElement* RootElement()				{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1597 :         return FirstChildElement();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement

; 1598 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RootElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@XZ ENDP ; tinyxml2::XMLDocument::RootElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?SetBOM@XMLDocument@tinyxml2@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_useBOM$ = 8						; size = 1
?SetBOM@XMLDocument@tinyxml2@@QAEX_N@Z PROC		; tinyxml2::XMLDocument::SetBOM, COMDAT
; _this$ = ecx

; 1589 :     void SetBOM( bool useBOM ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1590 :         _writeBOM = useBOM;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _useBOM$[ebp]
	mov	BYTE PTR [eax+44], cl

; 1591 :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetBOM@XMLDocument@tinyxml2@@QAEX_N@Z ENDP		; tinyxml2::XMLDocument::SetBOM
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?HasBOM@XMLDocument@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?HasBOM@XMLDocument@tinyxml2@@QBE_NXZ PROC		; tinyxml2::XMLDocument::HasBOM, COMDAT
; _this$ = ecx

; 1584 :     bool HasBOM() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1585 :         return _writeBOM;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+44]

; 1586 :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?HasBOM@XMLDocument@tinyxml2@@QBE_NXZ ENDP		; tinyxml2::XMLDocument::HasBOM
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ PROC ; tinyxml2::XMLElement::FirstAttribute, COMDAT
; _this$ = ecx

; 1352 :     const XMLAttribute* FirstAttribute() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1353 :         return _rootAttribute;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+48]

; 1354 :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ ENDP ; tinyxml2::XMLElement::FirstAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?SetAttribute@XMLElement@tinyxml2@@QAEXPBDM@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?SetAttribute@XMLElement@tinyxml2@@QAEXPBDM@Z PROC	; tinyxml2::XMLElement::SetAttribute, COMDAT
; _this$ = ecx

; 1341 :     void SetAttribute( const char* name, float value )		{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1342 :         XMLAttribute* a = FindOrCreateAttribute( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindOrCreateAttribute
	mov	DWORD PTR _a$[ebp], eax

; 1343 :         a->SetAttribute( value );

	push	ecx
	movss	xmm0, DWORD PTR _value$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _a$[ebp]
	call	?SetAttribute@XMLAttribute@tinyxml2@@QAEXM@Z ; tinyxml2::XMLAttribute::SetAttribute

; 1344 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetAttribute@XMLElement@tinyxml2@@QAEXPBDM@Z ENDP	; tinyxml2::XMLElement::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?SetAttribute@XMLElement@tinyxml2@@QAEXPBDN@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 8
?SetAttribute@XMLElement@tinyxml2@@QAEXPBDN@Z PROC	; tinyxml2::XMLElement::SetAttribute, COMDAT
; _this$ = ecx

; 1336 :     void SetAttribute( const char* name, double value )		{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1337 :         XMLAttribute* a = FindOrCreateAttribute( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindOrCreateAttribute
	mov	DWORD PTR _a$[ebp], eax

; 1338 :         a->SetAttribute( value );

	sub	esp, 8
	movsd	xmm0, QWORD PTR _value$[ebp]
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _a$[ebp]
	call	?SetAttribute@XMLAttribute@tinyxml2@@QAEXN@Z ; tinyxml2::XMLAttribute::SetAttribute

; 1339 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetAttribute@XMLElement@tinyxml2@@QAEXPBDN@Z ENDP	; tinyxml2::XMLElement::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?SetAttribute@XMLElement@tinyxml2@@QAEXPBD_N@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 1
?SetAttribute@XMLElement@tinyxml2@@QAEXPBD_N@Z PROC	; tinyxml2::XMLElement::SetAttribute, COMDAT
; _this$ = ecx

; 1331 :     void SetAttribute( const char* name, bool value )			{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1332 :         XMLAttribute* a = FindOrCreateAttribute( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindOrCreateAttribute
	mov	DWORD PTR _a$[ebp], eax

; 1333 :         a->SetAttribute( value );

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	?SetAttribute@XMLAttribute@tinyxml2@@QAEX_N@Z ; tinyxml2::XMLAttribute::SetAttribute

; 1334 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetAttribute@XMLElement@tinyxml2@@QAEXPBD_N@Z ENDP	; tinyxml2::XMLElement::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?SetAttribute@XMLElement@tinyxml2@@QAEXPBDH@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?SetAttribute@XMLElement@tinyxml2@@QAEXPBDH@Z PROC	; tinyxml2::XMLElement::SetAttribute, COMDAT
; _this$ = ecx

; 1321 :     void SetAttribute( const char* name, int value )			{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1322 :         XMLAttribute* a = FindOrCreateAttribute( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindOrCreateAttribute
	mov	DWORD PTR _a$[ebp], eax

; 1323 :         a->SetAttribute( value );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	?SetAttribute@XMLAttribute@tinyxml2@@QAEXH@Z ; tinyxml2::XMLAttribute::SetAttribute

; 1324 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetAttribute@XMLElement@tinyxml2@@QAEXPBDH@Z ENDP	; tinyxml2::XMLElement::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?SetAttribute@XMLElement@tinyxml2@@QAEXPBD0@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?SetAttribute@XMLElement@tinyxml2@@QAEXPBD0@Z PROC	; tinyxml2::XMLElement::SetAttribute, COMDAT
; _this$ = ecx

; 1316 :     void SetAttribute( const char* name, const char* value )	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1317 :         XMLAttribute* a = FindOrCreateAttribute( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindOrCreateAttribute
	mov	DWORD PTR _a$[ebp], eax

; 1318 :         a->SetAttribute( value );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	?SetAttribute@XMLAttribute@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLAttribute::SetAttribute

; 1319 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetAttribute@XMLElement@tinyxml2@@QAEXPBD0@Z ENDP	; tinyxml2::XMLElement::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?QueryAttribute@XMLElement@tinyxml2@@QBEHPBDPAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?QueryAttribute@XMLElement@tinyxml2@@QBEHPBDPAN@Z PROC	; tinyxml2::XMLElement::QueryAttribute, COMDAT
; _this$ = ecx

; 1307 : 	int QueryAttribute( const char* name, double* value ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1308 : 		return QueryDoubleAttribute( name, value );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?QueryDoubleAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAN@Z ; tinyxml2::XMLElement::QueryDoubleAttribute

; 1309 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?QueryAttribute@XMLElement@tinyxml2@@QBEHPBDPAN@Z ENDP	; tinyxml2::XMLElement::QueryAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?QueryAttribute@XMLElement@tinyxml2@@QBEHPBDPAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?QueryAttribute@XMLElement@tinyxml2@@QBEHPBDPAH@Z PROC	; tinyxml2::XMLElement::QueryAttribute, COMDAT
; _this$ = ecx

; 1295 : 	int QueryAttribute( const char* name, int* value ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1296 : 		return QueryIntAttribute( name, value );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute

; 1297 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?QueryAttribute@XMLElement@tinyxml2@@QBEHPBDPAH@Z ENDP	; tinyxml2::XMLElement::QueryAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?QueryDoubleAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAN@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?QueryDoubleAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAN@Z PROC ; tinyxml2::XMLElement::QueryDoubleAttribute, COMDAT
; _this$ = ecx

; 1261 :     XMLError QueryDoubleAttribute( const char* name, double* value ) const			{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1262 :         const XMLAttribute* a = FindAttribute( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindAttribute
	mov	DWORD PTR _a$[ebp], eax

; 1263 :         if ( !a ) {

	cmp	DWORD PTR _a$[ebp], 0
	jne	SHORT $LN1@QueryDoubl

; 1264 :             return XML_NO_ATTRIBUTE;

	mov	eax, 1
	jmp	SHORT $LN2@QueryDoubl
$LN1@QueryDoubl:

; 1265 :         }
; 1266 :         return a->QueryDoubleValue( value );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	?QueryDoubleValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAN@Z ; tinyxml2::XMLAttribute::QueryDoubleValue
$LN2@QueryDoubl:

; 1267 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?QueryDoubleAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAN@Z ENDP ; tinyxml2::XMLElement::QueryDoubleAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?QueryBoolAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPA_N@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?QueryBoolAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPA_N@Z PROC ; tinyxml2::XMLElement::QueryBoolAttribute, COMDAT
; _this$ = ecx

; 1253 :     XMLError QueryBoolAttribute( const char* name, bool* value ) const				{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1254 :         const XMLAttribute* a = FindAttribute( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindAttribute
	mov	DWORD PTR _a$[ebp], eax

; 1255 :         if ( !a ) {

	cmp	DWORD PTR _a$[ebp], 0
	jne	SHORT $LN1@QueryBoolA

; 1256 :             return XML_NO_ATTRIBUTE;

	mov	eax, 1
	jmp	SHORT $LN2@QueryBoolA
$LN1@QueryBoolA:

; 1257 :         }
; 1258 :         return a->QueryBoolValue( value );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	?QueryBoolValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z ; tinyxml2::XMLAttribute::QueryBoolValue
$LN2@QueryBoolA:

; 1259 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?QueryBoolAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPA_N@Z ENDP ; tinyxml2::XMLElement::QueryBoolAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z PROC ; tinyxml2::XMLElement::QueryIntAttribute, COMDAT
; _this$ = ecx

; 1237 :     XMLError QueryIntAttribute( const char* name, int* value ) const				{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1238 :         const XMLAttribute* a = FindAttribute( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindAttribute
	mov	DWORD PTR _a$[ebp], eax

; 1239 :         if ( !a ) {

	cmp	DWORD PTR _a$[ebp], 0
	jne	SHORT $LN1@QueryIntAt

; 1240 :             return XML_NO_ATTRIBUTE;

	mov	eax, 1
	jmp	SHORT $LN2@QueryIntAt
$LN1@QueryIntAt:

; 1241 :         }
; 1242 :         return a->QueryIntValue( value );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	?QueryIntValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAH@Z ; tinyxml2::XMLAttribute::QueryIntValue
$LN2@QueryIntAt:

; 1243 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ENDP ; tinyxml2::XMLElement::QueryIntAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?BoolAttribute@XMLElement@tinyxml2@@QBE_NPBD@Z
_TEXT	SEGMENT
_b$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
?BoolAttribute@XMLElement@tinyxml2@@QBE_NPBD@Z PROC	; tinyxml2::XMLElement::BoolAttribute, COMDAT
; _this$ = ecx

; 1206 :     bool	 BoolAttribute( const char* name ) const	{

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1207 :         bool b=false;

	mov	BYTE PTR _b$[ebp], 0

; 1208 :         QueryBoolAttribute( name, &b );

	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?QueryBoolAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPA_N@Z ; tinyxml2::XMLElement::QueryBoolAttribute

; 1209 :         return b;

	mov	al, BYTE PTR _b$[ebp]

; 1210 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@BoolAttrib
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN5@BoolAttrib:
	DD	1
	DD	$LN4@BoolAttrib
$LN4@BoolAttrib:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN3@BoolAttrib
$LN3@BoolAttrib:
	DB	98					; 00000062H
	DB	0
?BoolAttribute@XMLElement@tinyxml2@@QBE_NPBD@Z ENDP	; tinyxml2::XMLElement::BoolAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?IntAttribute@XMLElement@tinyxml2@@QBEHPBD@Z
_TEXT	SEGMENT
_i$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
?IntAttribute@XMLElement@tinyxml2@@QBEHPBD@Z PROC	; tinyxml2::XMLElement::IntAttribute, COMDAT
; _this$ = ecx

; 1194 :     int		 IntAttribute( const char* name ) const		{

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1195 :         int i=0;

	mov	DWORD PTR _i$[ebp], 0

; 1196 :         QueryIntAttribute( name, &i );

	lea	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute

; 1197 :         return i;

	mov	eax, DWORD PTR _i$[ebp]

; 1198 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@IntAttribu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@IntAttribu:
	DD	1
	DD	$LN4@IntAttribu
$LN4@IntAttribu:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN3@IntAttribu
$LN3@IntAttribu:
	DB	105					; 00000069H
	DB	0
?IntAttribute@XMLElement@tinyxml2@@QBEHPBD@Z ENDP	; tinyxml2::XMLElement::IntAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?Name@XMLElement@tinyxml2@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Name@XMLElement@tinyxml2@@QBEPBDXZ PROC		; tinyxml2::XMLElement::Name, COMDAT
; _this$ = ecx

; 1148 :     const char* Name() const		{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1149 :         return Value();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Value@XMLNode@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLNode::Value

; 1150 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Name@XMLElement@tinyxml2@@QBEPBDXZ ENDP		; tinyxml2::XMLElement::Name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ PROC		; tinyxml2::XMLAttribute::Next, COMDAT
; _this$ = ecx

; 1054 :     const XMLAttribute* Next() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1055 :         return _next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]

; 1056 :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ ENDP		; tinyxml2::XMLAttribute::Next
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@XMLNode@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@XMLNode@tinyxml2@@QAEXI@Z PROC		; tinyxml2::XMLNode::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?__autoclassinit@StrPair@tinyxml2@@QAEXI@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@XMLNode@tinyxml2@@QAEXI@Z ENDP		; tinyxml2::XMLNode::__autoclassinit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z PROC ; tinyxml2::XMLNode::NextSiblingElement, COMDAT
; _this$ = ecx

; 777  :     XMLElement*	NextSiblingElement( const char* value=0 )	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 778  :         return const_cast<XMLElement*>(const_cast<const XMLNode*>(this)->NextSiblingElement( value ) );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NextSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement

; 779  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ENDP ; tinyxml2::XMLNode::NextSiblingElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?NextSibling@XMLNode@tinyxml2@@QAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NextSibling@XMLNode@tinyxml2@@QAEPAV12@XZ PROC		; tinyxml2::XMLNode::NextSibling, COMDAT
; _this$ = ecx

; 770  :     XMLNode*	NextSibling()								{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 771  :         return _next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]

; 772  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NextSibling@XMLNode@tinyxml2@@QAEPAV12@XZ ENDP		; tinyxml2::XMLNode::NextSibling
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ PROC		; tinyxml2::XMLNode::NextSibling, COMDAT
; _this$ = ecx

; 766  :     const XMLNode*	NextSibling() const						{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 767  :         return _next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]

; 768  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ ENDP		; tinyxml2::XMLNode::NextSibling
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?LastChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?LastChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z PROC ; tinyxml2::XMLNode::LastChildElement, COMDAT
; _this$ = ecx

; 745  :     XMLElement* LastChildElement( const char* value=0 )	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 746  :         return const_cast<XMLElement*>(const_cast<const XMLNode*>(this)->LastChildElement(value) );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LastChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::LastChildElement

; 747  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LastChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ENDP ; tinyxml2::XMLNode::LastChildElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ PROC		; tinyxml2::XMLNode::LastChild, COMDAT
; _this$ = ecx

; 736  :     XMLNode*		LastChild()								{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  :         return const_cast<XMLNode*>(const_cast<const XMLNode*>(this)->LastChild() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LastChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::LastChild

; 738  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?LastChild@XMLNode@tinyxml2@@QAEPAV12@XZ ENDP		; tinyxml2::XMLNode::LastChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?LastChild@XMLNode@tinyxml2@@QBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?LastChild@XMLNode@tinyxml2@@QBEPBV12@XZ PROC		; tinyxml2::XMLNode::LastChild, COMDAT
; _this$ = ecx

; 732  :     const XMLNode*	LastChild() const						{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 733  :         return _lastChild;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]

; 734  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?LastChild@XMLNode@tinyxml2@@QBEPBV12@XZ ENDP		; tinyxml2::XMLNode::LastChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z PROC ; tinyxml2::XMLNode::FirstChildElement, COMDAT
; _this$ = ecx

; 727  :     XMLElement* FirstChildElement( const char* value=0 )	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 728  :         return const_cast<XMLElement*>(const_cast<const XMLNode*>(this)->FirstChildElement( value ));

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement

; 729  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ENDP ; tinyxml2::XMLNode::FirstChildElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ PROC		; tinyxml2::XMLNode::FirstChild, COMDAT
; _this$ = ecx

; 718  :     XMLNode*		FirstChild()			{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 719  :         return _firstChild;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]

; 720  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ENDP		; tinyxml2::XMLNode::FirstChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ PROC		; tinyxml2::XMLNode::FirstChild, COMDAT
; _this$ = ecx

; 714  :     const XMLNode*  FirstChild() const		{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 715  :         return _firstChild;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]

; 716  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ENDP		; tinyxml2::XMLNode::FirstChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?NoChildren@XMLNode@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?NoChildren@XMLNode@tinyxml2@@QBE_NXZ PROC		; tinyxml2::XMLNode::NoChildren, COMDAT
; _this$ = ecx

; 709  :     bool NoChildren() const					{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 710  :         return !_firstChild;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jne	SHORT $LN3@NoChildren
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@NoChildren
$LN3@NoChildren:
	mov	DWORD PTR tv66[ebp], 0
$LN4@NoChildren:
	mov	al, BYTE PTR tv66[ebp]

; 711  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NoChildren@XMLNode@tinyxml2@@QBE_NXZ ENDP		; tinyxml2::XMLNode::NoChildren
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLVisitor@tinyxml2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLVisitor@tinyxml2@@UAEPAXI@Z PROC			; tinyxml2::XMLVisitor::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1XMLVisitor@tinyxml2@@UAE@XZ		; tinyxml2::XMLVisitor::~XMLVisitor
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GXMLVisitor@tinyxml2@@UAEPAXI@Z ENDP			; tinyxml2::XMLVisitor::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLUnknown@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLUnknown@2@@Z PROC ; tinyxml2::XMLVisitor::Visit, COMDAT
; _this$ = ecx

; 489  :     virtual bool Visit( const XMLUnknown& /*unknown*/ )				{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 490  :         return true;

	mov	al, 1

; 491  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLUnknown@2@@Z ENDP ; tinyxml2::XMLVisitor::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLComment@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLComment@2@@Z PROC ; tinyxml2::XMLVisitor::Visit, COMDAT
; _this$ = ecx

; 485  :     virtual bool Visit( const XMLComment& /*comment*/ )				{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 486  :         return true;

	mov	al, 1

; 487  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLComment@2@@Z ENDP ; tinyxml2::XMLVisitor::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLText@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLText@2@@Z PROC	; tinyxml2::XMLVisitor::Visit, COMDAT
; _this$ = ecx

; 481  :     virtual bool Visit( const XMLText& /*text*/ )					{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 482  :         return true;

	mov	al, 1

; 483  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLText@2@@Z ENDP	; tinyxml2::XMLVisitor::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z PROC ; tinyxml2::XMLVisitor::Visit, COMDAT
; _this$ = ecx

; 477  :     virtual bool Visit( const XMLDeclaration& /*declaration*/ )		{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 478  :         return true;

	mov	al, 1

; 479  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z ENDP ; tinyxml2::XMLVisitor::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@@Z PROC ; tinyxml2::XMLVisitor::VisitExit, COMDAT
; _this$ = ecx

; 472  :     virtual bool VisitExit( const XMLElement& /*element*/ )			{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 473  :         return true;

	mov	al, 1

; 474  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@@Z ENDP ; tinyxml2::XMLVisitor::VisitExit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z PROC ; tinyxml2::XMLVisitor::VisitEnter, COMDAT
; _this$ = ecx

; 468  :     virtual bool VisitEnter( const XMLElement& /*element*/, const XMLAttribute* /*firstAttribute*/ )	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 469  :         return true;

	mov	al, 1

; 470  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z ENDP ; tinyxml2::XMLVisitor::VisitEnter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z PROC ; tinyxml2::XMLVisitor::VisitExit, COMDAT
; _this$ = ecx

; 463  :     virtual bool VisitExit( const XMLDocument& /*doc*/ )			{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 464  :         return true;

	mov	al, 1

; 465  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z ENDP ; tinyxml2::XMLVisitor::VisitExit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z PROC ; tinyxml2::XMLVisitor::VisitEnter, COMDAT
; _this$ = ecx

; 459  :     virtual bool VisitEnter( const XMLDocument& /*doc*/ )			{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 460  :         return true;

	mov	al, 1

; 461  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z ENDP ; tinyxml2::XMLVisitor::VisitEnter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\simon\documents\github\uclan-sparta\dissertation project\tinyxml\tinyxml2.h
;	COMDAT ??1XMLVisitor@tinyxml2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1XMLVisitor@tinyxml2@@UAE@XZ PROC			; tinyxml2::XMLVisitor::~XMLVisitor, COMDAT
; _this$ = ecx

; 456  :     virtual ~XMLVisitor() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7XMLVisitor@tinyxml2@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1XMLVisitor@tinyxml2@@UAE@XZ ENDP			; tinyxml2::XMLVisitor::~XMLVisitor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit@StrPair@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_$initVBases$ = 8					; size = 4
?__autoclassinit@StrPair@tinyxml2@@QAEXI@Z PROC		; tinyxml2::StrPair::__autoclassinit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit@StrPair@tinyxml2@@QAEXI@Z ENDP		; tinyxml2::StrPair::__autoclassinit
_TEXT	ENDS
END
